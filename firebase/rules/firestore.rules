// Developer provided data is surfaced in request.resource.data,
// which is a map containing the fields and values.
// Fields not provided in the request which exist in the resource are added to request.resource.data
function requestData() {
  return request.resource.data;
}

// todo refactor this, atm makes no sense - check usage
function isLoggedUser(email) {
  return request.auth.token.email == email;
}

function loggedUserIsGuildMaster(database) {
  return "isOwner" in getUserData(database) && getUserData(database).isOwner
}

function getUserData(database) {
  return get(/databases/$(database)/documents/users/$(request.auth.token.email)).data
}


service cloud.firestore {
  match /databases/{database}/documents {

    // Start here. Keep your database locked down by default, then add rules to grant access to certain read or writes.
    // If you flip that value to true and your entire database will be open to the public.
    match /{document=**} {
      allow read, write: if false;
    }
    
    match /{document=**} {
      allow read, write: if loggedUserIsGuildMaster(database)
    }

    match /users/{email} {
      allow read: if isLoggedUser(request.auth.token.email);
      // if user has those properties set to false this rule will fail, they need to be null
      allow create: if isLoggedUser(email) && ! requestData().keys().hasAny(['isOwner', 'isDev']);
      allow update: if isLoggedUser(email) && ! requestData().keys().hasAny(['isOwner', 'isDev']);
    }

    match /users/{email}/tokens/{id} {
      allow read, write: if isLoggedUser(email);
    }

    match /lessons/{document=**} {
      allow read, write: if isLoggedUser(request.auth.token.email);
    }

    match /lesson_instances/{date}/instances/{id} {
      allow read, write: if isLoggedUser(request.auth.token.email);
    }

    match /users_history/{email} {
      allow read: if true;
      // allow write: if isLoggedUser("test@test.com");
    }

    match /customers/{email} {
      allow read: if isLoggedUser(email);
    }

    match /subscription_plans/{document=**} {
      allow read: if isLoggedUser(request.auth.token.email);
    }

    match /config/version {
          allow read: if true;
    }

    // https://stackoverflow.com/a/41922261/4349619
    // To allow adding new nodes, but prevent deleting or overwriting any node
  }
}
