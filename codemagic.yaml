# Automatically generated on 2020-10-10 UTC from https://codemagic.io/app/5c6d213063e304000cb3f99c/settings
# Note that this configuration is not an exact match to UI settings. Review and adjust as necessary.

workflows:
  tests-only:
    name: Tests only
    max_build_duration: 20
    environment:
      vars:
        ANDROID_FIREBASE_API_KEY: Encrypted(Z0FBQUFBQmZuLXJzN25BOUlLVFBQaVZ1OG94V0xhSGlpOTdtSHNleEtUR09aUldWazRSOVh4NE41REVfOVAxM09ocHBtMFF6c2ZzRjZMMnBmRmdPOVBPZDBxNFpRUUhOd1BCN1I3WHRHU0N2Zk5yM0VmcDVUUTVXM3JJeFgzaGxJRVJ6TWZfVnljbzA=)
        IOS_FIREBASE_API_KEY: 'not_used'
        GCLOUD_KEY_FILE: Encrypted(Z0FBQUFBQmdPM0xlcnVlOU1HSXR5Y2NpUFdkNTJ6REd1NExHR1VHekJKTmJPZlFRQm90TnlLRHpqMW40Y2N3dzJvMFFicTE1MWRDUGpCbkF2NWpnZDYybEZ4aWQ0bldGdEs2Q0o5dTFBMmhXWDdSMXpBSUppRlBFM0l3OFFid3BTMWwwTDdaQ2NzV3VDVGdmNzhCNkR1RVZmMV96YUZTb21VSVBMOE5xYlB6RW40RkFrMURuOWhtTnh3Z1hwQ1dTWkRmN3NtT0N4cENubEc4MlFnT0VSSDNpZTNmdWlLbWQxVjY1LVpUeENQbzd3RXJRMW5DSmlXMEwyMFdsZjFnOEEycWhqNWtsRFRzM256T2g1ZnhQX19OMFR2OEpHMVNhOFZhclkwZzdnWFdpcXgxaGp2cVpDSDZCRngxanNHVkdYUHAyQ0g2dUEtQUFhSTBjU2dkTDRuZTRlN21QdlllUmtxYnZSOWcwQmNRbVg2Tk9OMF8xN1Y4cEJXVllCWUxzN2xrZDBZTlRFQXliQTU4SlhGejYyVTktOFNoLUtGMkdGak9uazhDWDllZ0ptYktqaUQ1TVhqY2tueFN6Ykg1dk1lTnYxS3lzb0xuMXJHeUlFdkRZTl9YSXZRR25aV1B5bVdrYmFRUTgxWHV3SzFmc25kVXV1UDdNYldKLVN6R0pjazZmRWhJeGZDUWYwSkZObUw3bUxna0p1bUFJM3JvRjdVaF9ZMTJLOWR1cEk5RTFlT1RMNEFRNFZHajh4RWYzRHpJN1lGdUtoNzFES2NFemxuUnFYN2lmR2lIV3lrSHI2UXZwaERrekREMDZuX0pCaEp3dzRZWDFTN0xUMFJQQkU1SGliR2lxZTFFVGdIejVzTi1Sb1AtbHpFQ0ZnWFBKcWRReUF5N3JjZ1pVeVk4LWpJU25FVm1pQXo3YkhtQXgyblROVkZ3bDIxMjFVNld1LTEySmgxT1pwQ3pFNkZvZTVtVjVnZnpwYWM4Y19qcWdSV1VKek9OU24zNnZuODBKNXl5VTdQenBJN0dpVmVabV9NQUJ2VTlqWHQwTlpuV2RjM2hTOU9DblRpQW16LUYzdFFielR4M0FOWEQyVkZKRHlKN1JmWTVSR3FlczM3LXlnb3pjMFZySU56aWdGRlE2UVI1TV9wOElraENEZ3JlWjczX3FPcGFZTzBxeFphbUFkdTlSUDNQSXhjYVRIU1AwSmE2ZXpYdFB3bXJiUFZ3cWtsdUI3Z0Z1YmNYNFdSXzZZdEhrTlpBTDJtbkUwWE5wQkdyd1owTHV0V05jRm5obmRkc2dadkRrd0MwQ3FQNkstbnRTOUlRTWFmVVJidnFvMGthQmJxMVRKWXZjOVZRVV9OSjJoM1RCWmFlLWFsenJBVmN4dnFDVXJGUndoWXhnNjh4YUFBaXd3OExOVVBCRVZ3TVRreTNsZWlIOHdZa1gtN3hKRl9laHpzbmdrV1U5ZU1zc3JzYUdNXzU1S2NxRmtpdDBEaFR4Vk4tQkNDVWRsd3VjRTFUcl9VcHVpZ2F2bThRcU4ydjlBaWpGZEEybEhQR1pFMTNDYmdCR240RlBsQXFscS1NYXNxN0QwWUw0bGhCSEZzR2JqYjhHRkRQeHV2ckVFTzJMT0RHTGpDQVM3NTF5MVRwQ3JBXzNtLVkxWE1mTWpfdG9lUTNYdFg2Y2Q1ek1EdXRrVHJqRzVRNjVpTDlBU3dOdkhScFppSWo3U1lMYVZoZ3N0ZGJSSGdMRWYtN0J3UTNjTEpXaUJhWWlBZmxnTURidVZ3clBWWkNzanpuODROSXRsTTJUQ29MOHNrNHdrSnFlbk1zbWtRb1NDNlJsODVFSUt0eU1nS3AtUFBnNVQ3SGlUMWx5SmZVZkJFWXY1ei1fUUpQdHhSbl9NUHV5MnN1WE9ZSUs1UUs0VXZjZ21RTkRhX3paQXBuM2dPSUVGYUxOc0J0cGRmWFdUM0JkVTM3RW5KeDhmUFdtZkdjcjZJbl81UXBJQ3JuTUd1emN5VU5yWTA3ZENXYkI3VWdudUFCR0FjWWZGUFNYZl83UC1wTURnUnl2aHA3dlc2el9jUHNoa2NlMXpLSmEyN3d1UlZGdWNwdmM3ZlBTLWNsYktUU1VjY2lrblhPTzlyc01kV3R6RWtFYjQ3MWZDMThpLVYyNXYzVU1VdkRLbVl5RlNiT2p4SWRIZk9kMUhRR0dYN2VaZUM1Q3RWWmxKSkRSTkpJX2Fsb00wWlFnUjNlak94Qlh4ZGdIYVBFVUk4bU1CY0Q4aTM4YnlQRG9BaGtoT0VTejM1R1dSY3E1T1NYa2FtNVlnMDV0cW90LTVLYUZ4NW5OVkdQUGNVMWN0eVpzaDVTMDdDTGdjbmJfbkJ4NWZTT1JXMWNWeHRPdEVyNnh4U3M0SUlNdUc5b09pa0o5OG40N0lvZHR2Ti1ZMk1Bc1dIT2U0UjB3WjUzaWRjR0Njdm10bURGcHMtYkx4YUNYM2FlZTJfNUJwMkhVSFFoZE9kTmJrZi1fa3gyZlJuSjBQTzFPTWo2VzhFT2ZEbVhuT0FxVV9ILUZ0VW9SWFc5N08tWmRWckN1TkVnRGhDSmktbExRX203RXVmUXJKaEw2T0diTzdFRjRNanRhQnNyTU16cklSYzY3VDdyV204SGFoM1NuSFhVbVRQUElRVTlqemowb0ZLaDJDbkszU2kzQlR2YlBucDRYUVVXVmlQMEprTmR1YkdvYVI3N2pCV3NhT3VJQ1N5OTZrU1A2WFNtMFJwc1JiRkJjcFlJb0ZNNHcycFhzcHM0VEc2WXdlQm9NMFg2WXlyRElNcGREc2VpYWJWeG05bkt2VjR4NzgtNUdZX0plSkx4MFI1TGVweHhMQjIxLXhnSllzMDV5N2psME0yWVhFc0hSZFVKWHV6bTU0d3BzVHNHSV8zRnZNWFFYc0sxRTNXZzdEcG1pQlpwNW5CMWl5clV3bFphUjRTNFJPWkdDeF9xbjAwUVd1Q0NuakdudkYwUkIyY1BCeVBxeE5GS0wzNmh5b0ZWeUNEbjRuREhzTUxPOGFrdGJxNmVFZnFSU1IwYTF5VUViNGZFNUxhZWExM1REY0x6NDJZeDNIeFl1NVgzbnBHMHp0LTJGb3pyaVFFalNodnJVSWwzRDlBQXJjNFhzZFh0ODdyQ1hnMkhKNEd5RFF5eWRMbzlna2w1SUdQcTdXTzdWSm03VXVCdjJjdm5kU1IwQjB0QmdmNzJIT0FGTlBkYkxtSzFJdFFPSVpUOGJ3MDRURHQ2cjlIWTRtY0ZjM3U2dHZicUZveVZ4SzByRERacDJ2aUhRTGFMREU4SFNnNUE1SllINm4zMlFmUktsWGlTTTdpTDVHcW1PUHYzVUpSUzJINlpLVU1DOUVFNkh0NWF5VG9zMVp1Mi05QmVxS1dqWVVXRnFLMnNuc0xmNVhQWWRLVjVuZ0cxeW1TUFBYREg4VzgyLTVPUzNCbWdCWE9Vb1NkUkg0TXBrUV9aUnU3YjluOUJHT2FtRjlFWUl0QXpNM1dTSTdPUXdic2RpM1J5NWEzN0NpRGhBcFYtQ042amFFSmtzZDl4Mkx6MTFOWFRHTlQyN09RUDlqMk9NNDNKOWs4WDZuTWo5RTRiVVp1aFJKQzBKSjlkeXRkcFc1UGg4SkNTSXRMRDlvdjk3QjhUWDA1STNNLWllLVJ3NHFiLWdOWTJFVVp2WC1TYWptVlFYZFRuRmk5N2FJQTFTeGU0bS1YdEZSNkhMaHFMYms0NDVsbWVXc3JvYkwwbW9YWFF1OGxkZEFzdnhzeGhldkdVTU9hQ0gwV2VnWHJuSkJkT2ZxVWE4cVlrVDdWUmNhdFBXalV3cGF5d1pQc2xpWmktci1LaGNwRmdfdkdOMEswUWZyZ0N4TDNieXhQdFNHN3k1RWROXzUwSmJSYmYyWjhkMk9jQkZhUURjbVFlZF9RNDZjMUVBVUpUcEYyQXVnbm1BcXFKM05pZkRMNTVYT2t0UVBrclFqRU1aZDhlZ09CR29QT0FIWldBRm5UOEp4SzFqMlgtaWpXS3Y1bldjUUVvNU5VQlgyZ181bGFTRGYxTnRvanhTSlJyOGlsX2dfbHRMNUJ4RE5hdGVpNkpIaGpqcEU3NTUwV0RZTXdFRmZiSGxSeVhZT1RWSW1kbEtXTXZhaTZ4aHZYYUE3ZVVLc1FZQUtuN2pRa2FsYUlJNTFaeTZjLWM2V2J0QnJDUU5acXNDU1VFQzdhN043Qy1JQUV0VGEwVzhBMXA1ZXY4SU02QVZjMGVzaE5LdE9lbkcyeExYT2FBSmVXT0EtTHd0X1BlRVgwR2ROZWpyVkdsSkFBSzZtUElkZ0lUbFZmM1hNemRxYS1KSXFpMm85cjhUajFhOXBvbTJna1FZVEdRWmhDZ05MTG9hbTR2VnowNmRKaUFZM3dZTU5JV19kd0JLS2pVc0p3NGNRZVpQNlljbE1GWmtJRnBSZHM1MTNQVDRJUmVYTWNQUXQ1b095NW5KVFVzeklzSUNyZDFncjJlbXpSMUhnak1pOTRweGZYRkd1SjNBbzg4aER6MTZsbHoxaFY1bldjM2xGM0dDMUVZQjlSREVJWXE3ZlJWUDczUFpZY3VDcHBBLTgzVHk0V3VUUWVicS1hUjBESV9NaXFJU0hNUFJueWZmZUVHVnhWbHAtRWdVS2NJVVY2UzJ0X1U5d0tjeUl0WW5mdHNZX2lxWnpwT1MwNHQ1SVZkbEpwMDhMT3BhcUQ5cEx2dUNWQlRFMzFtelN0ODYwR2g3eHp1czh5OWNPUXNZNzJPbEJvRWVVbmxFMWktejJTLVJmVTctWlRLY25xcWYwZUtkblR6NHVKcWlRTkk5R1BhcjZURnRNUVE1T2FYMUM4U3VlTTczazR5OEFVeWJEbXY5ZzNFUXdWd0J2aEVGbmgxT3hiclBmNnNBajdhLTU4WE5FVk1CU3pISUVCUlRZU3gzMkJmcjhUbUVyTnY1aG94SFJ2RUtrYTFrT0cwMnhjalVTWWJ0Ul9VWjBnZ2p5eU4yLWdqNkwybGdDVlltTXlaU3ZZNXNrWXFKcTRMRHlYaV8wZ2c3RmV3UHVKclUza1ZKWkF5LUozZkRPVkxISVlsWTBIMW5mZXlUMVdJelh1UkNpZjF6b2lXS09XMElEYjM5NTRZaXZQQ2FfWmpkTzdPQUJDbkdfTFFlZkJKdXdJWE1iM3NKb0VSeS15TFhYMVJFTTV5endXVHNuTWQ1aWl1ajhOZlhoTlNEX0VzX1EtM205cTI1WkwyeEU2NHBGRVJaS3hwU1d0dmJadzI5ZEY0S2NIU253NTdsSFZJc3dESHkwOUJaS21fR3hCbGpyLTBMMV80Y0hQc0hkSURZdENLcGNYWGxHa3ktdTJLNUozbFZPc05RQ2t4dm5lZGhpWWlUb1k5LVZ3QUh6d1hVM01uYUZsNUs4X0RZdUZaRk1kVXRiQ01WYlpicFJUUkJoVUxkZndIblZCZGJWX3I4S2lleGIwcThzVy1JeGZ2UVNTZ3lHVDJnLV9Ya2dKb2NhTWlRMXMwanZuMFhXVGpfUDlVUkRUeHhkSFFXZVRXdmM4eWR3Yy1abjRjSlZ3PT0=)
      flutter: beta
      xcode: latest
      cocoapods: default
    cache:
      cache_paths:
        - $FCI_BUILD_DIR/build
        - $HOME/.gradle/caches
    triggering:
      events:
        - push
      branch_patterns:
        - pattern: master
          include: true
          source: true
    scripts:
      - name: Setup environment (dev)
        script: make set-dev
      - name: Installing dependencies
        script: flutter packages pub get
      - name: Run analyzer
        script: flutter analyze
      - name: Run unit tests
        script: flutter test
      - name: Build test APK
        script: |
          pushd android \
          && ./gradlew app:assembleAndroidTest app:assembleDebug -Ptarget="$FCI_BUILD_DIR/test_driver/journeys-v2/app_test.dart" \
          && popd
      - name: Setup GCloud
        script: |
          echo $GCLOUD_KEY_FILE | base64 --decode > ./gcloud_key_file.json \
          && gcloud auth activate-service-account --key-file=gcloud_key_file.json \
          && gcloud --quiet config set project checkin-b7e8d
      - name: Run e2e tests
        script: |
          gcloud firebase test android run \
          --type instrumentation \
          --app build/app/outputs/apk/debug/app-debug.apk \
          --test build/app/outputs/apk/androidTest/debug/app-debug-androidTest.apk \
          --timeout 2m
    artifacts:
      - build/**/outputs/**/*.apk
      - flutter_drive.log
    publishing:
      slack:
        channel: '#checkin-app'
        notify_on_build_start: true
  release-android:
          name: Release Android
          max_build_duration: 60
          environment:
            vars:
              ANDROID_FIREBASE_API_KEY: Encrypted(Z0FBQUFBQmZuX2JKZnhnaVJzRU1QWHp4emJubGZQNEMzMm04QktpUnhzNmRuR3lyVmxfWW5BQWdMQ3hSSFJ0Sk41UzVDNExNelhvNlB5TUtFMFhIaUtTV0s3UXBvLW51QVZQc1laNHdOcVM5M3hpV0RoXzBfR3NjTVhEUDQ0Mm1xLXowWnU0b2o4YUQ=)
              IOS_FIREBASE_API_KEY: "not_used"
              CM_KEYSTORE: Encrypted(Z0FBQUFBQmZvQ3lpY2RYQTFhaDMwT0QzS2NFMGNXdGNQTkJybndqekQwdVE2S3pJUWh4ZENXeVlxU1dhMnFNSWxsYmdmenp6a2RVeUk4bjYxZnNFcHBWWFYxQ0M0YlE4TU9VZC1uUXdrcjV6WncyNzQ3eXlHdTA3Qmo3cXhBSFJQTTBlREtOeWlzN3FhOHkxTExnN2pDNE9OQ2RIcVlzYk1LTTU2cUFuZWM2N09uMmJQd0NXcWwybGZlQ29qTDBaRWR3STU2ZmNfalZSNzV6ZWJ1d3BicmY4cmMzT3V2ZFBDZEFMNTNBY245LU5SeXlQdG1Kd1VuV21IMldYMmlmZDN0VlFxWHRCTDZmWWVRYktxMDdnc3h2V08zZFl3SlRQZXE0dk1FMWpkUHNiYjFueVdmT0R0WjA4MTFMdkw1QUN0Z3VLQXJneHBTRktQZlNVRHlTNHpYY00tRTdGdEpsQWZvNlhwNl9UdzFwcmdUU1JnWDBtdmR3V0dlSHBBVk53bGE1OGhmMnI4WXp6NldvbndqZkNXTWl4NGhwN2dwWnl4QVFTRlllZVoxMFg3MnBzOVVPNUdSUmR2Z2pDRTFUSXlZc3pXSHdxbi02bUVZR2pyb0huOGxnc2F5Q1RfNVdEZEdqOFJzdVhOMEdfQXl6cGVNSWRWRnJ2TFdhbXgtcGhYVmt4VXJfY09xTjduYXhlNkFPdzJkQzMyMGplSVprMkhiRVRZeUFPdGRwd1ppbFFtRXROX2NwYjJ6NHZuZTJsQVo2UW5UX3hMbS1aM0ZUZVJQVGpERE1CbDBfTlFIek93YTRkNlBIWENudVU2ekVTUGxnZW1nWHVMeTI5ek04bnNreGJ2czB0NjE0cmg5OTdEQWxWdW9UZ0trcVhUVVZFMDNpa0U0eGVhY2J0UHc1aTFYMnhuR3lZMVVRa1RJazhVd2hxM0FYaXBlTUZDT2o2ODJmS2h5U2xLd2RZVXp5QTlWcVNNRDVrVno1cnpCRkZQeUlNMFduZWNEM2V1MzgwSTNDTnF1aThQamVkQU16ajk1YjhZVjZRcU53em9JY2lQUG1sRGdwOHUyRnkzYmdrR3k5MGNFUFJVSElLZHhNSnlGb2JudVhMSk9sR1p1WVg4THZJVFI1aFBxeXlTU2UyM29UVURCa2xqYWdha2hIZ3NSS21aazMwc1VBaHg4YkFkUmdtX0FvVjRmR2dJRHlGLWFRVnJsM1F2a1V0WXRCdTN4czRvcEtGMVRoZzBGc2RzbHRjMjRUZlBGVmpQR3RQYjV0SURaMG5KWEROeGtQZFM3d3RrZzZqdmN2VjhyamE2THVtVl90M0JRNUJtNTB4ejExNHE5U0NnWklLODFoSXJfTlVXeWljRW9hUnpULWUtS19UQjhLbWpDTU1pdXRQR3JmRWFfU1ViYUF0cWxlNG10SlNWRDdLVndSZnhtQnE3X0U1cWdXeHdudnp0WWNkUFhlNVlMX2Qzam05V2ZsU1h4NWFqeVpmeDJjWlpWMUMzQ2hHS3JiRVdqUUYzRWZJaXE3RWJtdGR4MVRuOVRDbDZ2UUV5cUtPWGZXc3FhXzBKbjkwNTFlT0ZkdDFJTDJkNUxrZ0oweHpXM3YxNnN6cVpjWTI0RjVrYnZnazZHdEZMWGQ0VmZuNTNSS09sa2x5Z1dVU1dMOTFKdWc0RHdSXzA3SFg3MGRkc3NNemMteGpUUXVWa2ZaV2pwV3lLTjhiWTNlVW92aThlUE5aSkNwVkYyZGl3QVZKVk5PSHI5aHJzNlFHM3hibGViMENoNHgweXpBczYyOVdrU1NOdHFFeHhOclJBSUtPXzZrNE8wOFZwR2s5ckZCNWpOcEFjQ0NrN2lVTjBsY3dUZS01ZXc4SEc5QWZjSFlSeWRpQlladFVlSEZ0NTdISUVQdUZiWEdDR3JNSFI5V1pVRHFVS09XMm5uTUxPbDhVY182eWxuQkJsblBVQ1p1aUxrel83RnotbzRMcVp0QU40QUhkVEV0ZFpabFphZlNFekdZQnpPbmdIVjdYd2ExN3ZVRXh0VkFCZGo5T20zb0kxOU02VUxnMFo5V084di1IOWZBN1B2NHAwQ1dKeHkxanAzdFpMZGJyU3BRWGNPY0ZJa1ZzMnFGOWs1b3d1WUtSd0lkcTBhSWh4cTBiVnd3X3prT3V6WmREXzd5eHp3SXloM0RJc0ZFS25yT3V3U1FxbHZGSk0xWk5mM2RIRWJ6T1RVWFdPMnpQRE5Pa2Fsa3Q0cW9zbjFVWDc3bU5WWmV6Mkc3U1RITHVrVF9qWWtrY2hpWE95SktWcEJUT1k3elR5bE9xZHBScmxkeXg0Rm41MGo4eDFEeUhsRlpRdXNmUTdwdXV6UHRIM2hpUk5lTmRod3VJcG9CeGZFbWZZajRfVko3d1Ric1R0azBqRDUxUXpjY3A2R2FMcDNSZEEwTFVIb1c3Q2VwYVlGbjNvdHFZX3VhS2NMbVVsNnBLc2NzQnJ1MUhSMDNNQ1V2TDdsTkotM1hkSUR4QzFaWE94TjdVanhGRjRCVDRZcGRsOHh6R2ZuSzNSd001UkozRVJteENIaURCWWRvZkJnVE9QQ1RjR3ZQVjYzVC1uOGVOSWdKX0FQNmpBM2s4UnltNHA4NkFuYlNRZXF4NVNMLVg2eWdQWEV3dlJxbHpYbEY2WktDWXRMa1djak9zZ1lCWG8wMDRsZTNjUHZFcUYtLW5Kb196S3RRbExyWEVoc29yTU1KVDU0WnQwZnR5RzZNemJTWjN4S1luUWw4RW9BZE5GZlRGWTlMNjJ5dTZQU3ViZjgxejJhYTV4dmcxSEJ6Z0ptMS1fcGV6UnNHZFg0RnpsdjBZXzJfb2xEd3REdWdUa05YbEctU08tZDIyWFNrUHNuZGVEM0FuUm9mUzdiRFNMZVFpOXgzWFBGejRpdU9FbnQ2TXdONUxtMkFJWktFRnA1ejhISWhkbTdIVVp3cjgxSzRLVVpxSzhQNTJ5enBQYTZ1SEhvWkp0WVhud3E1N2dkMmFidGlXUXJ5QS1hOWZOUWh5Z2tsNWw5NGd6YjZvZFVVSmR2a3lyMWlUQnlQcmE2ZFBVeVB4VE9Hb1o5cE84RGlhblhiaTY0bTdBa2lqZE9XZEtyajVIVk1uS3RPRkhRRGZOMzRrVzUzcjhPQ2o0NWVlQjFiU2JlOHVaSE1STkNXdmF1c0xEUU9SY2FvMVFBc094SDVYeWdGejFMWW9xQ1JxV19GYjJUTS01Z3ZtbDlIYS04elRFZ1czbkI1VnQ4N0FXSGVTeHBWbko2c21Tb1EyaEpxRFVuczM3T2taMUF6ejJEeldzbXBHVVRuMkN0TEN3dUxlQng1ZUZDMnlmXy1qZVY2eHBHTTRyTXRlREItY1FWR25UZTFGX1JLYjIwRWdBcE02a2VXU2V0Nk1saHVJdE91S1dVVVJXdTRabGhJeHBSRmVuQzlrMnBvUkN1eWRfUE42R3BuX3BtbnpwRTltZEZXeTdieEIwczJrVHFieklVVk9XWWZTU1dPNjdDck5GUUFNdHRXOFM4Y1JNbmNUa0Rfa25RQVRZaEQza3paMHZiWlFIVFgxM2o3QWNRUGxTNll3Snd4SWRLVXhZSVU4MHhiOUtVVUVtU2pDb2RBQWYwV0VTZzQ4YkpIVVM5QXRNWUhUTHhTNHVRTXZaRnBheGZfT25Ja1pSVy1iNGxUNzNXNXJLSkdJV2F1RW1CZ0NlZTYxVnQ1X0RiLTQ0T3h3UFJPNXZfNWlLUmxKc29maEIzSGR1XzF1TURWbzB2YmI4MElMd2RoSngzN1pvVnlfeHVpQlFuRWt0UWxRbk9jbWlIMmxzUHc1SEM5eFFZVnJJQjVuaEhqejJYRnh0dXRndlVLWmk5X194MDNiMWptRWZINlBxbDR4ZTUtUU1vcjhCOXNlSTQyYmJQMk9EXzk1aDI1SlFfVkphWEFka01Db1RSWkFaRFpVamU4blpHLUVZOTd1TnI5NXlfSG5VSXE1SWd6MjZRT2RHUk8wbFotRkFEVGtJR2tNSnJSR2g5WnJxZWkzeTBRMDVEUnUyWUMwaWx3R3JFbGFPRXdVZnpJQlZnSmdfRFBWVE5XR0wwVmZ5NlVSa3NpQXFzRW8zMEJWRWVfOVBpY2VVbVc5cXFhdjZlMzZ5TUtPWDBtS0l5WlRrbXNZSWRIVjRTVlhIb08tUE44NDFhQlZJekZqYlpreTJxOFpTano4WEFBTW1Jck1oZl9uemVUYlpZZjZuZS1ILXUtX0Zmam83YXB1dnpFUFVTRXZNbnluNDhKMjhUS0d5TDRPalFkNG5xN3l4MzBmdVpSOFBZRG9ISGptSkV2RzN3dHh6VlFtd08xNXlQVE5fTFRkU3BlbnU2MzUyTVJuZ2FrMldRZUs5S0pyVERJMDRGeDFFZlRPN3Q4TFg5a2lWdEJvYWZwZUNZSU1wTy1FamNyc3RhZlJma2ZWS2ZXSlhFa1lKQWVOaGJmQWU1MlJmTDE3NHhoVy1XNWc5aUEyVVVtTWVkQ2JkM0E5TEJ3VmJYb0JTTU5aMjd1aGpmWHBDbGJUNlRBbERyYXRzN3VaNXE1U2Uxc0tMVEhGcEt4TUQzQWZtd3M1R2UyQmR4b3hRWkJ3Y1FvRW1wUVhycV9ieGVMMkQwdXNOVG1NQ1hsMWF6UGhFbGw1SVZtYnBkWDVldmV0VE90ZkRucGNXbjhJZXhJRzhla29KSGltYThoWl9Nc1NBaGIwc1VuTzU3aEJvN25pT0FkTkNwQ3ZSSi1sNHlONGN5Q29yYzRJWlowaXJNb25BWXdkd0QyaE96SWxUcHpKZ3ZGS0E0U3BOczJTNDdPUkxyOXNzT2NJNzJYbjBpdmk1Zk9BZHJXRXdGeGRRTFdHN1N1NW5jYm0yMHVOUDJOazcyRmt1Wjd1VEVXMHNMN0lEcThWdFUtYjJvWUE0WDZjVXNScDRXWkFobDdZUDU4TTQ0OVZvUlI1ZHJnUHp2QTNobHR6VGFCVzEzSFlqODNBVXotdEhON3FEOXRVdzNpa2Rla3d2TEpVa1dQQU8tQ3EwdzBtWnU5VTNsT2ZPcGx2dERPUHFCUTBTUFJETFREVFFtZmwtbnlOMzk1WlB4QU4yMElmNGZlSFNrYVRmNWZOalRaS1RGRnpWSk5Cdk9ab3ZRQlV6R1hlbm0yTDFkMUgyODhXNUlRMWdlcERCRlJoazNGcDJrbUlsWWpkdklQR3ZOU29oTE1GMnV5UjhLZHBUSVNxMmF4RWE3WFVBak5oTkZRaTRUMjd5OHo1MldMR240M3FJQWdlVGhNeGh1RGE2OXgxUk5KWV9RV2hnQkFWZmZhd1VkaXVDY1JldlZXUGU4bkpZZnNpNGRxbDhsVXpaQm9BTGFjVnA2MUQ4WGZ3ckZybDhqUUFsbC1SNHAxU09zSXJXbzBuZ0c0eG1qb05fZkpLYjZ1bVBmeUZrMjRzSURic05MRXJScW95M3RMV1NlVFNvMWVtS0tiZHlOTFhxbEhTaGt3TG5hQVgwQ3RVOENqal9jMXJWckZjYW1aSmJtMDFpU29Gc2s4UHdKV25nMXB5dmdaa3RFOWRkeG1TNFprU0RGVWYyWk9sSnIxektkZnVqbEFhY21Dc2h1SGxOV3NCbGNobUN6bUNWS2xyOTdzYk0tVlFFVVVGRjI1dTNVMloyaXRxN0ZmT3d2V2Yxb2VFaFBXaEdVRENnNEpvY2NfMjNGR045RGZtZ0ljbEhid1lUMU84SnYxWUtQUEJ6T0NzXzZuYm5JYWxLay05eTFNN0xBQmZ5YjVWR2w1YlVEeWVHWkh3X3RGdUJLemZzbjNwODVuMzZkTzZjRlpsRzBmdTBDT2tGTUVMRjdBaEMySTBDeDZmaWlpSV9pOHhYWkZLcHdFYzlBWHdXZ3RrcGtNaE5fUTZzQk1hRE9mWXVhQV9vYno0c1FKalhFYzNvTVNjdWllMXBpOXU2cnloRmtieEJyTE5TT0RWTkhQdy1vVnZiXzUyNlJJWDhnTE1fS2FvdFhyYy1VbE1uMHVQdkJZMU1NYU1kSGZrcmJENEFMaUlMbDhoQzVRcHhsYU9vYng3SG8zaFVZQWJ1QUYzRWJNb0dIeGpqMTlBUVByWlZmVXZtajVmeWdCQUx3elVKbS1oME9xRnQ3NnIwcmJFaGU5ZzkxcEUtNmlmYV92d3BtdXZFQnBQSFhDV0NPYXdvaU9LNkRweGJ3Q0M3SzVTVGZHRlZaMTNTeDEzNXVSckZmcnc4bE0tZXNZamplbkJVTThqTlk0cEo5Rk91MGExYmx2WEZncWdUc2N3YXpQZXNkUTRsN1MxZ3NuSFVPVUlHRlc5WjlpMTY1TldwdVBuYmJhWDZnPT0=)
              CM_KEYSTORE_PASSWORD: Encrypted(Z0FBQUFBQmZvQ1JmWTl3dTFlVTJyU3hma09CZ3ZhWk5OejhacjZiN1dkYWdRV2t1RDRCNkpGU3FXUG56SVZVb3UwLXo5MUE0N3d5RHJhZ2lCd0Q0M2hGLW1TbUNUcmRIcVlGVDBydnFYSFBZYmMxZXExMmR5V2ZzUVhJZlRTQ1hvNThBVnRzOGtQRnI=)
              CM_KEY_ALIAS_PASSWORD: Encrypted(Z0FBQUFBQmZvQ1NuUFppS3VrWmZUeDdaN1FXRXJjSmZ6SHhwY2dUVVJpZG45RERWRGYyT0VjbXV1aTNCTzhfUHBwalpCOGFUYndrRmhtR2c1VjBibHZyZVJqX3puLVRnMzV2dlg5NlNrTjdFcjZ3RnJqeFdVVC1MY1dDdG9CUzM2WFF3dDIxdTM5MkE=)
              CM_KEY_ALIAS_USERNAME: Encrypted(Z0FBQUFBQmZvQ1RDVVkxSXpFUVFwT3VublQzSC1ubDVVeFIxNUpPczFlRHNkb0JvRThPcXZIR1U4NEVjZ0JMMng2dTB5R3dlcGFhOTU1ajJ5aGZTNXNkeUlpQUdsbGVvcXc9PQ==)
            flutter: beta
            xcode: latest
            cocoapods: default
          triggering:
            events:
              - tag
            branch_patterns:
              - pattern: '*'
                include: true
                source: true
          scripts:
            - name: Run doctor
              script: flutter doctor -v
            - name: Run emulator (Android)
              script: flutter emulators --launch emulator
            - name: Setup keystore
              script: |
                make set-key-properties \
                && echo "flutter.sdk=$HOME/programs/flutter" > "$FCI_BUILD_DIR/android/local.properties"
            - name: Setup environment (prod)
              script: make set-prod
            - name: Installing dependencies
              script: flutter packages pub get
            - name: Run analyzer
              script: flutter analyze
            - name: Run unit test
              script: flutter test
            - name: Building
              script: |
                flutter build appbundle \
                  --flavor prod \
                  --release -t lib/main_prod.dart \
                  --build-name=$(git describe --abbrev=0)+$BUILD_NUMBER \
                  --build-number=$(($BUILD_NUMBER + 1000))
            - name: Generate signed apk
              script: |
                # generate signed universal apk with user specified keys
                android-app-bundle build-universal-apk \
                  --bundle build/**/outputs/**/*.aab \
                  --ks /tmp/keystore.keystore \
                  --ks-pass $CM_KEYSTORE_PASSWORD \
                  --ks-key-alias $CM_KEY_ALIAS_USERNAME \
                  --key-pass $CM_KEY_ALIAS_PASSWORD
          artifacts:
            - build/**/outputs/**/*.apk
            - build/**/outputs/**/*.aab
            - build/**/outputs/**/mapping.txt
          publishing:
            slack:
              channel: '#checkin-app'
              notify_on_build_start: true
            google_play:
              credentials: Encrypted(Z0FBQUFBQmZuX08ybUhfTDFLaTRwNlFpNWdaeXRZdmRkLXBjN09jVHVvTVd2Y29yQjE0Sml3VDVFUFU5cy1zWkZEQm1iUFN0NWJjc0ppeXo0Tkt3a3BBTk10WllQXzZIUmZpNVJuZ3FpNUZmbmk1TXVJS3I1RTV3NVJNdno3WC01QlFWLUZUaUlKMndQeWtTQkNNY3VCOU9jTnpMZzJ2eUNSRUN4WlRBWWt0S05JTlV0NjhFbF9LZHNQMm1tc2JrejRwV3R2QWQ4ZGJGN1psel9tZDBRWVNJTVhLcFhwTjJGTlVUV1BDdTBTZ2k2M0tPUlhyZi1DQkNNMmlob1lNWER6MDd4Y2F3clNDR0lnUkJHRkUwR21uZnlwZld5Y0tiZXgtV3FuLW91T1B2X0I3Y3RUR2R6cnBIR2FrVHR3dFlhRnlQcXlKVms4TFhsWGswNTJvX1l5OG9OdGUzUTMwTUR0akVCb2FuVnVhT0c4enRTNG41M0lzSUoyOTBYWVBwZmtVcjdsdF83UnRqdEp4TllhcXhiRHR1QzRHeEg2WUdjQUR1Ui1ETVBTRTJvRm5fNy1RWmc4cUtKd2d5a2tqOHFjTVdPUUt2TnFubzJrU2QyVE84ZDJlbENXTUxHRVlBNi0zVG8xclZvMjRBRWJnTnU0S1Q1Z0tRYnl2TmhleWhZZGo3MVdpNWZVaFRLWm55bWRySXdEcmZIa0FqeWM4ZFB5VWxSRk1vOURlR245dFdLT0xsUXhTMHNpRVl2OEh1bEZsdlFPSHduRUFHWTQ1dGRVTlBkOFdvX09nd0dNTHRPLXF6RWdxR2Y0NFV4UGJoZnNjNFprQVBvVnZUZktZQmVmOEYtX19mOWdrR1FlMzhoVEZyUGtKWGh6dXoxUF9nQ2RvaEhuLV85OHZ5RVRsZ0czd0pJaDNRNnM2Ylc2OVQ4ZG1FYUo2Wmdtakp5NUJZZVlkQkRnN1lQbHJXYVdHZjRMeG1BWm13Q3hOeG1qMGVxN0c1eG4wYnBFX3ItZUhFSkJKRXNSUENneEJubEpqM1NpWFRLdm9fWkZDb2lucm10ZDJaVFk1YnhMNUloeEdFaU9kN2FtMVdaNnQwRjFxdXZENHNHcWZhaDhZeEdHYkdKUTlzWDZCdVhNSS1oVnpld01KRnlSQl9yV2hKNTQ3aE84bURvSG1jekJIV2V6VndDZXlQYjhPUjNnWi1EUXFSRzNkTG01X1ctZThjcndGbjh1dzBjbEMxMTlKMGpHaEdRNnpjRG5mbUJQQmdiNU1fSk5vS1JMd3NsalFVYVNIZTZaOEF6VHFHZUItUVFUU0gxX2hRV2Y5aVJuVkwzSVN4d3htcEQzV2lGb215Y1hwdTNpTDVTTUZmdFNZcEdLc1ZESU9MdTNFRDVtM25yUHBYNlBUcU00V3NyOXZ0bGxNb05zaFFIRHlVVlFna0NrRkJIV1dWZG45RnZFTXg5ZDZEcXpUYV8yVnFIT0hWMm1NRng1UUNzd0syakJFLUdQZHZXaWdFaEVIWm5JSkNTcTdXMmtmdU9Vbmt1UVJMS2UxRmt3dnZ0UnJPNzVoZFFzSV9obGhyNmpfQWc5MGZmZTlHYlQ5ckNNV3FIOXFTY21raVV4U0VfQUdTTTAxWVpvaDVwMy1UZ0dSZTM5UzdmVHVkdU1nNDNNTnYxWndKZE1DeUpGSzQyWmEyT1ExRmxmUTVUZVBwYUVPYzJZSzZXanJjRFEwVVI5cFo0Yk41LXBNbkh4VGNsMF9WckpQWFlwUkQ2MVAyLW93S0FoWXloeFFMMUVZeFV1b2dCakVtTFQ5aEhSdkhURTdTc1RrcmpCNEVpcTJpVGlaRHZSX2tqcnVaQU8yUF9OcHZ3T1B0Unh4RUE5djhwNHl0NEpoSHNlcDQwRmJuWU1MTlRybDc1VWUtZmlIUEtoMUdacmZ6blhFaXFBZnVKanZNRG1JenkxREIxSnp1emZxY2s2enB0dHlpdEhDVTZSY1JJQnhRUFQ5Um53enVxc0xEQ2xSUC1pejdROWpNU0wxSnIxdnBEZUtCaUxOM1ZseG1LVjVMYVVHOHR0ZlJBcWFRdUx3REcyZk5CaVl1Zkk2YXVSRnJHNTFOMUt4VXo4elNuOUc1QUxYVlUxd0oxcW1rd2pKZU9VX1U5YkI4QTQ5WkdWVkczTjBvLU5ReEFTQnVEd244NER5Ujdfc0JpbU9CRElWVzI3Mm44SVR4QXd1Q0FCcDBJSl9pZy1LVnRGLWhPeTBVc0drRkM0OVpnbWpWZXdFaC1kaEk4UXFYSWpuUk9tSDFkUXVjMFNKTnZwTjA4bGFuTVhsRjI3QWdRMEhzU3N2Vl9DbVNhTkdIZ2pXWjFIZW5yX3RNaXl2OVh5MV9wQlRzcDlsaHhpZ0lhek5UUlhKQ0hLelZUODdIbmd2RGxJNWR0bjd5TkRPUm84U3E1UHhYSHBCdXBIb1hzWFJqdElZUjlEdkhNSE9pcDUxcExydFZMUTg4T3BFVEpHOVpwc1oxdVZheWU4TmRVTjdCOENvN1BvRXFnOElpYTV3a0dsbl9MVXVoOUM0dFktMEhQNXlkeEdVYnBJSWYtUHJGVGlaZlFlMDUwcWtYRGd3bnF6clRQNG5SNnFQT3dNQ2RmZG9ZMlZOTmdIWWdibnFoMjJzOVloT0F3M3dlei1XeWY0QXRfTUhLQnVyWThnVmttUHRyWWUzbFQ3Zm9sbno0MVlCelg4WmJNc0lhSDNDUkNXWXpnMDMzZGNYcTdjZkhCUEkzdExrMTFNdmJtbWZUaW9UVjZBR1ZXSHE5WnBVeGpDdnBZMG51XzBBR2VsMDNsTmlkREctOC05QS1wOTU4SWZkZVdFeWtBWkJlcGJad1hIU0IwTTNtbWx0dlB5TUlqNUtMaXpUSkRLNkdVczBrM3c1dFNpMDlkNkhadDNSZlNoeVlya21PODMySmU2QjdOY3VIbzBQWXM5OGo4OWh6MndSeHVFLTFhTGUxZFZCWE5ScFVPSFlPYTU3cnc1dnZMbE44MGNnSXM5NVZnMVNKWEk1UVV0aEh4R281QWRGcS1OcFhhLTBXOU9HeTlMZEF5NGFQc2NTVEE2cS1VRlBUQWdnMWFWeVd4Ym1fUzFUOTZuQ3hCQWNjZXBxUEthSGtoakVuWVRnU2tUejVFRi1heWhzZHBDYkY0aUhzQjF3cGhCdkkycVprcE1samRyS0gyT0lSeTdSVzRkZUw2NjhzNzhxS3gySzY2cmdGVzhxMkFVZVR5dmE4Zm1iVS1NSHF1QzFiSW5FQ3BOdXh2VFVxVC1aRUw3OWNvcklNU1NSV1BMeVk4bHp5TjhSUWdUWk1tTF8wUlREWDJzeVIxdWt5QXdhd2tFZmJYVHllZl84UGNHdkhYWktRWmhON0ZZc1FIOENLNDdCQkNyVnVWUjBYdXpNZVJfZFdZTE96WWlzLU5ld2RPYmx4RmxKT3JkZmJkQ0NqWE4tMDFuVk83NGZ4SWZiMHVCR2RQU25FcVljOVBDcDJXSUVESUhKNGJpNnJnSjdPeW1RMmxUaFJ2b2N2b0JyNXVWd2JGZHY4MVp4ZHR2cE1KR1NSSGotQm1wNHNUWTM5WHJPYTFkVDRRYXc3MnJTZ0g5SWlFX1IwRzZmNDVoM2RxNkFHcC1ydXdwOUU5MlBqSm9JQm1tR2NPN1hUclN4OW1wWDY2alY2VHRxbkczWlUySURxYkhPaGRwUkZ6clJTaWNaTmdIQmZQSkotaUg5NC1RWGtPak85bEs2OTJ5ZVJJUWtIVDJEeHlLVGZqWUVvSXM5S1BzX09fNS1jTVhGMllHNHVESlBSOWFDUi1WNktRckZPQ0JCd25WM1Q3MTBxZjRBcHR5d0hLSTBJRlk4M2tIalZZZlFHX1NrcFdXT2hRcHUzMUxiOExxVEpmSm5EcHBOV0drOXhKTVlIMGt4eUpncXdNRTV1ZVV1Zm5lQTg1Q1VBX3dBNkd6a0FhaVl3bU9zQ3J1TlRMTVNvcjExN1ZtbU03dXM2WndnaWRlVEtGeTJJOU5FdDBKOEhJQW9NaTZPd2E4US11Ti1vZFNQWHRCOG0tVVJ1eWZPR1pDcVNLRjFDMnpZN3FnQWlvT2FsdTZJcFN1ekF6alpiM0NLbEg1dGJ1c2hzNVZzdkd4RHoySUhKeUkxY2NiSmNHSXFCTmlEQjUxeFJrYi04b3RwRktMQmFVX3R5RTdjM0dTRlpjREtrdGtVN1hYOXNiTFhOcXRmXzVoYVpnS055aVJvTXJqUEotV3pUQnJCbjlBZXFydWx4elF4QnJQNGh4dHVCWTFEWjB5cldqUlpWMG5Uc3VRRUViNWRFVjJ4VVBKLTNoOGxSbGxtUVZWVUVjUHdKdHMtUHBtVEFBWmlQZnJkVHl3ZW5qTWFyR25NdFowS1BCTGdZdXRVTWpXbDBVMEdhVFlybVlXYXZBRG9sbm1JdFVUaGIxY0JxdDEtSTU3dnc4U0hUOVdZQk5odHcxemdlQ2k1LTg4cWl2U001T2Nrb1kzMHBjN2Q4VmcwQmp3NnNuS2Y0YVNpc0E3ZTVXVGkyd3V2Y3I3b2VjRmpKSFlJZVpmQmxIWEd0bjNGRjQ4c3VvaE1WMlJmN0I0ejlTd2NhUkN1WVVmb3FsbEpEb2RwMlpVMGU3SWdvamJ3RE5MZTlBOUhYcnhjb3dsRk9yNVVUTnU2QlVobzExZkFicEpEYUIxMDJCSFhqVURMSzNHdzVsZkRBZThTcllWVklraXE2dXROeGFfOTE4MXU3SlpiLXlXYXBMaGVlc25WbERDWF9rUGFNY0xwb1cyME11RWtyeG5GWEs2dUNRVGF0VU5tZ3gwTGNfZDZveFBiTjA2NXg1cmRHQlJLUG1WS2RpUzBBTEFJZDFyRmIydmdYZDdUc2JTTExJVWdGa1JHV3R0aTdwRVVsREtteWNJMFJjbElyZDVua0J4b0FNTk9pX0RhMjRtUTRWSHNiVnNhZ0UycHJ4Z0VWN1NRWmJTMUVvR2NCcTU4M25XZkJlazliMGNCRjZXbjBYMjBHdlBEcmlyWjRGZmZaelI4Q0ZYbXRkN0ppUXVKMkFQYTh4T1BWRXFOVEVOaVBEVlR3WFBOQnhIb3ZqMzRFay1hV3hSWEtkZUFZVFhKZTJTV0ZFUE9UaGNIekNDenZUTU1GNW9rLXJOY0l3VktOdERMZ0gxTjN0bi1FUGtrN0JIR3V0Y0szYmdOWG8zNXUzOHAyNkUzdVVseUN3elRVVTNfRk03MXJhYWhwTXlvenlXMGpENTNwMVBqMWxDU09Qdk5UQ19qay0zLTZyeWp3LXo0T1I3WFMtZFF0eFBVRy1uWEU1eXRzelZPUEFxRHg1YWhlcTdnWUlmMlBYeG1nbGdUaVc0QWp4Tl92a3RmcFRsZWZlZmxhMGRKTHduUkpyZlZjTlJTTC1Jb094WFpvOENJUDA5Nkp6bUh3YlRCekgtcDZPUkUtRm9mTjhzeWtycjRobnRUazYzeE9vM0ItdzNtTThvajZPek5LZm1aSmJfS0J2RGphTERneEFycWNSMklNR1F2YmI5QlI1ZEJaRG9yNkhST0JRWU1OMEZWZUxqWFdPcVE4TzJsWjlkU2ZRYk43ZXpnRGg0aDllTFNVMVhJbEh3Z21FNlg4X213eFVKM2JGbEtjTVJtS3ZtMXlHRndTS1REVmU1NkdYa3NEMW14eWEzN3RtcDBxY2ppaTlPMWdUWDA5alp3Vg==)
              track: production
  release-ios:
          name: Release IOS
          max_build_duration: 120
          environment:
            vars:
              ANDROID_FIREBASE_API_KEY: "not_used"
              IOS_FIREBASE_API_KEY: Encrypted(Z0FBQUFBQmZvREtYWmpZSUJMeXhqRnJ6OUZkamdGWnNJSFBRQUw3dk41V01VckZ1elhjNjhvZDhIYUI4QzNvTjNqLWpYbDhMN1g3bHlyLTJJQ2E0UXZHd3NVUE5Kb2tyVjA2SVpVclRkcm9xMEtjUnhETEtKQzhlc3BfeFpVYmNocmpkbDFJTlZDYXE=)
              APP_STORE_CONNECT_ISSUER_ID: d59249e8-efa7-4813-9a44-7dd79035a310
              APP_STORE_CONNECT_KEY_IDENTIFIER: 6KYYY5T8C4
              APP_STORE_CONNECT_PRIVATE_KEY: Encrypted(Z0FBQUFBQmZvRFZIQXoyaTM2ODBGOGRiQ0RkTmVQTUU0Q0l3Ym8yVXlEQkFqZTc5Z1g5M1RIdmVSNEVYcmlmM0FPX3RTbF9idmVsWkd6MUdUTTByNzlGSi1FTEp4VUpTZV9zRlIxcGpIMWg1YmxjNlNkNXlVdE85dFpQcHNLNVZnZnVGcDJYYTNjZl9zZW9zV1FVd053YzVMZjZYcGxsNEhJZ19lNlFlaGFjRXhkeXFMamI4dmZZSmd2RzltTl84QmJBRXJSX1JUQ0F6bmtsSTJaWVlqbEI5YUVIU0hyQnlZVlN6eUk1TFU5RFBndDRBcXR6a295Q2UtMHRWa0h1MFY5a3dkUWx4S1Vya09PLVhybG1OcFEzOG5tMUNtRzB1TUo3a0JsZkppQVJiLWRIY1NfckxELWdhNUtRVkt2bWNZV0FZNVVaQnJFWDNqVUNLVVA5aGZySkJxNHRxdFFUTWJQYlVxWmxjWlVpWE1MZnFSbDBMZ3E5dUp3czJxdllZUlFROU5aNlExWU95N25BMjFfZFd5VVIzdElpRUxIVXlHMzIydVVmejluWnp4aFYySkV2Q2djZ1BoaDNQT1J0cmVJSTV5M1g3c0wxTkJ2T2Z5aTd1enR5TWhoVGFJaVJYOFg0RHJ3U2RtaDdUY3lUeW1nV0U1NlRUbGxOZm0yN2ZHdVpJMXlOYW81bXVwZDF1M01hVWFhTTN1bTk4ZTBVd1JRPT0=)
              CERTIFICATE_PRIVATE_KEY: Encrypted(Z0FBQUFBQmZvRFh5amIzeWNndUdrb0l5dzFNSHFXOE9yZmhrUDEzZVg3ZFY0X0VxbFRwWkMteEtFbEFMa1NRaDloZlFReTFvd09GekxKRF9YaFRBdDNwUlN1Vzh2aU5IMnptS1I5TnVIdmFWOTl3WXZRZTZMa05JcmxQeFN5SWxQZ19UUG91YzJ1NFh3dFRxSmtfVmlYUVBYbmthcF9pcXFkeFdMOW5iUkZLR2ZXZThVNGpLMUVUT0RZaW52RTl3MlZLelpxaG9zQlZvV0RQUHBVNVVWdVRWUFJVZF8wNUhVeS1wcnFnM2pKVGJZWXdNSUpxbnpncEgyWEpoM09KaDEwUDVHNERWVUFJbFhzZnNvcGFjdDF4YlFiOC1YbWV5VFlwakFyck1fWXFkZWJyeTVjVXUxMnN5REt3MjhwZThCZWhGa3lOUmdQVGpHR1VYUW9JMFhPM0ZSN2c2aVdJUE5YNDVFUUZPUUdFbjhaM0J0Z2pCNEhjSkN0ODdackpQWWNTSXRnQi1yLWZlRHV4NWxJNjNxZThYR2NPUjJmX2ZkVEFxWjhwNDByVHNPdTVJWFNRQk5rOU43TFdHWTh4VHprWTcyTXJrYW5GR0w4ZkdMZ1Q0VlNFSS13QkhScHBxckYyQ09FRzc0Qkc4YlNsSm1DdFdwLXh4dV9ORW5JQ21XanN3TGs4NE9OQ1hkR3JlME9XUFYxcUJWV1YzdkUyV0tONlJ5dUNYZ3dpQi1vQi10dklxQ2hZUkdxeHhWYW4zUWp0X2w1VU11MUNYaC0zcXZBMGdrTWxkRHVKNFBTU1hBblBUQUFWVW9leU1JUWRfUlpqeS1abkpITjE4TGxQX215U3ZodEFCS09WYnhBcVRScU04a1g2WGt1TjRPOVlSWHhTNXB6UFdmTUhtWGdYdlJRZmlnaHNiOWJtLWZqT1diYzFIT3lMclcxRnYxTWpBN1d5MmtqdF8teThmZGZkOHpWUmtJdjN1WHJKLVVuY0ZBNUxZNUFLOC1VQVJod21sUWJfZzhhY0xidjVENHFrV190d3RNZGxoZFdSQkZZbzEtbURDTUJWUE1DU2dWaGRicVhuaDFDTmZUWlNJcXBBVjVJQUtwVFU2cllfLWFGY3pKenplVUpPTkoxZ0FsRm0wVDBPeVZHQWYtb1NBUktDUmYyN1hSRWdxcDItZVlFQXdlaGt0aHVaRzBfRkVSQlJiVVNUTEJDM1ZRbEV6YXpDYnB1d1p5VFRDUXlpWWVRMmJmZk1VRVpkY1BmMjBmZlQ4eFZhR2NqQ2o1bG9sZ3FSYS1sd0p6dVI0eHRYQ1VubHNTR056eUk1dDE1TGFwWlp1SjlMd1Zma09JODRaT21GTXlZc2VjbzB4SXdvVDY0dVRjQXRGWkJOcHRIekZLWVcyaG5DeE9ISUdfWm5hWE9adllFNFlPaVN0Q2tvaUxoZXp3NW1VcGtuREE2V1NJaXRCbUkwWnRxU0dheURyT2VEaTljcVdaZGUwME1acV9DU201bUVuQVFuQ2JwbEdqcW5qRmZneVlrZk1SdjZUeVB0ZFp3NUJfN2x3X2NHNTltUks0LUpJUGhDbzRKRDVhMnI3WUhnOWFleThKSGs5UXp6blpPT2VDcnU2SHF2bzNJUThuUmhtbFBEV2lrVGFwQnlCa0tyZ2hLX0MxQ0NWR1E0QXhqcjV5aGNtb3drTThNTlNFWDNGNThTNlZ1aDY2eTB4RTQtUl8xVlJDeVFzbTItaFlkOFY1ZkZwbVFPaE5hX3V0djltd0JCdmNJVEdvZkFGczkwNElCaFBpUmNJRXVnOWFkOUpnNjBYcFFsWHpseVJ5alZiSl96akRlT3Bfbm5Vekd1QmROUmVFcTBqWUVkYjQ4TW9qd09uMnlIY1ZCY2o1eHhBMDNKYlNaTkVtdEUtcGdHbFRtd2M4VFpPOXYxZVFGSDBfbEc0UjE0Z0E4cnhQZDBXdk5zR01wWHMwejNJNWRYQ1R3VS1sWUh0R2RTaUk5MGJaOGMwTmd5VHp3RGswcGxVOXhsak5zZUVoUmptWXpRQXhNNFZCSnJyOVhHR0xKRGFFNVpVclRfelBweWdJZ0FobHdJcS1SZW1KU0lPSjE5Nk1GMEZGUFFqQUlFQTNnbl9YZnB5STBzcW5UYzFudGVYeXV3cnNSX1BCZm03bDd6eHpBWURPYUQ3RHJQbGZqaWFycEo0bkpzTEMyQzlDeElpQjRDR1VtMUZYblR3RjVYaXBOM3Y3RTZiOXBtTzFjajFIamdkQjNOeFl1elNZY0hYTUxpM2UwOWNsRmNXeU5DV2xwMEVaM2MwSkZfbC1TYlA3R0xsSGNRRktaNkluRWVyUnV1OHF2NFcwdm9CNnNrOFgzaVZMUG1ZX0E2UklidXZlNkpjOGNEZHFPNE05NFBycE9hb2x2WnZ1MGtqNXZHaGpMVjFOYXh0RkEtWFZNZDVlQnN2eS1uZU84R2VLRTVBQmtMZWNwQ2o2NWxtTFhCaUNzdkF5c2NBS2QzYU1mVTZpNTZBTlBMd1ZuaEhYUUtsXzVFYUx1MjdRVGlaLW5kdWozY3BKRk1FWnFLTDhlUmc5UjRqQ19DZ1VfdENKSlVGM19PaXNWZ0s3b0R3cHAyaVpFaXp5Wmp0aTlZTmxVbmE0djIyN2MxZTlBM2JaQTY0T2N1YzVVeWo2T0NRazk5ZVd4R0hWb19nNTF0QXZSVDB0RmxQUDZrZTAwdjlvbFhVZGk5MGZEaXhNeXh1Vm1yQUpqRzBrVmxwamtHZDU1eHFpa0FEekQxRVBMWDZjOGJLZEhEZ2JhdFdCZElFOFUyb2FCdExwZkhlSk9UMmhLR05ibGdHVURjT1NTdU1vRWdKZ0dYRktvOWRDSHpMQWFzd1JIQ1ltaG8xSmhCMWlBcUdqWE1lZzhqd016YkV1dlVwd0RqeXFPSzdNUFlzazYta0d0SkRsRnNiYTR2WF9KeGlFX01ZRTRQMUpBOHo4T2VNRy1CbE44MjBLa1V0Z3I3dGtpNG51eC1LdU5UQWwxdjVCMnM0THBMYU9XUmVZajA0bVUtVkh1SFQxcHJsUWJpODNZM082WTJoZTVnTmpfRDdSUUNGbElQVEplWnU0QjN5S05oNEFvQXdzYTY2NURUbzFpOTY3c241X19tNlJSNHFZbWlncm9PdXpFTGZNbHk5c0J4eU5aTnU5OFdSbmRET3ZIRm91RkxmWUdkVVhhMXhrWWJRQlRaM3M0bmZ1RmNrVWtzRVVyUF9KNGxVVVdGRWJwYjViSHNCeDRtM2JjOFMzM0FUQ0tndGtkRnd3NmtRTl9DanlYZlF0eDhWRjE3aURoV0drY01zWVlBenBkSV9BdHh1VHdwTl9WalhPU3QwVm1yMGZ0N0V0eGVpa0JTOEZmVUQzNzNhaGJvNVZHZTF1R0tKSWp0OW1ob2R1eXJCV2ZHOFc1OGFqN0wtcmFmMXdLZjc0TGswaGZheGpOWFd5aXlZUjl5czV4NDQzbHF4YXNNdzFMMkJ0QmkyYUdTQ1EydjdFYXFUVnNIZ2RLd28wZFhEZmI5ZHhERHc4MjQ1V0d1R1kzNURaZDlvTDdKb2NYaXdYRzV3NEVhSzdteTBZWEFuTFFyU3FIYmd3anJYSXNiZl9YdXVSY25EcDlKenBQZXVuUURPMF90bDd4WElTQmFMX0duYWZuZ3Y1bzVFNlpFTjM5Q2FoNWVfSkFYT1l5YlJKb2kxTGlWcVVnUkViX1o1Rnc5MXhzZDQwRGdmaUdjaUR3djF5S0NZR09wSG1lV3ZzWTVoYUlTLUcyMjZNRGpYMTBfTXpWMl9fQUpPZmJ5M05EQkRYWFQyWWZWRTVueTdLNkJKdXoyWVJRUzJtaHVrZ1JwanF6dzZ1WHJKSFZhQ1FFLTlIbm94OS1kNmF1OWZ1WWY1Tm1nQW1wMzUwUnZRbUFGV0gwZm9XbUJpU2hJcXMyYjlxbXFNc2c0dmp6YjNaOFlTeTJpLTNsbVNuYWtKbFJWNHZZNG0xZXRtQkpJdEVWY2hGaE95NlZkZHRBaXQtZE5vcUxlNUdsUXMxeXk1WlU2bTR2RFU2eDR2ZmNZcEgyZnlyMTlPemJHaVM3Tld1Q3p3)
            flutter: beta
            xcode: latest
            cocoapods: default
          cache:
            cache_paths: [ ]
          triggering:
            events:
              - tag
            branch_patterns:
              - pattern: '*'
                include: true
                source: true
          scripts:
            - name: Run doctor
              script: flutter doctor -v
            - name: Run emulator (IOS)
              script: flutter emulators --launch apple_ios_simulator
            - name: Setup environment (prod)
              script: make set-prod
            - name: Installing dependencies
              script: flutter packages pub get
            - name: Run analyzer
              script: flutter analyze
            - name: Run unit test
              script: flutter test
            - name: Install Pods
              script: find . -name "Podfile" -execdir pod install --repo-update \;
            - name: Initialize keychain
              script: keychain initialize
            - name: Fetch certificates
              script: |
                app-store-connect fetch-signing-files "com.arya.checkin" \
                  --private-key "$(echo $APP_STORE_CONNECT_PRIVATE_KEY | base64 --decode)" \
                  --certificate-key "$(echo $CERTIFICATE_PRIVATE_KEY | base64 --decode)" \
                  --type IOS_APP_STORE \
                  --create
            - name: Add certificates to keychain
              script: keychain add-certificates
            - name: Building
              script: |
                flutter build ios \
                  --flavor prod \
                  --release -t lib/main_prod.dart \
                  --build-name=$(git describe --abbrev=0)+$BUILD_NUMBER \
                  --build-number=$(($BUILD_NUMBER + 1000)) \
                  --no-codesign
            - name: Setup provisioning profile
              script: xcode-project use-profiles
            - name: Build signed IPA
              script: xcode-project build-ipa --workspace "ios/Runner.xcworkspace" --scheme "prod"
          artifacts:
            - build/ios/ipa/*.ipa
            - /tmp/xcodebuild_logs/*.log
          publishing:
            slack:
              channel: '#checkin-app'
              notify_on_build_start: true
            app_store_connect:
              apple_id: stefano.saitta92@gmail.com
              password: Encrypted(Z0FBQUFBQmZvRGRTUDFLWjhQWm9CM0lrSUVNRWYya2c2V2JFREhlZ2RkNlJ4ZkhhSFVFbjBrR3dTcHNLZDBPYnlwbTA2VDNsS0JFTEJldTRlRnRPeDhKaXZvd1hlQkRzSU5TNzBxYVhIdHltbWtVMDBSVHhMdWM9)