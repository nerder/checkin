# Automatically generated on 2020-10-10 UTC from https://codemagic.io/app/5c6d213063e304000cb3f99c/settings
# Note that this configuration is not an exact match to UI settings. Review and adjust as necessary.

workflows:
  tests-only:
    name: Tests only
    max_build_duration: 20
    environment:
      vars:
        ANDROID_FIREBASE_API_KEY: Encrypted(Z0FBQUFBQmZuLXJzN25BOUlLVFBQaVZ1OG94V0xhSGlpOTdtSHNleEtUR09aUldWazRSOVh4NE41REVfOVAxM09ocHBtMFF6c2ZzRjZMMnBmRmdPOVBPZDBxNFpRUUhOd1BCN1I3WHRHU0N2Zk5yM0VmcDVUUTVXM3JJeFgzaGxJRVJ6TWZfVnljbzA=)
        IOS_FIREBASE_API_KEY: 'not_used'
      flutter: beta
      xcode: latest
      cocoapods: default
    cache:
      cache_paths:
        - $FCI_BUILD_DIR/build
        - $HOME/.gradle/caches
        - $FLUTTER_ROOT/.pub-cache
    triggering:
      events:
        - push
      branch_patterns:
        - pattern: master
          include: true
          source: true
    scripts:
      - name: Run doctor
        script: flutter doctor -v
      - name: Run emulator (Android)
        script: flutter emulators --launch emulator
      - name: Setup environment (dev)
        script: make set-dev
      - name: Installing dependencies
        script: flutter packages pub get
      - name: Run analyzer
        script: flutter analyze
      - name: Run unit tests
        script: flutter test
      - name: Run integration tests
        script: flutter drive --flavor=dev --target=test_driver/journeys/journeys.dart
    artifacts:
      - build/**/outputs/**/*.apk
      - flutter_drive.log
    publishing:
      slack:
        channel: '#checkin-app'
        notify_on_build_start: true
  release-android:
          name: Release Android
          max_build_duration: 60
          environment:
            vars:
              ANDROID_FIREBASE_API_KEY: Encrypted(Z0FBQUFBQmZuX2JKZnhnaVJzRU1QWHp4emJubGZQNEMzMm04QktpUnhzNmRuR3lyVmxfWW5BQWdMQ3hSSFJ0Sk41UzVDNExNelhvNlB5TUtFMFhIaUtTV0s3UXBvLW51QVZQc1laNHdOcVM5M3hpV0RoXzBfR3NjTVhEUDQ0Mm1xLXowWnU0b2o4YUQ=)
              IOS_FIREBASE_API_KEY: "not_used"
              CM_KEYSTORE: Encrypted(Z0FBQUFBQmZvQ3lpY2RYQTFhaDMwT0QzS2NFMGNXdGNQTkJybndqekQwdVE2S3pJUWh4ZENXeVlxU1dhMnFNSWxsYmdmenp6a2RVeUk4bjYxZnNFcHBWWFYxQ0M0YlE4TU9VZC1uUXdrcjV6WncyNzQ3eXlHdTA3Qmo3cXhBSFJQTTBlREtOeWlzN3FhOHkxTExnN2pDNE9OQ2RIcVlzYk1LTTU2cUFuZWM2N09uMmJQd0NXcWwybGZlQ29qTDBaRWR3STU2ZmNfalZSNzV6ZWJ1d3BicmY4cmMzT3V2ZFBDZEFMNTNBY245LU5SeXlQdG1Kd1VuV21IMldYMmlmZDN0VlFxWHRCTDZmWWVRYktxMDdnc3h2V08zZFl3SlRQZXE0dk1FMWpkUHNiYjFueVdmT0R0WjA4MTFMdkw1QUN0Z3VLQXJneHBTRktQZlNVRHlTNHpYY00tRTdGdEpsQWZvNlhwNl9UdzFwcmdUU1JnWDBtdmR3V0dlSHBBVk53bGE1OGhmMnI4WXp6NldvbndqZkNXTWl4NGhwN2dwWnl4QVFTRlllZVoxMFg3MnBzOVVPNUdSUmR2Z2pDRTFUSXlZc3pXSHdxbi02bUVZR2pyb0huOGxnc2F5Q1RfNVdEZEdqOFJzdVhOMEdfQXl6cGVNSWRWRnJ2TFdhbXgtcGhYVmt4VXJfY09xTjduYXhlNkFPdzJkQzMyMGplSVprMkhiRVRZeUFPdGRwd1ppbFFtRXROX2NwYjJ6NHZuZTJsQVo2UW5UX3hMbS1aM0ZUZVJQVGpERE1CbDBfTlFIek93YTRkNlBIWENudVU2ekVTUGxnZW1nWHVMeTI5ek04bnNreGJ2czB0NjE0cmg5OTdEQWxWdW9UZ0trcVhUVVZFMDNpa0U0eGVhY2J0UHc1aTFYMnhuR3lZMVVRa1RJazhVd2hxM0FYaXBlTUZDT2o2ODJmS2h5U2xLd2RZVXp5QTlWcVNNRDVrVno1cnpCRkZQeUlNMFduZWNEM2V1MzgwSTNDTnF1aThQamVkQU16ajk1YjhZVjZRcU53em9JY2lQUG1sRGdwOHUyRnkzYmdrR3k5MGNFUFJVSElLZHhNSnlGb2JudVhMSk9sR1p1WVg4THZJVFI1aFBxeXlTU2UyM29UVURCa2xqYWdha2hIZ3NSS21aazMwc1VBaHg4YkFkUmdtX0FvVjRmR2dJRHlGLWFRVnJsM1F2a1V0WXRCdTN4czRvcEtGMVRoZzBGc2RzbHRjMjRUZlBGVmpQR3RQYjV0SURaMG5KWEROeGtQZFM3d3RrZzZqdmN2VjhyamE2THVtVl90M0JRNUJtNTB4ejExNHE5U0NnWklLODFoSXJfTlVXeWljRW9hUnpULWUtS19UQjhLbWpDTU1pdXRQR3JmRWFfU1ViYUF0cWxlNG10SlNWRDdLVndSZnhtQnE3X0U1cWdXeHdudnp0WWNkUFhlNVlMX2Qzam05V2ZsU1h4NWFqeVpmeDJjWlpWMUMzQ2hHS3JiRVdqUUYzRWZJaXE3RWJtdGR4MVRuOVRDbDZ2UUV5cUtPWGZXc3FhXzBKbjkwNTFlT0ZkdDFJTDJkNUxrZ0oweHpXM3YxNnN6cVpjWTI0RjVrYnZnazZHdEZMWGQ0VmZuNTNSS09sa2x5Z1dVU1dMOTFKdWc0RHdSXzA3SFg3MGRkc3NNemMteGpUUXVWa2ZaV2pwV3lLTjhiWTNlVW92aThlUE5aSkNwVkYyZGl3QVZKVk5PSHI5aHJzNlFHM3hibGViMENoNHgweXpBczYyOVdrU1NOdHFFeHhOclJBSUtPXzZrNE8wOFZwR2s5ckZCNWpOcEFjQ0NrN2lVTjBsY3dUZS01ZXc4SEc5QWZjSFlSeWRpQlladFVlSEZ0NTdISUVQdUZiWEdDR3JNSFI5V1pVRHFVS09XMm5uTUxPbDhVY182eWxuQkJsblBVQ1p1aUxrel83RnotbzRMcVp0QU40QUhkVEV0ZFpabFphZlNFekdZQnpPbmdIVjdYd2ExN3ZVRXh0VkFCZGo5T20zb0kxOU02VUxnMFo5V084di1IOWZBN1B2NHAwQ1dKeHkxanAzdFpMZGJyU3BRWGNPY0ZJa1ZzMnFGOWs1b3d1WUtSd0lkcTBhSWh4cTBiVnd3X3prT3V6WmREXzd5eHp3SXloM0RJc0ZFS25yT3V3U1FxbHZGSk0xWk5mM2RIRWJ6T1RVWFdPMnpQRE5Pa2Fsa3Q0cW9zbjFVWDc3bU5WWmV6Mkc3U1RITHVrVF9qWWtrY2hpWE95SktWcEJUT1k3elR5bE9xZHBScmxkeXg0Rm41MGo4eDFEeUhsRlpRdXNmUTdwdXV6UHRIM2hpUk5lTmRod3VJcG9CeGZFbWZZajRfVko3d1Ric1R0azBqRDUxUXpjY3A2R2FMcDNSZEEwTFVIb1c3Q2VwYVlGbjNvdHFZX3VhS2NMbVVsNnBLc2NzQnJ1MUhSMDNNQ1V2TDdsTkotM1hkSUR4QzFaWE94TjdVanhGRjRCVDRZcGRsOHh6R2ZuSzNSd001UkozRVJteENIaURCWWRvZkJnVE9QQ1RjR3ZQVjYzVC1uOGVOSWdKX0FQNmpBM2s4UnltNHA4NkFuYlNRZXF4NVNMLVg2eWdQWEV3dlJxbHpYbEY2WktDWXRMa1djak9zZ1lCWG8wMDRsZTNjUHZFcUYtLW5Kb196S3RRbExyWEVoc29yTU1KVDU0WnQwZnR5RzZNemJTWjN4S1luUWw4RW9BZE5GZlRGWTlMNjJ5dTZQU3ViZjgxejJhYTV4dmcxSEJ6Z0ptMS1fcGV6UnNHZFg0RnpsdjBZXzJfb2xEd3REdWdUa05YbEctU08tZDIyWFNrUHNuZGVEM0FuUm9mUzdiRFNMZVFpOXgzWFBGejRpdU9FbnQ2TXdONUxtMkFJWktFRnA1ejhISWhkbTdIVVp3cjgxSzRLVVpxSzhQNTJ5enBQYTZ1SEhvWkp0WVhud3E1N2dkMmFidGlXUXJ5QS1hOWZOUWh5Z2tsNWw5NGd6YjZvZFVVSmR2a3lyMWlUQnlQcmE2ZFBVeVB4VE9Hb1o5cE84RGlhblhiaTY0bTdBa2lqZE9XZEtyajVIVk1uS3RPRkhRRGZOMzRrVzUzcjhPQ2o0NWVlQjFiU2JlOHVaSE1STkNXdmF1c0xEUU9SY2FvMVFBc094SDVYeWdGejFMWW9xQ1JxV19GYjJUTS01Z3ZtbDlIYS04elRFZ1czbkI1VnQ4N0FXSGVTeHBWbko2c21Tb1EyaEpxRFVuczM3T2taMUF6ejJEeldzbXBHVVRuMkN0TEN3dUxlQng1ZUZDMnlmXy1qZVY2eHBHTTRyTXRlREItY1FWR25UZTFGX1JLYjIwRWdBcE02a2VXU2V0Nk1saHVJdE91S1dVVVJXdTRabGhJeHBSRmVuQzlrMnBvUkN1eWRfUE42R3BuX3BtbnpwRTltZEZXeTdieEIwczJrVHFieklVVk9XWWZTU1dPNjdDck5GUUFNdHRXOFM4Y1JNbmNUa0Rfa25RQVRZaEQza3paMHZiWlFIVFgxM2o3QWNRUGxTNll3Snd4SWRLVXhZSVU4MHhiOUtVVUVtU2pDb2RBQWYwV0VTZzQ4YkpIVVM5QXRNWUhUTHhTNHVRTXZaRnBheGZfT25Ja1pSVy1iNGxUNzNXNXJLSkdJV2F1RW1CZ0NlZTYxVnQ1X0RiLTQ0T3h3UFJPNXZfNWlLUmxKc29maEIzSGR1XzF1TURWbzB2YmI4MElMd2RoSngzN1pvVnlfeHVpQlFuRWt0UWxRbk9jbWlIMmxzUHc1SEM5eFFZVnJJQjVuaEhqejJYRnh0dXRndlVLWmk5X194MDNiMWptRWZINlBxbDR4ZTUtUU1vcjhCOXNlSTQyYmJQMk9EXzk1aDI1SlFfVkphWEFka01Db1RSWkFaRFpVamU4blpHLUVZOTd1TnI5NXlfSG5VSXE1SWd6MjZRT2RHUk8wbFotRkFEVGtJR2tNSnJSR2g5WnJxZWkzeTBRMDVEUnUyWUMwaWx3R3JFbGFPRXdVZnpJQlZnSmdfRFBWVE5XR0wwVmZ5NlVSa3NpQXFzRW8zMEJWRWVfOVBpY2VVbVc5cXFhdjZlMzZ5TUtPWDBtS0l5WlRrbXNZSWRIVjRTVlhIb08tUE44NDFhQlZJekZqYlpreTJxOFpTano4WEFBTW1Jck1oZl9uemVUYlpZZjZuZS1ILXUtX0Zmam83YXB1dnpFUFVTRXZNbnluNDhKMjhUS0d5TDRPalFkNG5xN3l4MzBmdVpSOFBZRG9ISGptSkV2RzN3dHh6VlFtd08xNXlQVE5fTFRkU3BlbnU2MzUyTVJuZ2FrMldRZUs5S0pyVERJMDRGeDFFZlRPN3Q4TFg5a2lWdEJvYWZwZUNZSU1wTy1FamNyc3RhZlJma2ZWS2ZXSlhFa1lKQWVOaGJmQWU1MlJmTDE3NHhoVy1XNWc5aUEyVVVtTWVkQ2JkM0E5TEJ3VmJYb0JTTU5aMjd1aGpmWHBDbGJUNlRBbERyYXRzN3VaNXE1U2Uxc0tMVEhGcEt4TUQzQWZtd3M1R2UyQmR4b3hRWkJ3Y1FvRW1wUVhycV9ieGVMMkQwdXNOVG1NQ1hsMWF6UGhFbGw1SVZtYnBkWDVldmV0VE90ZkRucGNXbjhJZXhJRzhla29KSGltYThoWl9Nc1NBaGIwc1VuTzU3aEJvN25pT0FkTkNwQ3ZSSi1sNHlONGN5Q29yYzRJWlowaXJNb25BWXdkd0QyaE96SWxUcHpKZ3ZGS0E0U3BOczJTNDdPUkxyOXNzT2NJNzJYbjBpdmk1Zk9BZHJXRXdGeGRRTFdHN1N1NW5jYm0yMHVOUDJOazcyRmt1Wjd1VEVXMHNMN0lEcThWdFUtYjJvWUE0WDZjVXNScDRXWkFobDdZUDU4TTQ0OVZvUlI1ZHJnUHp2QTNobHR6VGFCVzEzSFlqODNBVXotdEhON3FEOXRVdzNpa2Rla3d2TEpVa1dQQU8tQ3EwdzBtWnU5VTNsT2ZPcGx2dERPUHFCUTBTUFJETFREVFFtZmwtbnlOMzk1WlB4QU4yMElmNGZlSFNrYVRmNWZOalRaS1RGRnpWSk5Cdk9ab3ZRQlV6R1hlbm0yTDFkMUgyODhXNUlRMWdlcERCRlJoazNGcDJrbUlsWWpkdklQR3ZOU29oTE1GMnV5UjhLZHBUSVNxMmF4RWE3WFVBak5oTkZRaTRUMjd5OHo1MldMR240M3FJQWdlVGhNeGh1RGE2OXgxUk5KWV9RV2hnQkFWZmZhd1VkaXVDY1JldlZXUGU4bkpZZnNpNGRxbDhsVXpaQm9BTGFjVnA2MUQ4WGZ3ckZybDhqUUFsbC1SNHAxU09zSXJXbzBuZ0c0eG1qb05fZkpLYjZ1bVBmeUZrMjRzSURic05MRXJScW95M3RMV1NlVFNvMWVtS0tiZHlOTFhxbEhTaGt3TG5hQVgwQ3RVOENqal9jMXJWckZjYW1aSmJtMDFpU29Gc2s4UHdKV25nMXB5dmdaa3RFOWRkeG1TNFprU0RGVWYyWk9sSnIxektkZnVqbEFhY21Dc2h1SGxOV3NCbGNobUN6bUNWS2xyOTdzYk0tVlFFVVVGRjI1dTNVMloyaXRxN0ZmT3d2V2Yxb2VFaFBXaEdVRENnNEpvY2NfMjNGR045RGZtZ0ljbEhid1lUMU84SnYxWUtQUEJ6T0NzXzZuYm5JYWxLay05eTFNN0xBQmZ5YjVWR2w1YlVEeWVHWkh3X3RGdUJLemZzbjNwODVuMzZkTzZjRlpsRzBmdTBDT2tGTUVMRjdBaEMySTBDeDZmaWlpSV9pOHhYWkZLcHdFYzlBWHdXZ3RrcGtNaE5fUTZzQk1hRE9mWXVhQV9vYno0c1FKalhFYzNvTVNjdWllMXBpOXU2cnloRmtieEJyTE5TT0RWTkhQdy1vVnZiXzUyNlJJWDhnTE1fS2FvdFhyYy1VbE1uMHVQdkJZMU1NYU1kSGZrcmJENEFMaUlMbDhoQzVRcHhsYU9vYng3SG8zaFVZQWJ1QUYzRWJNb0dIeGpqMTlBUVByWlZmVXZtajVmeWdCQUx3elVKbS1oME9xRnQ3NnIwcmJFaGU5ZzkxcEUtNmlmYV92d3BtdXZFQnBQSFhDV0NPYXdvaU9LNkRweGJ3Q0M3SzVTVGZHRlZaMTNTeDEzNXVSckZmcnc4bE0tZXNZamplbkJVTThqTlk0cEo5Rk91MGExYmx2WEZncWdUc2N3YXpQZXNkUTRsN1MxZ3NuSFVPVUlHRlc5WjlpMTY1TldwdVBuYmJhWDZnPT0=)
              CM_KEYSTORE_PASSWORD: Encrypted(Z0FBQUFBQmZvQ1JmWTl3dTFlVTJyU3hma09CZ3ZhWk5OejhacjZiN1dkYWdRV2t1RDRCNkpGU3FXUG56SVZVb3UwLXo5MUE0N3d5RHJhZ2lCd0Q0M2hGLW1TbUNUcmRIcVlGVDBydnFYSFBZYmMxZXExMmR5V2ZzUVhJZlRTQ1hvNThBVnRzOGtQRnI=)
              CM_KEY_ALIAS_PASSWORD: Encrypted(Z0FBQUFBQmZvQ1NuUFppS3VrWmZUeDdaN1FXRXJjSmZ6SHhwY2dUVVJpZG45RERWRGYyT0VjbXV1aTNCTzhfUHBwalpCOGFUYndrRmhtR2c1VjBibHZyZVJqX3puLVRnMzV2dlg5NlNrTjdFcjZ3RnJqeFdVVC1MY1dDdG9CUzM2WFF3dDIxdTM5MkE=)
              CM_KEY_ALIAS_USERNAME: Encrypted(Z0FBQUFBQmZvQ1RDVVkxSXpFUVFwT3VublQzSC1ubDVVeFIxNUpPczFlRHNkb0JvRThPcXZIR1U4NEVjZ0JMMng2dTB5R3dlcGFhOTU1ajJ5aGZTNXNkeUlpQUdsbGVvcXc9PQ==)
            flutter: beta
            xcode: latest
            cocoapods: default
          triggering:
            events:
              - tag
            branch_patterns:
              - pattern: '*'
                include: true
                source: true
          scripts:
            - name: Run doctor
              script: flutter doctor -v
            - name: Run emulator (Android)
              script: flutter emulators --launch emulator
            - name: Setup keystore
              script: |
                make set-key-properties \
                && echo "flutter.sdk=$HOME/programs/flutter" > "$FCI_BUILD_DIR/android/local.properties"
            - name: Setup environment (prod)
              script: make set-prod
            - name: Installing dependencies
              script: flutter packages pub get
            - name: Run analyzer
              script: flutter analyze
            - name: Run unit test
              script: flutter test
            - name: Building
              script: |
                flutter build appbundle \
                  --flavor prod \
                  --release -t lib/main_prod.dart \
                  --build-name=$(git describe --abbrev=0)+$BUILD_NUMBER \
                  --build-number=$(($BUILD_NUMBER + 1000))
            - name: Generate signed apk
              script: |
                # generate signed universal apk with user specified keys
                android-app-bundle build-universal-apk \
                  --bundle build/**/outputs/**/*.aab \
                  --ks /tmp/keystore.keystore \
                  --ks-pass $CM_KEYSTORE_PASSWORD \
                  --ks-key-alias $CM_KEY_ALIAS_USERNAME \
                  --key-pass $CM_KEY_ALIAS_PASSWORD
          artifacts:
            - build/**/outputs/**/*.apk
            - build/**/outputs/**/*.aab
            - build/**/outputs/**/mapping.txt
          publishing:
            slack:
              channel: '#checkin-app'
              notify_on_build_start: true
#            google_play:
#              credentials: Encrypted(Z0FBQUFBQmZuX08ybUhfTDFLaTRwNlFpNWdaeXRZdmRkLXBjN09jVHVvTVd2Y29yQjE0Sml3VDVFUFU5cy1zWkZEQm1iUFN0NWJjc0ppeXo0Tkt3a3BBTk10WllQXzZIUmZpNVJuZ3FpNUZmbmk1TXVJS3I1RTV3NVJNdno3WC01QlFWLUZUaUlKMndQeWtTQkNNY3VCOU9jTnpMZzJ2eUNSRUN4WlRBWWt0S05JTlV0NjhFbF9LZHNQMm1tc2JrejRwV3R2QWQ4ZGJGN1psel9tZDBRWVNJTVhLcFhwTjJGTlVUV1BDdTBTZ2k2M0tPUlhyZi1DQkNNMmlob1lNWER6MDd4Y2F3clNDR0lnUkJHRkUwR21uZnlwZld5Y0tiZXgtV3FuLW91T1B2X0I3Y3RUR2R6cnBIR2FrVHR3dFlhRnlQcXlKVms4TFhsWGswNTJvX1l5OG9OdGUzUTMwTUR0akVCb2FuVnVhT0c4enRTNG41M0lzSUoyOTBYWVBwZmtVcjdsdF83UnRqdEp4TllhcXhiRHR1QzRHeEg2WUdjQUR1Ui1ETVBTRTJvRm5fNy1RWmc4cUtKd2d5a2tqOHFjTVdPUUt2TnFubzJrU2QyVE84ZDJlbENXTUxHRVlBNi0zVG8xclZvMjRBRWJnTnU0S1Q1Z0tRYnl2TmhleWhZZGo3MVdpNWZVaFRLWm55bWRySXdEcmZIa0FqeWM4ZFB5VWxSRk1vOURlR245dFdLT0xsUXhTMHNpRVl2OEh1bEZsdlFPSHduRUFHWTQ1dGRVTlBkOFdvX09nd0dNTHRPLXF6RWdxR2Y0NFV4UGJoZnNjNFprQVBvVnZUZktZQmVmOEYtX19mOWdrR1FlMzhoVEZyUGtKWGh6dXoxUF9nQ2RvaEhuLV85OHZ5RVRsZ0czd0pJaDNRNnM2Ylc2OVQ4ZG1FYUo2Wmdtakp5NUJZZVlkQkRnN1lQbHJXYVdHZjRMeG1BWm13Q3hOeG1qMGVxN0c1eG4wYnBFX3ItZUhFSkJKRXNSUENneEJubEpqM1NpWFRLdm9fWkZDb2lucm10ZDJaVFk1YnhMNUloeEdFaU9kN2FtMVdaNnQwRjFxdXZENHNHcWZhaDhZeEdHYkdKUTlzWDZCdVhNSS1oVnpld01KRnlSQl9yV2hKNTQ3aE84bURvSG1jekJIV2V6VndDZXlQYjhPUjNnWi1EUXFSRzNkTG01X1ctZThjcndGbjh1dzBjbEMxMTlKMGpHaEdRNnpjRG5mbUJQQmdiNU1fSk5vS1JMd3NsalFVYVNIZTZaOEF6VHFHZUItUVFUU0gxX2hRV2Y5aVJuVkwzSVN4d3htcEQzV2lGb215Y1hwdTNpTDVTTUZmdFNZcEdLc1ZESU9MdTNFRDVtM25yUHBYNlBUcU00V3NyOXZ0bGxNb05zaFFIRHlVVlFna0NrRkJIV1dWZG45RnZFTXg5ZDZEcXpUYV8yVnFIT0hWMm1NRng1UUNzd0syakJFLUdQZHZXaWdFaEVIWm5JSkNTcTdXMmtmdU9Vbmt1UVJMS2UxRmt3dnZ0UnJPNzVoZFFzSV9obGhyNmpfQWc5MGZmZTlHYlQ5ckNNV3FIOXFTY21raVV4U0VfQUdTTTAxWVpvaDVwMy1UZ0dSZTM5UzdmVHVkdU1nNDNNTnYxWndKZE1DeUpGSzQyWmEyT1ExRmxmUTVUZVBwYUVPYzJZSzZXanJjRFEwVVI5cFo0Yk41LXBNbkh4VGNsMF9WckpQWFlwUkQ2MVAyLW93S0FoWXloeFFMMUVZeFV1b2dCakVtTFQ5aEhSdkhURTdTc1RrcmpCNEVpcTJpVGlaRHZSX2tqcnVaQU8yUF9OcHZ3T1B0Unh4RUE5djhwNHl0NEpoSHNlcDQwRmJuWU1MTlRybDc1VWUtZmlIUEtoMUdacmZ6blhFaXFBZnVKanZNRG1JenkxREIxSnp1emZxY2s2enB0dHlpdEhDVTZSY1JJQnhRUFQ5Um53enVxc0xEQ2xSUC1pejdROWpNU0wxSnIxdnBEZUtCaUxOM1ZseG1LVjVMYVVHOHR0ZlJBcWFRdUx3REcyZk5CaVl1Zkk2YXVSRnJHNTFOMUt4VXo4elNuOUc1QUxYVlUxd0oxcW1rd2pKZU9VX1U5YkI4QTQ5WkdWVkczTjBvLU5ReEFTQnVEd244NER5Ujdfc0JpbU9CRElWVzI3Mm44SVR4QXd1Q0FCcDBJSl9pZy1LVnRGLWhPeTBVc0drRkM0OVpnbWpWZXdFaC1kaEk4UXFYSWpuUk9tSDFkUXVjMFNKTnZwTjA4bGFuTVhsRjI3QWdRMEhzU3N2Vl9DbVNhTkdIZ2pXWjFIZW5yX3RNaXl2OVh5MV9wQlRzcDlsaHhpZ0lhek5UUlhKQ0hLelZUODdIbmd2RGxJNWR0bjd5TkRPUm84U3E1UHhYSHBCdXBIb1hzWFJqdElZUjlEdkhNSE9pcDUxcExydFZMUTg4T3BFVEpHOVpwc1oxdVZheWU4TmRVTjdCOENvN1BvRXFnOElpYTV3a0dsbl9MVXVoOUM0dFktMEhQNXlkeEdVYnBJSWYtUHJGVGlaZlFlMDUwcWtYRGd3bnF6clRQNG5SNnFQT3dNQ2RmZG9ZMlZOTmdIWWdibnFoMjJzOVloT0F3M3dlei1XeWY0QXRfTUhLQnVyWThnVmttUHRyWWUzbFQ3Zm9sbno0MVlCelg4WmJNc0lhSDNDUkNXWXpnMDMzZGNYcTdjZkhCUEkzdExrMTFNdmJtbWZUaW9UVjZBR1ZXSHE5WnBVeGpDdnBZMG51XzBBR2VsMDNsTmlkREctOC05QS1wOTU4SWZkZVdFeWtBWkJlcGJad1hIU0IwTTNtbWx0dlB5TUlqNUtMaXpUSkRLNkdVczBrM3c1dFNpMDlkNkhadDNSZlNoeVlya21PODMySmU2QjdOY3VIbzBQWXM5OGo4OWh6MndSeHVFLTFhTGUxZFZCWE5ScFVPSFlPYTU3cnc1dnZMbE44MGNnSXM5NVZnMVNKWEk1UVV0aEh4R281QWRGcS1OcFhhLTBXOU9HeTlMZEF5NGFQc2NTVEE2cS1VRlBUQWdnMWFWeVd4Ym1fUzFUOTZuQ3hCQWNjZXBxUEthSGtoakVuWVRnU2tUejVFRi1heWhzZHBDYkY0aUhzQjF3cGhCdkkycVprcE1samRyS0gyT0lSeTdSVzRkZUw2NjhzNzhxS3gySzY2cmdGVzhxMkFVZVR5dmE4Zm1iVS1NSHF1QzFiSW5FQ3BOdXh2VFVxVC1aRUw3OWNvcklNU1NSV1BMeVk4bHp5TjhSUWdUWk1tTF8wUlREWDJzeVIxdWt5QXdhd2tFZmJYVHllZl84UGNHdkhYWktRWmhON0ZZc1FIOENLNDdCQkNyVnVWUjBYdXpNZVJfZFdZTE96WWlzLU5ld2RPYmx4RmxKT3JkZmJkQ0NqWE4tMDFuVk83NGZ4SWZiMHVCR2RQU25FcVljOVBDcDJXSUVESUhKNGJpNnJnSjdPeW1RMmxUaFJ2b2N2b0JyNXVWd2JGZHY4MVp4ZHR2cE1KR1NSSGotQm1wNHNUWTM5WHJPYTFkVDRRYXc3MnJTZ0g5SWlFX1IwRzZmNDVoM2RxNkFHcC1ydXdwOUU5MlBqSm9JQm1tR2NPN1hUclN4OW1wWDY2alY2VHRxbkczWlUySURxYkhPaGRwUkZ6clJTaWNaTmdIQmZQSkotaUg5NC1RWGtPak85bEs2OTJ5ZVJJUWtIVDJEeHlLVGZqWUVvSXM5S1BzX09fNS1jTVhGMllHNHVESlBSOWFDUi1WNktRckZPQ0JCd25WM1Q3MTBxZjRBcHR5d0hLSTBJRlk4M2tIalZZZlFHX1NrcFdXT2hRcHUzMUxiOExxVEpmSm5EcHBOV0drOXhKTVlIMGt4eUpncXdNRTV1ZVV1Zm5lQTg1Q1VBX3dBNkd6a0FhaVl3bU9zQ3J1TlRMTVNvcjExN1ZtbU03dXM2WndnaWRlVEtGeTJJOU5FdDBKOEhJQW9NaTZPd2E4US11Ti1vZFNQWHRCOG0tVVJ1eWZPR1pDcVNLRjFDMnpZN3FnQWlvT2FsdTZJcFN1ekF6alpiM0NLbEg1dGJ1c2hzNVZzdkd4RHoySUhKeUkxY2NiSmNHSXFCTmlEQjUxeFJrYi04b3RwRktMQmFVX3R5RTdjM0dTRlpjREtrdGtVN1hYOXNiTFhOcXRmXzVoYVpnS055aVJvTXJqUEotV3pUQnJCbjlBZXFydWx4elF4QnJQNGh4dHVCWTFEWjB5cldqUlpWMG5Uc3VRRUViNWRFVjJ4VVBKLTNoOGxSbGxtUVZWVUVjUHdKdHMtUHBtVEFBWmlQZnJkVHl3ZW5qTWFyR25NdFowS1BCTGdZdXRVTWpXbDBVMEdhVFlybVlXYXZBRG9sbm1JdFVUaGIxY0JxdDEtSTU3dnc4U0hUOVdZQk5odHcxemdlQ2k1LTg4cWl2U001T2Nrb1kzMHBjN2Q4VmcwQmp3NnNuS2Y0YVNpc0E3ZTVXVGkyd3V2Y3I3b2VjRmpKSFlJZVpmQmxIWEd0bjNGRjQ4c3VvaE1WMlJmN0I0ejlTd2NhUkN1WVVmb3FsbEpEb2RwMlpVMGU3SWdvamJ3RE5MZTlBOUhYcnhjb3dsRk9yNVVUTnU2QlVobzExZkFicEpEYUIxMDJCSFhqVURMSzNHdzVsZkRBZThTcllWVklraXE2dXROeGFfOTE4MXU3SlpiLXlXYXBMaGVlc25WbERDWF9rUGFNY0xwb1cyME11RWtyeG5GWEs2dUNRVGF0VU5tZ3gwTGNfZDZveFBiTjA2NXg1cmRHQlJLUG1WS2RpUzBBTEFJZDFyRmIydmdYZDdUc2JTTExJVWdGa1JHV3R0aTdwRVVsREtteWNJMFJjbElyZDVua0J4b0FNTk9pX0RhMjRtUTRWSHNiVnNhZ0UycHJ4Z0VWN1NRWmJTMUVvR2NCcTU4M25XZkJlazliMGNCRjZXbjBYMjBHdlBEcmlyWjRGZmZaelI4Q0ZYbXRkN0ppUXVKMkFQYTh4T1BWRXFOVEVOaVBEVlR3WFBOQnhIb3ZqMzRFay1hV3hSWEtkZUFZVFhKZTJTV0ZFUE9UaGNIekNDenZUTU1GNW9rLXJOY0l3VktOdERMZ0gxTjN0bi1FUGtrN0JIR3V0Y0szYmdOWG8zNXUzOHAyNkUzdVVseUN3elRVVTNfRk03MXJhYWhwTXlvenlXMGpENTNwMVBqMWxDU09Qdk5UQ19qay0zLTZyeWp3LXo0T1I3WFMtZFF0eFBVRy1uWEU1eXRzelZPUEFxRHg1YWhlcTdnWUlmMlBYeG1nbGdUaVc0QWp4Tl92a3RmcFRsZWZlZmxhMGRKTHduUkpyZlZjTlJTTC1Jb094WFpvOENJUDA5Nkp6bUh3YlRCekgtcDZPUkUtRm9mTjhzeWtycjRobnRUazYzeE9vM0ItdzNtTThvajZPek5LZm1aSmJfS0J2RGphTERneEFycWNSMklNR1F2YmI5QlI1ZEJaRG9yNkhST0JRWU1OMEZWZUxqWFdPcVE4TzJsWjlkU2ZRYk43ZXpnRGg0aDllTFNVMVhJbEh3Z21FNlg4X213eFVKM2JGbEtjTVJtS3ZtMXlHRndTS1REVmU1NkdYa3NEMW14eWEzN3RtcDBxY2ppaTlPMWdUWDA5alp3Vg==)
#              track: production
  release-ios:
          name: Release IOS
          max_build_duration: 120
          environment:
            vars:
              ANDROID_FIREBASE_API_KEY: "not_used"
              IOS_FIREBASE_API_KEY: Encrypted(Z0FBQUFBQmZnWTZMZHJPcms5RFZNaHFqSlFleU1rRVpwcWJWbEg1STlGaWl5SnhOVXl6djMyRW1yeVZqMnpMSlFDdkZaM2F3UHBWSUpvY0xjYkVrY21UV2pWQTZFS3hNSTA3OXI1VFF6RUkwUW8wZkVUbndqY2oxU2ctbzNZRy1velJRMjhzQXBfRUE=)
              GITHUB_ACCESS_TOKEN: Encrypted(Z0FBQUFBQmZnWTZMQjZtNm1DOVVJaVhEV0xjWFZpbkdBZVAxTm1kNko2Z1F5VVNwRFBDZEZRZXVtLW90LXdHcVZRT3R2NW01MjZiaHd6RVZCRVU0cEFWdktNS1I2d001eHJDWXJ1UDNzQjlPcnd3czJ4RW90ZVJHVHQtVVMycWF5THJtZTJGdlVVTmQ=)
              APP_STORE_CONNECT_ISSUER_ID: d59249e8-efa7-4813-9a44-7dd79035a310
              APP_STORE_CONNECT_KEY_IDENTIFIER: 7347VM6477
              APP_STORE_CONNECT_PRIVATE_KEY: Encrypted(Z0FBQUFBQmZnWTZLcUhwYXlWUW5ZMGpIak9XcmU3R0xQaGx3VGJraHZLRzdGRHdrZkxwbDRPd2hoeVJYUjVQTEFMZjU3eS1mWGFiUlNTUXlrdGVPaWY0UkZHUkdhYlluZnFEUGdvYVMyX25ac1ZIQjNxaUNkbUhzRXVZT3JJYUN4LTJmRjFpUnFWc2dtQ3hoZDZFbkQtaWUyLUNsNlU3bnR3d2lmZEZrNE1yM0loY25CTTVwbEY5cDZIaDdSVU5nYXJaejAyVW01Z29meHFHYmQ5X01xdXdHNUYwZ0E2V1Nwb1NYYXAwanRUVFJHTEEwcTF2RzctYnFNemNxZ0hQOWJLZVpMS1NQSzVfRFVvTmZVZFhfaXB0UUNYOHJXQWJLa2RtV2dKaUhwU1BLNVBvVklfSDdmNWNhaV9NMzVjMnRfbzBYUDZRME9lbkZ6Ri1KVXY3OG02b0pLaWtWVFNYd3hGRFhMaXpja0hFT1pzMTZ5ODRVZF9lWmJjZXJqS0hlOWdfWkY2TVpDVURoaVZDNDQ0Y183eTdLWVoxeVp2UW5nbDk2SkdISDBNX0wxYmFfZGR4TkpOST0=)
              CERTIFICATE_PRIVATE_KEY: Encrypted(Z0FBQUFBQmZnWTZMQkdHaXpaNHlYeEZpUVFPVTlxYTZ2LXBPWk1ZYnlFV1pIbmgwZE03Zm5oeWctcDU1bV9JdU1mNjlTWmxoN3cwSlBPZS1mS0ZGQkM2b3dCX0dldWF5WGVZT2xoeElfMlJDc2ZZSUV4SHM4M1p1dGpDek0yY0RkSkh6U0tVdFlqQWdWNDRGS2pyWlV1THFFZ3JZR0txRkRzVTZzS1ppTVFTQUVfaUJhUzFfWjJxSWxCUTdWdVZQd1NNYXpzUFVOUm9DdXIzcllwc2JkUzBCMXB0bkZqU1ZNaE1vTFNDM2hqVV95WElsQjhBSGpMUjZTVkg1LWNsQTFza2wwTXFnWk5KcU5LNFA4X3B2bWZ0YjBXaDFyWnhyZWpsRlUxdjJaRVZOVmZrMjFHYVpnNHpZT0NVa0dpMWxuRklqZlNmWTY4dEtDVGZhbkNqX0hwN3dKSkJzRXJ0Ul9rMTlWUmtHZWF5ak1RV0R5X095OFdmb1pOS2dVTjVMaTQ2cER5N3ZYTXVrXzhuNlhrRXVVZGJoaFNMZThqeWU3WVZPT2ZSUlcyM0JzUUdXSjlaZGMwZEM2eGl3dUdIVlBjRFU4Zjl3dmY0alh1cEd3RVNJSDA3eVNDSXJlTVNVZzhPUURXWGcza04tU3ZCaW9pRWwyYzJzaWFQLUtwWkYyajZIZGhnUklaWGZaSU1XZkkzaU5WQWh3Z09GZGcxTXZ5MTAwc0tGUlFsa3J6anJGR2tsM09iVjRYTlVNVVA0Ujd6NHZ6NThUOTFCSmtsQnJHRmJoQTNOSmJ1ZHNhWHp4MVdpNXkzbk5lRUljNGpOaUNVeHdfME4wREo4QUhlZy1GR3YtMENyY08xblFjbGZJTlBYdHhYRVFLXzRRWGhWX3lBd2x4OGU0amFsZGs3MDhfS2p2YXJqb3hjcUhaZVoyVFZWNTlCeGVQSm12cWMxX1F5MWgyY1V3R3hpOHBVb2JwZFgwSjd3dDU0SmtST3RnM2NBYWI0d21aTFdid0dOWjl1TkNHUzF3ZHhNVXFCb0FsdThUcVhkNm8zeDJHUmh1Q3ROUFJsVWVwVTRsckNlQmxGcjZHY1VERVlxMHpiaUtGdlNwbHRRRDh5NVB0aS0zLTVMWlhaaWpuZl9YTUZRcUg3NGI5V3JLR2txZjJsTlh3QlJWWWltb3BUUXhUd0NZSF9SSW5VeFY2NHk1ZFMwM1BXcmVONEJBT1FkNENGVFJla1hZVGlMWVlNdl9GMzFTWDVDOFc0bm5sMVZFUGJBbF9SeFA4V2FZTElCOUs2bXV0OGhPbFJ5NzBiV0Vvb2hjalpiM3pDdXotNHZDRTJJR0daUHk3LW1kWWd5Vmx0eW1nNmJ5S3JXNmNERmxhV2stWm1SenZpbFNyYjU4MVVYVjBOSTlJeFVJYkNxZEo1cVhiaFNjTGt6aG4wTjExbnJ6VTk3eWFoRl9IVFMyUDllZzJCbkR5TmtMb2tmOTJlaElnZm5UYXJKWWJwNnVTQ2cxVXNVMDNoM09PVDdIWjBDTXh5eGdpLWhKclFZUmJucWtoSDhFUndleDVoTUZkWnY0NHI4cnVnNldNOF9vaV94cURKd2dic0lDTEZmMkJGQWxSQWxROEdHb1VZS1NUdlZxelNTRU9GbFRUc2FJVTZmV0lQeWtIRzMyRUU3eHJCM0k4eVRtMGxySm5QSkZOTWdCalA4MDdXdnFNdUNtcE93aklRaHA0MjdrY0Nhcldqd0tjVG0zaGFldWRtZEtXc1ZDQ3dLU0tscVN5WFpjUl8tUVhhdnhpQ0dyQnRHRTBHdFRkYkowczFfdFZmYnVhMlR0MmVJNVRnUXV2S0J1U0p4UFpsdFhQMXVrWjBTMFVsemtfbkRQcVRmcUVsMEtVMzFXaTdRN0k5LTlUN29idFFwSkl6WGtyenNwOVZJUzh3TnA2LXdCZUZrTTh6aWVFVEs3ZHFLYnRsbm85T1dRc3djeHUwUEQtVlpiSGF5Rk9wZjA3cVhnaERRR1l0VUllYjl5Nlp6WUJ0anVWWm1fT0dqUHdNSmNQVkxlQ19VZ2JQckZCZVE4OFVxQ1dLUU5RdnI0TkRKRDFON29tbFRDNmtXVUhPR1duUkRjRlVUT0pXeTk0TG54TnpxajVSbElSYzBUcVJrdXA5LVlJVFEtOG1MRGJmSTVscmlOSVBPU3JTQ2ZOR1c3RU1KZEt0MDlpREx1Z0wyaGZqUzN2MDlfMERCdXRSZWxmakpSUk44XzI1c1RmT2JaeXVqZmRJbFBjSXFvek5Hc2NYVnZHc3hBZGV5eHVFSS14RVIwVGk3MmlPT0dwU3oyazJTY3MwS2pmWnNFTmRQUTFJci1oaUpUNFFJNDdKcnZramhFdERCQnE2QjRUcmJaNzZTNGhfVGlwTWFEeEFuc1BtNVJJaUJNRFVOTi1CNDRHY19JbE0yeE16LU5hRUJ2cmJqRkJpM3hCTFZCMTV4ZDVCNktiOWdpVGRKNXR4WnJLbmhIT01ibElvRlZ1eXVqTUJOcUt0OWxDRkFNVlI1dHpILUFkbEFMa3pvNzd0WGlMaWtRY2EyU084dUI2eTZEbXVEWnFXQnN4d0NKbVlhYlZrSUJKSENzd0ZsemY3dVV0SFctRVlnMXIycE5vSzNvN0FVNnVmZXVFQUxBak1mNEZZeEdnTUdnbEJvTm5XTklYUG9MS2t5ZlFMVmtKbHkzMXBkTExQMkxvV3R6UkpiSGV5eDVXaUlQZnlUdGFRZ0VIZF8xTUlYR29mZ3VmMlVkZElZc1l5UGdRNGQtQnA4RnJMNlNYZUtyUjN2NU1ueHZBcjF3ak1tXzZCVElOQlhGQUE2UzBEcmVMTW1uenUwTUxlNGpDRTdVQ0lkdWR1ZzRhVHVib3QtZ0NQNk9BZGNMQWZoLXdHakpmZXVmbjVHRWRnRHRHOEJRRENqdUFsMU0zNk5SY3k4WTQySGJsVUtvX2lETUVLVUFmTW1VeTJFUDFjZi1oVUZWM05nZWFUZkJ2N05GS2dBell6d0NKZ2NUY1J4ME54RXNnaHFQbENDZjN6Z1Rkc1ZxMzBfaWRvcllVX2ZiR0Zw)
            flutter: beta
            xcode: latest
            cocoapods: default
          cache:
            cache_paths: [ ]
          triggering:
            events:
              - tag
            branch_patterns:
              - pattern: '*'
                include: true
                source: true
          scripts:
            - name: Run doctor
              script: flutter doctor -v
            - name: Run emulator (IOS)
              script: flutter emulators --launch apple_ios_simulator
            - name: Setup environment (prod)
              script: make set-prod
            - name: Installing dependencies
              script: flutter packages pub get
            - name: Run analyzer
              script: flutter analyze
            - name: Run unit test
              script: flutter test
            - name: Install Pods
              script: find . -name "Podfile" -execdir pod install --repo-update \;
            - name: Initialize keychain
              script: keychain initialize
            - name: Fetch certificates
              script: app-store-connect fetch-signing-files "com.arya.checkin" --type IOS_APP_STORE --create
            - name: Add certificates to keychain
              script: keychain add-certificates
            - name: Building
              script: |
                flutter build ios \
                  --flavor prod \
                  --release -t lib/main_prod.dart \
                  --build-name=$(git describe --abbrev=0)+$BUILD_NUMBER \
                  --build-number=$(($BUILD_NUMBER + 1000)) \
                  --no-codesign
            - name: Setup provisioning profile
              script: xcode-project use-profiles
            - name: Build signed IPA
              script: xcode-project build-ipa --workspace "ios/Runner.xcworkspace" --scheme "prod"
          artifacts:
            - build/ios/ipa/*.ipa
            - /tmp/xcodebuild_logs/*.log
          publishing:
            slack:
              channel: '#checkin-app'
              notify_on_build_start: true
            app_store_connect:
              apple_id: stefano.saitta92@gmail.com
              password: Encrypted(Z0FBQUFBQmZnWTZMOVloRUtYSWJjWU9sTVdDU3dYRE1TNGVRUWhXTTVTQjVmMmtFWnlFT1pQRlV6OThnMk9rODE4NE9fTmp4UjdkcXVKTUFqX2p3bmp2V0luV01kRVVWN3BBd3ZfOTJkQWg0LS0ycUhudUlhdVk9)