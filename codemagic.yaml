# Automatically generated on 2020-10-10 UTC from https://codemagic.io/app/5c6d213063e304000cb3f99c/settings
# Note that this configuration is not an exact match to UI settings. Review and adjust as necessary.

workflows:
  tests-only:
    name: Tests only
    max_build_duration: 20
    environment:
      vars:
        ANDROID_FIREBASE_API_KEY: Encrypted(Z0FBQUFBQmZnWS1NY2w1NVR2c1ZMNlZRWWNRaGw4UXFzaDBnZTM2OXFqV2x2S3pENmFMZWk5VUh3a1dxUnc2cnJtLXV3SS1VTnpha3hvRkgtdlpLNml3cmUxMC14ZkhpMG9iYXZSM3NJNUEzN21yOElza2hIWG56V0pCNVNLek5FcThGdk0wODVDdG8=)
        IOS_FIREBASE_API_KEY: 'not_used'
      flutter: beta
      xcode: latest
      cocoapods: default
    cache:
      cache_paths:
        - $FCI_BUILD_DIR/build
    triggering:
      events:
        - push
      branch_patterns:
        - pattern: master
          include: true
          source: true
    scripts:
      - make set-dev
      - flutter packages pub get
      - flutter analyze
      - flutter test
      - flutter emulators
      - flutter drive --flavor=dev --target=test_driver/journeys/journeys.dart
    artifacts:
      - build/**/outputs/**/*.apk
      - flutter_drive.log
    publishing:
      slack:
        channel: '#checkin-app'
        notify_on_build_start: true
  ## NOTE: disable triggering
  release-android:
    name: Release Android
    max_build_duration: 60
    environment:
      vars:
        ANDROID_FIREBASE_API_KEY: Encrypted(Z0FBQUFBQmZnWTZLZWxLRUZoY1lVRHpFYjkyWTcyZXN1N283dW5YdUJ3LVlCVEJ6a1dGdV9qYjJYYURTbHdFOTIxbWFVRWFpa0lrMXdmcUIxVDZDXzJBV0R5RFZIZ1l1bUFLWElyUmhCamZCbVIyMV8tVkpNX2tJeWVlbXVFODZzdk5XZ01FVmxRUlM=)
        IOS_FIREBASE_API_KEY: Encrypted(Z0FBQUFBQmZnWTZLamFxLTZvZmhNUXpSUnBXcDVvOXJTNHFOMnJUeUhVMzRGUDJOYmUzX0QwVWl2Mm5NUmUtU210UENxLTdIUFFaMWFFdFk3ZEJPU1dCUVFpb3VXclZKTzhqbDVEY24zbFVOYWM4YlVxcHFMOXFjQjd6Z01kZkV0Vk5QZjA1QjcxV1U=)
        ENV: prod
        CM_KEYSTORE: Encrypted(Z0FBQUFBQmZnWTZLM09IVXNJVHcxaDhlNFMxd0lDcjgyR05LU21wZlUzNENrWGp6Vk5LajBQUmpmTUdpaTRfNEdyZ3UzWUt2YVI4X1BTZGlaZXoyeGR4bnZ6UXowQUNCQTc4WlkwQUVlQUVsQk5fVTFkcEg1MlF5WnZVR3hiRmZrY25CV0s3a1otY0NKQ1RWUWpRUmRYU1ozaXZNUk9FdWZZcWI4V2R3ZE9mVURpYlNQcGE1TlRhUkJGTk9uMk1Ea0ItRktEVlk2d2NXT0NtYXZWcTFYMFQ0UFA1d3FwUjhnQW9uVUhlY1QxR3hMX2NHRm1NMDJSUmlRdGdMVWdyTVlMXzJtSGpMOWcyZGpCelNXVVQyMXdDTDVhWVVqQkxuYnFGVFNtY3BreTVhaHg0TzZXV3RXbXppa29wcGgwMGNGM3ZHQUVHQWo0WTRQeWdBRzJKMm5RY3gzcFJHUkJqTnBHNGF6dzA5U0p5N0YyODY5YmZGZFJvWmp5WlJHVGlrdWNWdldEYTdna1BHMkdWXy1lRXNmUlB3NHhjdFdaMXRVRGxUN2FoZmJjMDFweGxIV2RtWlVoRzZXUlFwRjNCSTAxcklUT0piUm50NDkyVXFCYjNySlZNNl9CRDZEQVpLaVpMd1MtZWQwWFYycERkSXJBeGhmcy1ZeHpUdWZDS1FKRWxCa0ZhY1ZEdV9PZ2o2Vlh5YTN1Q2hOLU9IU0lFdkFNZmVPaDJNZ3p6S3pOX2tvbGV6eWViVW5iMDBXemlHSVZvTHppam9SamRWMzk5UDdXNzlIaEFtZUlDQVlVQXJVUFE0ZUg3RWVIX1NKakhoYjRWZ19TMDFoVWtSVUthLVlmU29zNDkwZjc0M2N4cUI0TFVvdHZvUWk0WlpEdXdGN3h5YVk5NXI3UkhSR09OM0hObTU0U05mZTV4NFdGS3dUYjQwRUQ2YzFQWDAwai1IejQwTHdZVk5WODI1Qk9ZbjlIQ1laWXlhYjY3Tzg3ZmlJTmhDQlhvVDVVUGY0MjlROWMtR0NPbEpFY2U1NUdYOXZfdnJvT3VydDJTRVpwS0ZrWHdudXZ2OVpMY3lwR1hJU21oR0tWSzJ6TU5IdjNmRG1PMzlQUmpRaDlvRDFJV2dFTkJpeFQtZ05MZVFIU1FVakVQOWw3SmV5LXVtb1JYcnN5QlZnTkRjSDdJN1BmSW81ZExPUEZYZHEybzFpd2pIRWF5TG5peXZlVmpQa0cwdjE1QnZwVDd4WjJwR3JaU0w2d0hTaU1BSGZmZ21UYzlHbWppOTZTZ2o3TFpodzI3MzBWRzVQUF9vdEpEUjVFQUVnWHllZDVGeS1oeG1HYlhLVDItMHF6bGVuQ1N6eDZ3MkxIVjhJRFItU1NVYlRUVDBKSFJxT3NucnRyMWpxcVpWZzNLN3huTzFjUW5rN21HQUpmTjNaM3o3S0ZUZ1pCdzQ1bnRTWUk4R0htMUt0d01kekk0MWRvTU5ma0s1RTQyQTliZXJHMzJ2Y1Y0UkhidURMZWRWejdLM2FLUmVyMFNhUUw5WXdIN2ZId1BzR1lEa2xoZmZvWTRQb19tNThwS3IwSXF3d21GMDVyUmJVaWV3bFhlMmtrOWZTeW5GLU1mY2VnX2RXUWpEWm5PSnN4ZEQ0eW5jQWkxT2ZYV0FZeVJMMVV1dHMtdEw2MGpCSnFpZ0xycWJUN1RURnZQZnVHUmxzcEs2ZklNYjRUa0JQVDBaa3NuUUpad2xWZUd4ZUhYVkltS0tjWl95SXhTTmRGUzM2RFBxLUtLcUZKVE5mdWdCOTFYT25EOXdfOHktYm5HMnBua0NLU3lTSGRUQXQtcXFMYV9pbzJEYVh1Q0lwNDVwNVNiYjhLUnFrTTdqdFZibjQ4QklleGpRZnFzbU8zazJVd2RiZXZZcmhiM3p1V19DVjh2b0J3V3hEOTg2OWZrY2FOQlBiZlItRVBXU1o0bmRiRTBvMmFBUS1EcllxSDlzRlRDWW42U1pIZGJNNDVGLUtVbm1Tak0xeVFrY2tQNlhENkxXaFV1TmNWSk0xUHRjbW5YV0Q5T0tXWTRJMkhVamFhdzE5aGZkNV9xbXROdWZHcjlaMVQ1LURRbFByQkc2S1d5MmU2Sk90cVFyeHRKclB1VFAxV29PUF90Smw5VEtwUlFkalVWS21xVU1HT0hYZUlka0NGTm5EdEtZbVhrbWlrMFA5QnJkUDM1Ul9wbGZuaUhYbTI5UXNxb3dWWWpLY0N2QnAwUm92M25TZVNjOXlfTDdkTHdSTVo3LVFtR1JNM3U1MGxjNXc2OXVKazZuRFJkZlM4TnNpYXNLQXd0cjFHdmt3SktTUjdnUk1kYTdVZ1VNdnQzaS1PSXpRdkYwWWNtRlBkZ0I0ellwNVBZZ0VtSUs0WjFSRWp3LUNmR0xxZTNRMTA4V0NibzdOZjhzOGZDVzJhZXhjUm9iVTJGNUlPcVVlTlRMX3J6Rm5UZzZpR1Z3aVRxeXI4SWp1R3lRTjNYYl8wVWRiRlhaRmZ3Q0VTNDh0T0JPRnQ5czYzZzJ0eE9xUjVKZzJUa1NYcFQ5NVMxVnMyXzNOdm1mU1VKS01QU2VkdDg5R1psY2RzUlQwb1hHZHpnOG9tT3pDQnpSdXdad2RGMW00eEdac2QwRW5IM0V0MHQ3eFdheTlMUWtaaHM1c19vc3YxRDI2cVNtTlMyNV9FYWZlS3lnbUpSSURtNlFjVkRMdk0zaFFUUTZXZUY4ZU00bnFsX2MycmNranNxU1pUeU95bGVkV2RaNk1VY28yUDBPQk9xN0VZVS0zTFhGbzdxM1EwRWJsVXlXemtoS3hRM3p6RXVaeEZlRlV4UGYzM2daSzA2UUpQYjRTeTh6eXgzOFp3VzN5Z3pPR2c3SGVvMFJUMHBldUNUV3lXZ2xaQmJ5T2JxcUpaRVBBUnNaaW12bW9UY2dwUTNsMjR5cUx5dVNKVGUxRURsQS01VFpkbk5YNl9IMlh2X2dlbXF6cTgzTkRCejA0aDc1OEV3Nzd3VlFZRjVzNC1sanRwaEF6YURJN1kycG14UmNuVVFvRXpzS0s2TEpVS050VUgyUXVBREkyNE1zOUhINFE2aTRxMHEyNlgxbUFDcGxjNDV6dENwbnkwTk1hdUJCOGljRjBBMGVBTWdaZ3FIVnFqNnZ6RGc3N05Ielo3cVBNbDdZaU9TMUhYcnVBaVFsNVNSV0lxMGJ6VWlzS3JLTWhxZDNYUktyYzJjWktFREFqN3dDaWY0b2FCMTNreGE0TVdFVVlQYlBPQ0JiV2xzQVI4QWVrR182RFdWZnBudl9CVlRYM0xyT3JCalRhRkxWanExU3pGaFNQa3NvemFmbTkyVW9QT3JfeW1GaUU3Z2ZKN0JKa3djem1SRzFRSk13QkUwZW9mQmhLS0ZmcUVRSUhaY0EyaDNxUTVQYlQzMXI1c0tiY2ZiNWRuMWZsVUM1TnFIbmE2SVphR2d4aEppMnc4a1c1dkc0UzhGcUx2YnYyal9BcVpDQTFob1JucXBHRGJqQWtsb2I1TlI0N0lLTWNxZnltaVVpTHQtcUlJUFdKVTdlUjd6a2FWZWk2SG00YkNCaUNZMWZKcHVSdExra3FaSFhJZ3o4cVN0bnAzZmV0OEtJRWJnUTJNRlJvM2xEc1g0NnlQOXAwbFZhZDdXVEFiQUR5NWFtX2drSGxLT255Y21rUFJHZGVnTmVhakxDazZUeEtWVjRQUEt2M3RheVJlaUo4M1R4NHFtOWRZUkQ5NHpNMEJ3RW5wLWtWMWtJQnpZck1QMmV6dHdhZVNPZ3laSl9VZU5jQVlrWlFQTkM5blhreFF6aWxfaGotV292QjNySVcwUWNSdVVrY3VSMnRPcFE2LXRmeXZ3RUJfS01aNTBGcjFjcVJoeTcxaGdNVDJ6aW1jaUZudWRqcThCSnNxeGhSdThGYzFsUXdOT1pYeXFWcnEtWE9oSVFFVDR2dDV6NWpFQUp1RGJkT2tKdmR6UWZqQ3hENlBKdTQtS1lsU2V3bGNHYkZ1anJZeWxJaFlCTThVd1ltMHMxV00weWt0OHpwblVsTkFITXR0MmZaUXd1T3FBX3R3ZlE2NDB0MXRrb2Z2X0RZMWgyZ3ZObE04anNJWkw0YTRleWRmbTZhT0tOOUI2R1VKSWlOelp0QTE0ZFRIdGVlZ2FOZWV1dkFHSkItR2NVeEFHZ01HRlZpY1RmdnhsZHZvVGNRb3NNMUlFaDlhSmkyei02NGxhbkx4Y3BSSzZ1Vl9uX2NvVlNJUGZ2ek5lc0JsWTRjTEJrUlloWmlxbWNnYlFoakhma0ZaLUp0SEhGYkpOYmhOWTFjLW1RZEFZV18yY3VObVlEX3p4bTJtbWxTZUJLblk1dllCcy11T0RxbGlzZGVoSHJsdm00SE1jbVhhLVFfb1I5OWdPTzlhUFpVX29kbUl6Y1k4YWZTd3JXclgyNHdZRW9BZTRKcVhlV0FTdngwTk1ZR2ljTzN3V3NkWUJ2RWRZQWZOVHU4cXB1TmNfcGpNQk9mWTVwMWY4b0RZOHlOQnVJZ3d6cFYxRjBUZEZEUVRYSmFhYU9lSHJZRnhyMDl5TnpqOU1oaTNyQldmai1wYjZadG1Gb2ZqVnRCZW9kc2h5eUFzTE9ydE5fNjV4ZmUwNVhXM2lZTTk3Ny1iUWpRbkE2WmdXeUxDc2ZPM2lSSU9hUXZlbTdoR0RhZXo2NTI2OWJGM2VaYmUxeFlCU3JlRTc4VU9NaGZpSTNydmdYZjJrWUZmbEoyUk9ucE9BazBZSjEzeUhaWVJjczhfR09kS3B4NXU3ZHUxZGRHNjEzeEphUS1WM1RJVWJvUEZDNnBJUHhDaUo1U29mMGlvdldhcnZTWWhWRERZZ3JFcGpOVHZEZGV5Y2FTVU85dzNkNENVdnRPRlhVOVVuTHhTd2VQdWIweU5pd0pvRkt6YkVvXzY5REs4enRnNVIzTlVmWWRrUGNxbHFxdmpRNF96emc3Vk02cGl4NEdYSU05S2NaaExDa2FnaC01b2JrZWNWNi1rVi1Fbk5lTFdSbnpRQjdTLTRYdHhSMW1VOG5zV0EtZVpSQ1dHdXBHYW1kMEVsTGg5UkV0ZGVtUU83NjA2b0w3amllT0FORGdGbUpvc0RtQ3JEOUtFM0Y2S3JuTElLaUJoU1hHRHpkT3RsNlRjUUoxaWdXRmtVbXJ2ejhYTEJ2YnZHMTZWRTdyeUxzVjdvYXBiX2E2d1ZRSkVrV3ZqTkp3eW96MGVDYU5qS2V5czF5UUtDRzFqZHJSbS1lSkZkX3ZlSC1pQlI5UkhkNVREeEZVZGg1WGxPcUx6eGEzdFZUcVF5NUp2UnBRZmxmRnlzUG9SMzkxT3ZaUDc5R0ZuaVdWVnUtb1poOC0zcnRrRnJYWFJmdHdBa0oteUNOc3NGbU1jOENjQVdDa0pnQU5qbUlDSW5EX1l0a1BsYWpUSUdKS2ZIQnpwTEZpUnVERDBlQTR0OUxPbFdpa0dZUWswcHRmUjl6dzlZNDBtbE04UXN4eWVIMmY0MWxUdTUtUVJqcU9YNkFfbk94c1J3SnRkWktnZ1JpWDJ1VjkyVTh3WmFfQ3RiT093OGZIU3AxUFFmYjNFOWpjQ01ET2Y2WnJMRktkb2JMclRzZTlhXzRGRkRySDBVOEpsT1BMbWI1anJOcFUzU3ByYm90V0RxWkpmRnB4SV9Kc0stamhpUUV3LXFsWTM2X3FLSjlISFlJZDF2YTQ3REt6eEItLVJROGFveWtOR3ZuUHNOeGJvUkcwVWM4TnppTmZfWFpBMFIwRzR3NFpqazVMcDVDODdxS0pRejlKT1lxLTV2RmFvNnFwMktlN3RpYWdzQUZ1VlBoQmt3N01nYTV2LUE1ZjJtVHd0NHlMYWhpM0paNDZHOE9vRDhLUENPbTMybm02UlZWNkVxRnhWQ1NITklrUmtuUEdIaU5hZzItN1FNQmZkbmtVQi1kU29ZTFU2Rl96MnFWbVJBUXZFV25iMElHQ3JHS01fZFplUnNIcnJBaWFqd3lqQkJaX2hRVklONTNLa3VkME1YMGlhb1ZBUUxGckhuQWdEenMwTnhkNFpiVG10VkFQSm5IaFVqc2JmWl9ESHVMb2VPdUJuTG5CYkNfcjF3YUdoMmh4UXpHZ3pNUC1YUHRvYW1Nb3hBbjdBOHNhX1pGRU16bjVFdTktOUt0NWNHc0xPSmh1QnRwVmNweGppdzZiRFk5Um9EYjhoODJlVEh4RDZ6bXNRUDhsX2hUUEQxVjh6MWFxU0VrZ3E0V3dfSU5TajlQYXFTTXd3YjA3VlFjOFNCR25KSWl2aGltWEU0d05ySjZ4WEdHUE1MeFctWUs0YW5LcVd6QUZRPT0=)
        CM_KEYSTORE_PASSWORD: Encrypted(Z0FBQUFBQmZnWTZLd05ybG00VVVESVh2UXlvaGphR3lOS2hGTm5pdjJDLXM1R2ZWMmFJZ2FtdkVpVl9XQUZPMzNzcTF4cnZOTmoybDBzbDdqemJGYmk4dzAxM3l1MVMtR0lkbktPS2Y4Q3BzaG1hT2lmdXp2TngyS1dwMWR0b1l4WnlPZFFyMkt0VnA=)
        CM_KEY_ALIAS_PASSWORD: Encrypted(Z0FBQUFBQmZnWTZLMktoZHNrQXJidi1PdVZid3NMZ3Jhano2TFBDT25DUllOMENCZGdPYnhYeVhyNkxHTkNMX0tHNldVeUw3QzJjVFhKUXIwelZONkNZbWs3N2p5VmFrbmJwZHdXZXVQQ2lka2diTWZCd2pZU25XM1JjbnJXckY4cmxlYkpMM1BxTjc=)
        CM_KEY_ALIAS_USERNAME: Encrypted(Z0FBQUFBQmZnWTZLNG4xa0NwSXo1UjNBSmpSeDJrRnQzVFJaMTkwemhmUjFldHQya1pRUVUxQWxwdjB0U2ZPNjZDU2Q2TUdaVGFZUkVRek9Rb1RQUWJWN1MyWWlnbWhfdlE9PQ==)
      flutter: beta
      xcode: latest
      cocoapods: default
#    triggering:
#      events:
#        - tag
#      branch_patterns:
#        - pattern: '*'
#          include: true
#          source: true
    scripts:
      - |
        # set up key.properties
        echo $CM_KEYSTORE | base64 --decode > /tmp/keystore.keystore
        cat >> "$FCI_BUILD_DIR/android/key.properties" <<EOF
        storePassword=$CM_KEYSTORE_PASSWORD
        keyPassword=$CM_KEY_ALIAS_PASSWORD
        keyAlias=$CM_KEY_ALIAS_USERNAME
        storeFile=/tmp/keystore.keystore
        EOF
      - |
        # set up local properties
        echo "flutter.sdk=$HOME/programs/flutter" > "$FCI_BUILD_DIR/android/local.properties"
      - "#!/bin/sh\n\nset -e\ntrap 'echo \"\\\"${BASH_COMMAND}\\\" command filed with\
        \ exit code $?.\"' ERR\n\n### ANDROID\necho \"Configuring Android for ${ENV}...\"\
        \n\nandroid_template=\"$(pwd)/android/app/google-services.json.${ENV}.template\"\
        \nresult_file=\"$(pwd)/android/app/google-services.json\"\n\nif [[ -z ${ANDROID_FIREBASE_API_KEY+x}\
        \ ]]; then\n    read -s -p \"Insert Android API key: \" android_api_key\n\
        \    ANDROID_FIREBASE_API_KEY=${android_api_key}\n    echo \"\\n\u2705   ANDROID_FIREBASE_API_KEY\
        \ set!\"\nelse\n    echo \"\u2705   ANDROID_FIREBASE_API_KEY found!\"\nfi\n\
        \ncp ${android_template} \"${android_template}.tmp\"\nsed -i.bak \"s/__ANDROID_FIREBASE_API_KEY__/${ANDROID_FIREBASE_API_KEY}/\"\
        \ ${android_template}\nrm -rf \"$android_template.bak\"\nmv ${android_template}\
        \ ${result_file}\nmv \"${android_template}.tmp\" ${android_template}\necho\
        \ \"\u2705   Done!\\n\"\n\n### IOS SETUP\necho \"Configuring IOS for ${ENV}...\"\
        \n\nios_template=\"$(pwd)/ios/Runner/GoogleService-Info.plist.${ENV}.template\"\
        \nresult_ios_file=\"$(pwd)/ios/Runner/GoogleService-Info.plist\"\n\n\nif [[\
        \ -z ${IOS_FIREBASE_API_KEY+x} ]]; then\n    read -s -p \"Insert Ios API key:\
        \ \" ios_api_key\n    IOS_FIREBASE_API_KEY=${ios_api_key}\n    echo \"\\n\u2705\
        \   IOS_FIREBASE_API_KEY set!\"\nelse\n    echo \"\u2705   IOS_FIREBASE_API_KEY\
        \ found!\"\nfi\n\ncp ${ios_template} \"${ios_template}.tmp\"\nsed -i.bak \"\
        s/__IOS_FIREBASE_API_KEY__/${IOS_FIREBASE_API_KEY}/\" ${ios_template}\nrm\
        \ -rf \"${ios_template}.bak\"\nmv ${ios_template} ${result_ios_file}\nmv \"\
        ${ios_template}.tmp\" ${ios_template}\necho \"\u2705   Done!\"\n"
      - cd . && flutter packages pub get
      - cd . && flutter analyze
      - cd . && flutter test
      - cd . && flutter build appbundle --release --build-name=1.0.$BUILD_NUMBER --build-number=$(($BUILD_NUMBER
        + 100))
      - |
        # generate signed universal apk with user specified keys
        android-app-bundle build-universal-apk \
          --bundle build/**/outputs/**/*.aab \
          --ks /tmp/keystore.keystore \
          --ks-pass $CM_KEYSTORE_PASSWORD \
          --ks-key-alias $CM_KEY_ALIAS_USERNAME \
          --key-pass $CM_KEY_ALIAS_PASSWORD
    artifacts:
      - build/**/outputs/**/*.apk
      - build/**/outputs/**/*.aab
      - build/**/outputs/**/mapping.txt
      - flutter_drive.log
    publishing:
      slack:
        channel: '#checkin-app'
        notify_on_build_start: true
      google_play:
        credentials: Encrypted(Z0FBQUFBQmZnWTZLaTdqSWFOVThRWTVQcFhkQ3lKa05QNldtb3ZISFZ0M29IeGI1OVlmd2I4QnpERmc5dXExZ3NhQi1jckVsWkU5QUhSSUp5dEJJOG9SbFU4YmRVTnNVNkRPcktCTGVzTWN3VENDNkxSUUhobGc3eXZOaUpyTkVxYWVlRkljZ1ZKRUFDdnNFNnVxVHF3WU1IYVdZdE10SUFDaUwyQlhHOGlDVUp0Z0Zwdm4yb2M4VkpEeXltaTh4MnVjR1RjVnlRZEFuMVZwNExXMUJ3UFZRbFY1YzRzZjhXdlh5RkJfZjlVSFc1amJrbXlZNzE4RWdWUjdHWWVIdHJiWkxWdUU0NHhSb2xHQW1aWUF3enJhdmdITWFNbDRpeFFFckl6dWRJLUlRaEc0MEkyTkFaMDVTN1ZhVjdBT2s3b0wxUHFuOTU2RGh2dkdFWl9GMGxzUTJ2UnJ0SDQ3M0ktVWlDcnhrQjB4VEY4WmFlTWI3emczTW1ka0N6X2F4ZDd0UWRkZXZoZWJ1cm5fMUh3cUVtVk1HM2Zzb2I5SHBSVVE1ejQzNmVhRFBvRWN0T2RDcURrR1lDUzIyczhHN1hCS2tERHlhUXJ5RkZ4R19RaE9rWkhMcEhueUw2QlNYT0ZoZFRnT3RBZnE0cFM3RDktZFlsOVpGX2NWS2RhSHBrSHcyMFpfX0NYelVNYW1zU3FKeVU2S3AxRGlrMFN4UUt3WTNvWkk4Y1N4Q2VXcHdzdFdfaS10Y2ZIRDFRTjBGa0RJY0ZDQUVlUkp0eWJWdUFac01TZ2Noel8zMXRvS1poeTd1dmNvdzJlcEFEY0N5MkZFMmEtbmNtZjNyZG9GaXpzNjc0SXNwZlhqNmRJUE5EcF9ibjdQWEdudURXcDFHWGt4anUtVk5scXZ2Z1ppeGQxd0d0SVAyV3dOb255dk5sS2hHVnVXalFqM1VER3pMU0FrZkFZYkNscU5ZY1R5VXJULXpoWXNnWjhFVmI0ZWNuUXdGQ1l0Um5mNDFsbGNlMC1uNXJaOXEzUVNCN2RzSDFmRkNwY3hUbWxiVm1aMTJkUWVMbGlQbjl6a1lCU1FkbEc0OC1vSXRQWklIME9pRFZEeFRNMVNRSU9QSVhqMGxQbGtpWGlTMjl2SmJ4Y0FUMkt4QVg3ZnhvZ2k1cXoxTGM0U1Y0V004VTk5aDBkRFpBU1RvTGxQYVJlQ2prQnJTY1JGWGtlVnB5b2tGNXlpV01fLTUwQXg2WV92azJJTGw3aVhrZndhX2c5TnU0TmdzbGpIRXVYcmJZNnpvVlN3QkNMN2c2LUR1RzJvZDcyVk5pcmhJbUl6bXZOY2l2RkRJSk1rWGNUTm9iM2Rtd1dQQ2tIWms1RjR6NWNDSVlYb0gtTVRZdWE4czI1Z0xXNEhKdWo3X0h4M2Q3UEF3OXRiekM3ODRkbVhLR3QxRmU4UGdKOHI2U211QjdVRGJRdjJFRXBsZk5FWjZabU5BU3U2dlFIRTY3b2lEbV80NWYwSkJhMTlmNllKTFlHSUQ2eXFvVU9mTzlleHRBZUJYYlRhakNtVU5JLUZLTldKeEFnWFlWRVVIRFRVVlZKOERkcklidGVUVno2TzNaVUMxcjlNby1GTGFGUE1Kc3dIWVpYdXNUUE1RNzFrbUtJUm1fMmY3WGJCU3NPZEVGS0JrMVNDYmg1c1NZMllpUy11WXZXZ0U5QTRtLU1jUXB0b25naVpJb2tNLUZfTjZMcUM0d2dfSkQyQTltQk9PLTRmUFJXLWRLYXNwM084aXJmX2FZVEhvV2k3clFlYWE1dlRrb2NhN0NvV0hUVkdLbEY4YjRhZGp3STZNbnJNU2F2SHRyaFhDYUh6bzFXZFRvZkdsZGVKcVp4WTJaS2ZBd3lsVWMzOU1zeWZtblJPYmt3WUJxSXpDVDlIY3p6TEZUMm14cE4xSHlsVnM0UmkzX3U0STBSQUphRDRSRldsdmhHNmtiS0ZjakpaWERpclJQUzNWRncyZG93Zld4YkRMVnAwTXc2RVhHbmd2OVZ1RU1NNGg0YjVfbmhydXV5aF9USFc0M3FXbnh1NnhZZG5QOGxjYnJUU0FUZ1U1YlJTa1VTLXJPZHFCRURpbXhKOUNCSFE4RkViMUltWnc2S3VpRHJpWjVyRnJhX1Rfb2g2OW83U093QWZiekxSb0RzMlBXdHpnam9xNlpaMHkyT2s4QlkteVdJY3Zya2Y1Y0pYYW9GNnFuTzQzamVOY0dvNGtEdTR1Tm5GOXhBeTJvbC1nTHB1UHJnTF9kNUR6dTk4TlhxYWtEZGVndFNSRFFENldLMzlLdWpCV0RNS1NFRlN4dWpWbS1XYTJYUjR1MVRtdFdfa0czVVFXVndrZ0JVVEo2M2RWNGp5a05xWS1uMmZnSGxaSlZuaXBJV2dYYWg2Q3RHX1FIbEk5ZjVlZzV3NmNNelFuNjFuRnhtSTZJRGx5cUtjYWFHNGpRYXR4bkttYVdteWZyWGY0UW11VmZFY3VqbjNVenFNbG9Cb18xWGprMWVsWkY4aGk1TUtTMWFtYXZsNE9qaGtOaWQxa25QbjNkTS1ZdXl2bDBDalViMzY5Q0kxV0FlSHI0NXl0VjdzeFdYUDdWQjQtT3hUR2xoSXpEcVVqNy1qZXZiRDdVbmU0NWZLNjdVMHdmdG9TZkw2QkprUTJVRUItS29YVmVUWGJ2TGlpMjVFdUpkeUZKQmVRdXUzZFlOVUZybUlLWHpHdTA3a3YwRWl1OXNkSE9IdXJFSk01Zi1SYUJseklBa29tbnIzMFZkcF9SMjB5b1BESUhic2RHNmlvOV9zRHBuZ0YzUldRN19ydG1SQnVscU1JNjZQajQ4TlNRMzJabHUxZXR3Ri1hazdXX2pQaWNhWndYTlNzblE2Z2lfdkRDLVNxbkNJODdXMnNmRFY5QjhqZ01KZjRvSjh2dVhzRkQxb3hrbkhWWE42UWlQa05QTWY4LXNPNUFEWDh1dnJXUEtRc1VjdVlTdl9JOC0wZ2VwdTlHTzlzeUl2VVdYMW9YaTk4SWFxRkV1ZWg2cHV6Y09sSXZyZGNVLUZJM2ZWT09ZSk5mb0xfU0VqSjhPcGx6R1VLWjBaZDMwSFFhU3NiTlNjQmlzZ05sc0plR19OUzZzUHVLOEN1cFNDdnZqa0pieEVEdzVaZVRUclhZb2xCc2w2eTBXSWFvLVpEcUg1VW5LdDNKbURvYVRmd0RoSDE2TG5rTEtKZFFETGtRYUZ1b2g5ZTBmOGFWQ0ladHVNRmk4Z1BOWVNYdlNIb1Rla081NDdVamc3QTQ1dWl1UWRkLXJzWUhFUW8tNmgzX1dsY0tVcDJlR0dKOWlLN3pFZjJBNzVzX20wVTliWEtOdzlNblBaMmxIenViODJVdU13MzJFWko5Vldac1NPTnRIRTVaOEc4WU16TDlzakZ3bjdETEZPUEdYclMzM3pSSHhQWV9WOUhTTXhBME5tc0FnXzU4WlJjVUhMWkdYLUdzYnhjVHVmM1J6WlMzaFNoNUFqYVcybjFRQnlxVG1GQjlNaEdwOVRiQVUzZGhrcmt2eVFRQ204NjJYd1hYbmx1NFNjRG9VUFZ4aHNxeFFKd056T3hJbXlkV0xkM0JEb0J0dTYyb3lZSFhwTWZuU1B0LUNVdTM5bHd1VkRNQzEyUmdoOVZqRFhCSy00OGk4d2E5M1BTbXBoOG1iUEVjVlA0Z2dBVlJGaDYxbExpbkdMaElDby05ZW9xTGtYcXQ4Wl9zNjhUZzJKUjNHcDh5NnZwOTdKWkxkb3hfengtVEZaZzRxN3RobkYwbWdsaUM4WFRyX2kxY2R1ZDBRaHdhRDh0eWwzNVEyOHEtTlZEVjd3eDRlZXVTdGZwYW1kMTl5UV9VMzRFOUhtOGRoa1JVSEpldEV0bkFiaWQyc0cwUDFmd3NBLUt2TDd0U2loMzVxWFphdnFXWGxfME9pSXd3OGdKOG43S0tIYnZEeXpqZXRTMG95czJCUGhPZzl2cFBSMzFFdHdVVnpaTEcyZWQtU1FnUHhaUFpicG1xZVJLU1N4cTJpVGY3UlROWUdTSy1HMTE4U2N2SGdrcERXYnd3bE5VUmRaa213SlU0OFRUVmxERXg5Snp6SWdtOGowUUJud250dGF6NFZNMzUzcWdFY2otUFdrYjFVR3B6Z2RKcm5MQVhWbm9QSVg5Nk9YVzM5U3dRLU5NdkhLaWIwZm1leGZtWk05eHZKb1hqVjhaYlZlMnpYYks5M3lzMExLalVMektzYV9aVnNFYzJKaEVGR1RoT0lKSjZVRWwyTVA0bWNJOTlBPT0=)
        track: production
  ## NOTE: disable publishing to google play
  release-android-new:
          name: Release Android New
          max_build_duration: 60
          environment:
            vars:
              ANDROID_FIREBASE_API_KEY: Encrypted(Z0FBQUFBQmZnWTZLZWxLRUZoY1lVRHpFYjkyWTcyZXN1N283dW5YdUJ3LVlCVEJ6a1dGdV9qYjJYYURTbHdFOTIxbWFVRWFpa0lrMXdmcUIxVDZDXzJBV0R5RFZIZ1l1bUFLWElyUmhCamZCbVIyMV8tVkpNX2tJeWVlbXVFODZzdk5XZ01FVmxRUlM=)
              IOS_FIREBASE_API_KEY: "not_used"
              CM_KEYSTORE: Encrypted(Z0FBQUFBQmZnWTZLM09IVXNJVHcxaDhlNFMxd0lDcjgyR05LU21wZlUzNENrWGp6Vk5LajBQUmpmTUdpaTRfNEdyZ3UzWUt2YVI4X1BTZGlaZXoyeGR4bnZ6UXowQUNCQTc4WlkwQUVlQUVsQk5fVTFkcEg1MlF5WnZVR3hiRmZrY25CV0s3a1otY0NKQ1RWUWpRUmRYU1ozaXZNUk9FdWZZcWI4V2R3ZE9mVURpYlNQcGE1TlRhUkJGTk9uMk1Ea0ItRktEVlk2d2NXT0NtYXZWcTFYMFQ0UFA1d3FwUjhnQW9uVUhlY1QxR3hMX2NHRm1NMDJSUmlRdGdMVWdyTVlMXzJtSGpMOWcyZGpCelNXVVQyMXdDTDVhWVVqQkxuYnFGVFNtY3BreTVhaHg0TzZXV3RXbXppa29wcGgwMGNGM3ZHQUVHQWo0WTRQeWdBRzJKMm5RY3gzcFJHUkJqTnBHNGF6dzA5U0p5N0YyODY5YmZGZFJvWmp5WlJHVGlrdWNWdldEYTdna1BHMkdWXy1lRXNmUlB3NHhjdFdaMXRVRGxUN2FoZmJjMDFweGxIV2RtWlVoRzZXUlFwRjNCSTAxcklUT0piUm50NDkyVXFCYjNySlZNNl9CRDZEQVpLaVpMd1MtZWQwWFYycERkSXJBeGhmcy1ZeHpUdWZDS1FKRWxCa0ZhY1ZEdV9PZ2o2Vlh5YTN1Q2hOLU9IU0lFdkFNZmVPaDJNZ3p6S3pOX2tvbGV6eWViVW5iMDBXemlHSVZvTHppam9SamRWMzk5UDdXNzlIaEFtZUlDQVlVQXJVUFE0ZUg3RWVIX1NKakhoYjRWZ19TMDFoVWtSVUthLVlmU29zNDkwZjc0M2N4cUI0TFVvdHZvUWk0WlpEdXdGN3h5YVk5NXI3UkhSR09OM0hObTU0U05mZTV4NFdGS3dUYjQwRUQ2YzFQWDAwai1IejQwTHdZVk5WODI1Qk9ZbjlIQ1laWXlhYjY3Tzg3ZmlJTmhDQlhvVDVVUGY0MjlROWMtR0NPbEpFY2U1NUdYOXZfdnJvT3VydDJTRVpwS0ZrWHdudXZ2OVpMY3lwR1hJU21oR0tWSzJ6TU5IdjNmRG1PMzlQUmpRaDlvRDFJV2dFTkJpeFQtZ05MZVFIU1FVakVQOWw3SmV5LXVtb1JYcnN5QlZnTkRjSDdJN1BmSW81ZExPUEZYZHEybzFpd2pIRWF5TG5peXZlVmpQa0cwdjE1QnZwVDd4WjJwR3JaU0w2d0hTaU1BSGZmZ21UYzlHbWppOTZTZ2o3TFpodzI3MzBWRzVQUF9vdEpEUjVFQUVnWHllZDVGeS1oeG1HYlhLVDItMHF6bGVuQ1N6eDZ3MkxIVjhJRFItU1NVYlRUVDBKSFJxT3NucnRyMWpxcVpWZzNLN3huTzFjUW5rN21HQUpmTjNaM3o3S0ZUZ1pCdzQ1bnRTWUk4R0htMUt0d01kekk0MWRvTU5ma0s1RTQyQTliZXJHMzJ2Y1Y0UkhidURMZWRWejdLM2FLUmVyMFNhUUw5WXdIN2ZId1BzR1lEa2xoZmZvWTRQb19tNThwS3IwSXF3d21GMDVyUmJVaWV3bFhlMmtrOWZTeW5GLU1mY2VnX2RXUWpEWm5PSnN4ZEQ0eW5jQWkxT2ZYV0FZeVJMMVV1dHMtdEw2MGpCSnFpZ0xycWJUN1RURnZQZnVHUmxzcEs2ZklNYjRUa0JQVDBaa3NuUUpad2xWZUd4ZUhYVkltS0tjWl95SXhTTmRGUzM2RFBxLUtLcUZKVE5mdWdCOTFYT25EOXdfOHktYm5HMnBua0NLU3lTSGRUQXQtcXFMYV9pbzJEYVh1Q0lwNDVwNVNiYjhLUnFrTTdqdFZibjQ4QklleGpRZnFzbU8zazJVd2RiZXZZcmhiM3p1V19DVjh2b0J3V3hEOTg2OWZrY2FOQlBiZlItRVBXU1o0bmRiRTBvMmFBUS1EcllxSDlzRlRDWW42U1pIZGJNNDVGLUtVbm1Tak0xeVFrY2tQNlhENkxXaFV1TmNWSk0xUHRjbW5YV0Q5T0tXWTRJMkhVamFhdzE5aGZkNV9xbXROdWZHcjlaMVQ1LURRbFByQkc2S1d5MmU2Sk90cVFyeHRKclB1VFAxV29PUF90Smw5VEtwUlFkalVWS21xVU1HT0hYZUlka0NGTm5EdEtZbVhrbWlrMFA5QnJkUDM1Ul9wbGZuaUhYbTI5UXNxb3dWWWpLY0N2QnAwUm92M25TZVNjOXlfTDdkTHdSTVo3LVFtR1JNM3U1MGxjNXc2OXVKazZuRFJkZlM4TnNpYXNLQXd0cjFHdmt3SktTUjdnUk1kYTdVZ1VNdnQzaS1PSXpRdkYwWWNtRlBkZ0I0ellwNVBZZ0VtSUs0WjFSRWp3LUNmR0xxZTNRMTA4V0NibzdOZjhzOGZDVzJhZXhjUm9iVTJGNUlPcVVlTlRMX3J6Rm5UZzZpR1Z3aVRxeXI4SWp1R3lRTjNYYl8wVWRiRlhaRmZ3Q0VTNDh0T0JPRnQ5czYzZzJ0eE9xUjVKZzJUa1NYcFQ5NVMxVnMyXzNOdm1mU1VKS01QU2VkdDg5R1psY2RzUlQwb1hHZHpnOG9tT3pDQnpSdXdad2RGMW00eEdac2QwRW5IM0V0MHQ3eFdheTlMUWtaaHM1c19vc3YxRDI2cVNtTlMyNV9FYWZlS3lnbUpSSURtNlFjVkRMdk0zaFFUUTZXZUY4ZU00bnFsX2MycmNranNxU1pUeU95bGVkV2RaNk1VY28yUDBPQk9xN0VZVS0zTFhGbzdxM1EwRWJsVXlXemtoS3hRM3p6RXVaeEZlRlV4UGYzM2daSzA2UUpQYjRTeTh6eXgzOFp3VzN5Z3pPR2c3SGVvMFJUMHBldUNUV3lXZ2xaQmJ5T2JxcUpaRVBBUnNaaW12bW9UY2dwUTNsMjR5cUx5dVNKVGUxRURsQS01VFpkbk5YNl9IMlh2X2dlbXF6cTgzTkRCejA0aDc1OEV3Nzd3VlFZRjVzNC1sanRwaEF6YURJN1kycG14UmNuVVFvRXpzS0s2TEpVS050VUgyUXVBREkyNE1zOUhINFE2aTRxMHEyNlgxbUFDcGxjNDV6dENwbnkwTk1hdUJCOGljRjBBMGVBTWdaZ3FIVnFqNnZ6RGc3N05Ielo3cVBNbDdZaU9TMUhYcnVBaVFsNVNSV0lxMGJ6VWlzS3JLTWhxZDNYUktyYzJjWktFREFqN3dDaWY0b2FCMTNreGE0TVdFVVlQYlBPQ0JiV2xzQVI4QWVrR182RFdWZnBudl9CVlRYM0xyT3JCalRhRkxWanExU3pGaFNQa3NvemFmbTkyVW9QT3JfeW1GaUU3Z2ZKN0JKa3djem1SRzFRSk13QkUwZW9mQmhLS0ZmcUVRSUhaY0EyaDNxUTVQYlQzMXI1c0tiY2ZiNWRuMWZsVUM1TnFIbmE2SVphR2d4aEppMnc4a1c1dkc0UzhGcUx2YnYyal9BcVpDQTFob1JucXBHRGJqQWtsb2I1TlI0N0lLTWNxZnltaVVpTHQtcUlJUFdKVTdlUjd6a2FWZWk2SG00YkNCaUNZMWZKcHVSdExra3FaSFhJZ3o4cVN0bnAzZmV0OEtJRWJnUTJNRlJvM2xEc1g0NnlQOXAwbFZhZDdXVEFiQUR5NWFtX2drSGxLT255Y21rUFJHZGVnTmVhakxDazZUeEtWVjRQUEt2M3RheVJlaUo4M1R4NHFtOWRZUkQ5NHpNMEJ3RW5wLWtWMWtJQnpZck1QMmV6dHdhZVNPZ3laSl9VZU5jQVlrWlFQTkM5blhreFF6aWxfaGotV292QjNySVcwUWNSdVVrY3VSMnRPcFE2LXRmeXZ3RUJfS01aNTBGcjFjcVJoeTcxaGdNVDJ6aW1jaUZudWRqcThCSnNxeGhSdThGYzFsUXdOT1pYeXFWcnEtWE9oSVFFVDR2dDV6NWpFQUp1RGJkT2tKdmR6UWZqQ3hENlBKdTQtS1lsU2V3bGNHYkZ1anJZeWxJaFlCTThVd1ltMHMxV00weWt0OHpwblVsTkFITXR0MmZaUXd1T3FBX3R3ZlE2NDB0MXRrb2Z2X0RZMWgyZ3ZObE04anNJWkw0YTRleWRmbTZhT0tOOUI2R1VKSWlOelp0QTE0ZFRIdGVlZ2FOZWV1dkFHSkItR2NVeEFHZ01HRlZpY1RmdnhsZHZvVGNRb3NNMUlFaDlhSmkyei02NGxhbkx4Y3BSSzZ1Vl9uX2NvVlNJUGZ2ek5lc0JsWTRjTEJrUlloWmlxbWNnYlFoakhma0ZaLUp0SEhGYkpOYmhOWTFjLW1RZEFZV18yY3VObVlEX3p4bTJtbWxTZUJLblk1dllCcy11T0RxbGlzZGVoSHJsdm00SE1jbVhhLVFfb1I5OWdPTzlhUFpVX29kbUl6Y1k4YWZTd3JXclgyNHdZRW9BZTRKcVhlV0FTdngwTk1ZR2ljTzN3V3NkWUJ2RWRZQWZOVHU4cXB1TmNfcGpNQk9mWTVwMWY4b0RZOHlOQnVJZ3d6cFYxRjBUZEZEUVRYSmFhYU9lSHJZRnhyMDl5TnpqOU1oaTNyQldmai1wYjZadG1Gb2ZqVnRCZW9kc2h5eUFzTE9ydE5fNjV4ZmUwNVhXM2lZTTk3Ny1iUWpRbkE2WmdXeUxDc2ZPM2lSSU9hUXZlbTdoR0RhZXo2NTI2OWJGM2VaYmUxeFlCU3JlRTc4VU9NaGZpSTNydmdYZjJrWUZmbEoyUk9ucE9BazBZSjEzeUhaWVJjczhfR09kS3B4NXU3ZHUxZGRHNjEzeEphUS1WM1RJVWJvUEZDNnBJUHhDaUo1U29mMGlvdldhcnZTWWhWRERZZ3JFcGpOVHZEZGV5Y2FTVU85dzNkNENVdnRPRlhVOVVuTHhTd2VQdWIweU5pd0pvRkt6YkVvXzY5REs4enRnNVIzTlVmWWRrUGNxbHFxdmpRNF96emc3Vk02cGl4NEdYSU05S2NaaExDa2FnaC01b2JrZWNWNi1rVi1Fbk5lTFdSbnpRQjdTLTRYdHhSMW1VOG5zV0EtZVpSQ1dHdXBHYW1kMEVsTGg5UkV0ZGVtUU83NjA2b0w3amllT0FORGdGbUpvc0RtQ3JEOUtFM0Y2S3JuTElLaUJoU1hHRHpkT3RsNlRjUUoxaWdXRmtVbXJ2ejhYTEJ2YnZHMTZWRTdyeUxzVjdvYXBiX2E2d1ZRSkVrV3ZqTkp3eW96MGVDYU5qS2V5czF5UUtDRzFqZHJSbS1lSkZkX3ZlSC1pQlI5UkhkNVREeEZVZGg1WGxPcUx6eGEzdFZUcVF5NUp2UnBRZmxmRnlzUG9SMzkxT3ZaUDc5R0ZuaVdWVnUtb1poOC0zcnRrRnJYWFJmdHdBa0oteUNOc3NGbU1jOENjQVdDa0pnQU5qbUlDSW5EX1l0a1BsYWpUSUdKS2ZIQnpwTEZpUnVERDBlQTR0OUxPbFdpa0dZUWswcHRmUjl6dzlZNDBtbE04UXN4eWVIMmY0MWxUdTUtUVJqcU9YNkFfbk94c1J3SnRkWktnZ1JpWDJ1VjkyVTh3WmFfQ3RiT093OGZIU3AxUFFmYjNFOWpjQ01ET2Y2WnJMRktkb2JMclRzZTlhXzRGRkRySDBVOEpsT1BMbWI1anJOcFUzU3ByYm90V0RxWkpmRnB4SV9Kc0stamhpUUV3LXFsWTM2X3FLSjlISFlJZDF2YTQ3REt6eEItLVJROGFveWtOR3ZuUHNOeGJvUkcwVWM4TnppTmZfWFpBMFIwRzR3NFpqazVMcDVDODdxS0pRejlKT1lxLTV2RmFvNnFwMktlN3RpYWdzQUZ1VlBoQmt3N01nYTV2LUE1ZjJtVHd0NHlMYWhpM0paNDZHOE9vRDhLUENPbTMybm02UlZWNkVxRnhWQ1NITklrUmtuUEdIaU5hZzItN1FNQmZkbmtVQi1kU29ZTFU2Rl96MnFWbVJBUXZFV25iMElHQ3JHS01fZFplUnNIcnJBaWFqd3lqQkJaX2hRVklONTNLa3VkME1YMGlhb1ZBUUxGckhuQWdEenMwTnhkNFpiVG10VkFQSm5IaFVqc2JmWl9ESHVMb2VPdUJuTG5CYkNfcjF3YUdoMmh4UXpHZ3pNUC1YUHRvYW1Nb3hBbjdBOHNhX1pGRU16bjVFdTktOUt0NWNHc0xPSmh1QnRwVmNweGppdzZiRFk5Um9EYjhoODJlVEh4RDZ6bXNRUDhsX2hUUEQxVjh6MWFxU0VrZ3E0V3dfSU5TajlQYXFTTXd3YjA3VlFjOFNCR25KSWl2aGltWEU0d05ySjZ4WEdHUE1MeFctWUs0YW5LcVd6QUZRPT0=)
              CM_KEYSTORE_PASSWORD: Encrypted(Z0FBQUFBQmZnWTZLd05ybG00VVVESVh2UXlvaGphR3lOS2hGTm5pdjJDLXM1R2ZWMmFJZ2FtdkVpVl9XQUZPMzNzcTF4cnZOTmoybDBzbDdqemJGYmk4dzAxM3l1MVMtR0lkbktPS2Y4Q3BzaG1hT2lmdXp2TngyS1dwMWR0b1l4WnlPZFFyMkt0VnA=)
              CM_KEY_ALIAS_PASSWORD: Encrypted(Z0FBQUFBQmZnWTZLMktoZHNrQXJidi1PdVZid3NMZ3Jhano2TFBDT25DUllOMENCZGdPYnhYeVhyNkxHTkNMX0tHNldVeUw3QzJjVFhKUXIwelZONkNZbWs3N2p5VmFrbmJwZHdXZXVQQ2lka2diTWZCd2pZU25XM1JjbnJXckY4cmxlYkpMM1BxTjc=)
              CM_KEY_ALIAS_USERNAME: Encrypted(Z0FBQUFBQmZnWTZLNG4xa0NwSXo1UjNBSmpSeDJrRnQzVFJaMTkwemhmUjFldHQya1pRUVUxQWxwdjB0U2ZPNjZDU2Q2TUdaVGFZUkVRek9Rb1RQUWJWN1MyWWlnbWhfdlE9PQ==)
            flutter: beta
            xcode: latest
            cocoapods: default
          triggering:
            events:
              - tag
            branch_patterns:
              - pattern: '*'
                include: true
                source: true
          scripts:
            - make set-key-properties
            - |
              # set up local properties
              echo "flutter.sdk=$HOME/programs/flutter" > "$FCI_BUILD_DIR/android/local.properties"
            - make set-prod
            - cd . && flutter packages pub get
            - cd . && flutter analyze
            - cd . && flutter test
            - cd . && flutter build appbundle --release --build-name=$(git describe --abbrev=0)+$BUILD_NUMBER --build-number=$(($BUILD_NUMBER
              + 100))
            - |
              # generate signed universal apk with user specified keys
              android-app-bundle build-universal-apk \
                --bundle build/**/outputs/**/*.aab \
                --ks /tmp/keystore.keystore \
                --ks-pass $CM_KEYSTORE_PASSWORD \
                --ks-key-alias $CM_KEY_ALIAS_USERNAME \
                --key-pass $CM_KEY_ALIAS_PASSWORD
          artifacts:
            - build/**/outputs/**/*.apk
            - build/**/outputs/**/*.aab
            - build/**/outputs/**/mapping.txt
            - flutter_drive.log
          publishing:
            slack:
              channel: '#checkin-app'
              notify_on_build_start: true

#            google_play:
#              credentials: Encrypted(Z0FBQUFBQmZnWTZLaTdqSWFOVThRWTVQcFhkQ3lKa05QNldtb3ZISFZ0M29IeGI1OVlmd2I4QnpERmc5dXExZ3NhQi1jckVsWkU5QUhSSUp5dEJJOG9SbFU4YmRVTnNVNkRPcktCTGVzTWN3VENDNkxSUUhobGc3eXZOaUpyTkVxYWVlRkljZ1ZKRUFDdnNFNnVxVHF3WU1IYVdZdE10SUFDaUwyQlhHOGlDVUp0Z0Zwdm4yb2M4VkpEeXltaTh4MnVjR1RjVnlRZEFuMVZwNExXMUJ3UFZRbFY1YzRzZjhXdlh5RkJfZjlVSFc1amJrbXlZNzE4RWdWUjdHWWVIdHJiWkxWdUU0NHhSb2xHQW1aWUF3enJhdmdITWFNbDRpeFFFckl6dWRJLUlRaEc0MEkyTkFaMDVTN1ZhVjdBT2s3b0wxUHFuOTU2RGh2dkdFWl9GMGxzUTJ2UnJ0SDQ3M0ktVWlDcnhrQjB4VEY4WmFlTWI3emczTW1ka0N6X2F4ZDd0UWRkZXZoZWJ1cm5fMUh3cUVtVk1HM2Zzb2I5SHBSVVE1ejQzNmVhRFBvRWN0T2RDcURrR1lDUzIyczhHN1hCS2tERHlhUXJ5RkZ4R19RaE9rWkhMcEhueUw2QlNYT0ZoZFRnT3RBZnE0cFM3RDktZFlsOVpGX2NWS2RhSHBrSHcyMFpfX0NYelVNYW1zU3FKeVU2S3AxRGlrMFN4UUt3WTNvWkk4Y1N4Q2VXcHdzdFdfaS10Y2ZIRDFRTjBGa0RJY0ZDQUVlUkp0eWJWdUFac01TZ2Noel8zMXRvS1poeTd1dmNvdzJlcEFEY0N5MkZFMmEtbmNtZjNyZG9GaXpzNjc0SXNwZlhqNmRJUE5EcF9ibjdQWEdudURXcDFHWGt4anUtVk5scXZ2Z1ppeGQxd0d0SVAyV3dOb255dk5sS2hHVnVXalFqM1VER3pMU0FrZkFZYkNscU5ZY1R5VXJULXpoWXNnWjhFVmI0ZWNuUXdGQ1l0Um5mNDFsbGNlMC1uNXJaOXEzUVNCN2RzSDFmRkNwY3hUbWxiVm1aMTJkUWVMbGlQbjl6a1lCU1FkbEc0OC1vSXRQWklIME9pRFZEeFRNMVNRSU9QSVhqMGxQbGtpWGlTMjl2SmJ4Y0FUMkt4QVg3ZnhvZ2k1cXoxTGM0U1Y0V004VTk5aDBkRFpBU1RvTGxQYVJlQ2prQnJTY1JGWGtlVnB5b2tGNXlpV01fLTUwQXg2WV92azJJTGw3aVhrZndhX2c5TnU0TmdzbGpIRXVYcmJZNnpvVlN3QkNMN2c2LUR1RzJvZDcyVk5pcmhJbUl6bXZOY2l2RkRJSk1rWGNUTm9iM2Rtd1dQQ2tIWms1RjR6NWNDSVlYb0gtTVRZdWE4czI1Z0xXNEhKdWo3X0h4M2Q3UEF3OXRiekM3ODRkbVhLR3QxRmU4UGdKOHI2U211QjdVRGJRdjJFRXBsZk5FWjZabU5BU3U2dlFIRTY3b2lEbV80NWYwSkJhMTlmNllKTFlHSUQ2eXFvVU9mTzlleHRBZUJYYlRhakNtVU5JLUZLTldKeEFnWFlWRVVIRFRVVlZKOERkcklidGVUVno2TzNaVUMxcjlNby1GTGFGUE1Kc3dIWVpYdXNUUE1RNzFrbUtJUm1fMmY3WGJCU3NPZEVGS0JrMVNDYmg1c1NZMllpUy11WXZXZ0U5QTRtLU1jUXB0b25naVpJb2tNLUZfTjZMcUM0d2dfSkQyQTltQk9PLTRmUFJXLWRLYXNwM084aXJmX2FZVEhvV2k3clFlYWE1dlRrb2NhN0NvV0hUVkdLbEY4YjRhZGp3STZNbnJNU2F2SHRyaFhDYUh6bzFXZFRvZkdsZGVKcVp4WTJaS2ZBd3lsVWMzOU1zeWZtblJPYmt3WUJxSXpDVDlIY3p6TEZUMm14cE4xSHlsVnM0UmkzX3U0STBSQUphRDRSRldsdmhHNmtiS0ZjakpaWERpclJQUzNWRncyZG93Zld4YkRMVnAwTXc2RVhHbmd2OVZ1RU1NNGg0YjVfbmhydXV5aF9USFc0M3FXbnh1NnhZZG5QOGxjYnJUU0FUZ1U1YlJTa1VTLXJPZHFCRURpbXhKOUNCSFE4RkViMUltWnc2S3VpRHJpWjVyRnJhX1Rfb2g2OW83U093QWZiekxSb0RzMlBXdHpnam9xNlpaMHkyT2s4QlkteVdJY3Zya2Y1Y0pYYW9GNnFuTzQzamVOY0dvNGtEdTR1Tm5GOXhBeTJvbC1nTHB1UHJnTF9kNUR6dTk4TlhxYWtEZGVndFNSRFFENldLMzlLdWpCV0RNS1NFRlN4dWpWbS1XYTJYUjR1MVRtdFdfa0czVVFXVndrZ0JVVEo2M2RWNGp5a05xWS1uMmZnSGxaSlZuaXBJV2dYYWg2Q3RHX1FIbEk5ZjVlZzV3NmNNelFuNjFuRnhtSTZJRGx5cUtjYWFHNGpRYXR4bkttYVdteWZyWGY0UW11VmZFY3VqbjNVenFNbG9Cb18xWGprMWVsWkY4aGk1TUtTMWFtYXZsNE9qaGtOaWQxa25QbjNkTS1ZdXl2bDBDalViMzY5Q0kxV0FlSHI0NXl0VjdzeFdYUDdWQjQtT3hUR2xoSXpEcVVqNy1qZXZiRDdVbmU0NWZLNjdVMHdmdG9TZkw2QkprUTJVRUItS29YVmVUWGJ2TGlpMjVFdUpkeUZKQmVRdXUzZFlOVUZybUlLWHpHdTA3a3YwRWl1OXNkSE9IdXJFSk01Zi1SYUJseklBa29tbnIzMFZkcF9SMjB5b1BESUhic2RHNmlvOV9zRHBuZ0YzUldRN19ydG1SQnVscU1JNjZQajQ4TlNRMzJabHUxZXR3Ri1hazdXX2pQaWNhWndYTlNzblE2Z2lfdkRDLVNxbkNJODdXMnNmRFY5QjhqZ01KZjRvSjh2dVhzRkQxb3hrbkhWWE42UWlQa05QTWY4LXNPNUFEWDh1dnJXUEtRc1VjdVlTdl9JOC0wZ2VwdTlHTzlzeUl2VVdYMW9YaTk4SWFxRkV1ZWg2cHV6Y09sSXZyZGNVLUZJM2ZWT09ZSk5mb0xfU0VqSjhPcGx6R1VLWjBaZDMwSFFhU3NiTlNjQmlzZ05sc0plR19OUzZzUHVLOEN1cFNDdnZqa0pieEVEdzVaZVRUclhZb2xCc2w2eTBXSWFvLVpEcUg1VW5LdDNKbURvYVRmd0RoSDE2TG5rTEtKZFFETGtRYUZ1b2g5ZTBmOGFWQ0ladHVNRmk4Z1BOWVNYdlNIb1Rla081NDdVamc3QTQ1dWl1UWRkLXJzWUhFUW8tNmgzX1dsY0tVcDJlR0dKOWlLN3pFZjJBNzVzX20wVTliWEtOdzlNblBaMmxIenViODJVdU13MzJFWko5Vldac1NPTnRIRTVaOEc4WU16TDlzakZ3bjdETEZPUEdYclMzM3pSSHhQWV9WOUhTTXhBME5tc0FnXzU4WlJjVUhMWkdYLUdzYnhjVHVmM1J6WlMzaFNoNUFqYVcybjFRQnlxVG1GQjlNaEdwOVRiQVUzZGhrcmt2eVFRQ204NjJYd1hYbmx1NFNjRG9VUFZ4aHNxeFFKd056T3hJbXlkV0xkM0JEb0J0dTYyb3lZSFhwTWZuU1B0LUNVdTM5bHd1VkRNQzEyUmdoOVZqRFhCSy00OGk4d2E5M1BTbXBoOG1iUEVjVlA0Z2dBVlJGaDYxbExpbkdMaElDby05ZW9xTGtYcXQ4Wl9zNjhUZzJKUjNHcDh5NnZwOTdKWkxkb3hfengtVEZaZzRxN3RobkYwbWdsaUM4WFRyX2kxY2R1ZDBRaHdhRDh0eWwzNVEyOHEtTlZEVjd3eDRlZXVTdGZwYW1kMTl5UV9VMzRFOUhtOGRoa1JVSEpldEV0bkFiaWQyc0cwUDFmd3NBLUt2TDd0U2loMzVxWFphdnFXWGxfME9pSXd3OGdKOG43S0tIYnZEeXpqZXRTMG95czJCUGhPZzl2cFBSMzFFdHdVVnpaTEcyZWQtU1FnUHhaUFpicG1xZVJLU1N4cTJpVGY3UlROWUdTSy1HMTE4U2N2SGdrcERXYnd3bE5VUmRaa213SlU0OFRUVmxERXg5Snp6SWdtOGowUUJud250dGF6NFZNMzUzcWdFY2otUFdrYjFVR3B6Z2RKcm5MQVhWbm9QSVg5Nk9YVzM5U3dRLU5NdkhLaWIwZm1leGZtWk05eHZKb1hqVjhaYlZlMnpYYks5M3lzMExLalVMektzYV9aVnNFYzJKaEVGR1RoT0lKSjZVRWwyTVA0bWNJOTlBPT0=)
#              track: production
  release-ios:
    name: Release IOS
    max_build_duration: 120
    environment:
      vars:
        ANDROID_FIREBASE_API_KEY: Encrypted(Z0FBQUFBQmZnWTZMekNtTnFCQnpfY1luUkplRVdlT3Bnb1ZkWjJudFh4Qk1QWFdIYWxJNWZMZkFwRFFUVnBPdmRjWUl2enlIQ1hoNE42SDQtTU1kTm5YbkRmRFVoR2VzRWhfQ0JqV3c1M1ZEa2RXeGo4V2kyZC1QUTNnaHBOdEpGY0c3QmJEX015VlQ=)
        IOS_FIREBASE_API_KEY: Encrypted(Z0FBQUFBQmZnWTZMZHJPcms5RFZNaHFqSlFleU1rRVpwcWJWbEg1STlGaWl5SnhOVXl6djMyRW1yeVZqMnpMSlFDdkZaM2F3UHBWSUpvY0xjYkVrY21UV2pWQTZFS3hNSTA3OXI1VFF6RUkwUW8wZkVUbndqY2oxU2ctbzNZRy1velJRMjhzQXBfRUE=)
        ENV: prod
        GITHUB_ACCESS_TOKEN: Encrypted(Z0FBQUFBQmZnWTZMQjZtNm1DOVVJaVhEV0xjWFZpbkdBZVAxTm1kNko2Z1F5VVNwRFBDZEZRZXVtLW90LXdHcVZRT3R2NW01MjZiaHd6RVZCRVU0cEFWdktNS1I2d001eHJDWXJ1UDNzQjlPcnd3czJ4RW90ZVJHVHQtVVMycWF5THJtZTJGdlVVTmQ=)
        APP_STORE_CONNECT_ISSUER_ID: d59249e8-efa7-4813-9a44-7dd79035a310
        APP_STORE_CONNECT_KEY_IDENTIFIER: 7347VM6477
        APP_STORE_CONNECT_PRIVATE_KEY: Encrypted(Z0FBQUFBQmZnWTZLcUhwYXlWUW5ZMGpIak9XcmU3R0xQaGx3VGJraHZLRzdGRHdrZkxwbDRPd2hoeVJYUjVQTEFMZjU3eS1mWGFiUlNTUXlrdGVPaWY0UkZHUkdhYlluZnFEUGdvYVMyX25ac1ZIQjNxaUNkbUhzRXVZT3JJYUN4LTJmRjFpUnFWc2dtQ3hoZDZFbkQtaWUyLUNsNlU3bnR3d2lmZEZrNE1yM0loY25CTTVwbEY5cDZIaDdSVU5nYXJaejAyVW01Z29meHFHYmQ5X01xdXdHNUYwZ0E2V1Nwb1NYYXAwanRUVFJHTEEwcTF2RzctYnFNemNxZ0hQOWJLZVpMS1NQSzVfRFVvTmZVZFhfaXB0UUNYOHJXQWJLa2RtV2dKaUhwU1BLNVBvVklfSDdmNWNhaV9NMzVjMnRfbzBYUDZRME9lbkZ6Ri1KVXY3OG02b0pLaWtWVFNYd3hGRFhMaXpja0hFT1pzMTZ5ODRVZF9lWmJjZXJqS0hlOWdfWkY2TVpDVURoaVZDNDQ0Y183eTdLWVoxeVp2UW5nbDk2SkdISDBNX0wxYmFfZGR4TkpOST0=)
        CERTIFICATE_PRIVATE_KEY: Encrypted(Z0FBQUFBQmZnWTZMQkdHaXpaNHlYeEZpUVFPVTlxYTZ2LXBPWk1ZYnlFV1pIbmgwZE03Zm5oeWctcDU1bV9JdU1mNjlTWmxoN3cwSlBPZS1mS0ZGQkM2b3dCX0dldWF5WGVZT2xoeElfMlJDc2ZZSUV4SHM4M1p1dGpDek0yY0RkSkh6U0tVdFlqQWdWNDRGS2pyWlV1THFFZ3JZR0txRkRzVTZzS1ppTVFTQUVfaUJhUzFfWjJxSWxCUTdWdVZQd1NNYXpzUFVOUm9DdXIzcllwc2JkUzBCMXB0bkZqU1ZNaE1vTFNDM2hqVV95WElsQjhBSGpMUjZTVkg1LWNsQTFza2wwTXFnWk5KcU5LNFA4X3B2bWZ0YjBXaDFyWnhyZWpsRlUxdjJaRVZOVmZrMjFHYVpnNHpZT0NVa0dpMWxuRklqZlNmWTY4dEtDVGZhbkNqX0hwN3dKSkJzRXJ0Ul9rMTlWUmtHZWF5ak1RV0R5X095OFdmb1pOS2dVTjVMaTQ2cER5N3ZYTXVrXzhuNlhrRXVVZGJoaFNMZThqeWU3WVZPT2ZSUlcyM0JzUUdXSjlaZGMwZEM2eGl3dUdIVlBjRFU4Zjl3dmY0alh1cEd3RVNJSDA3eVNDSXJlTVNVZzhPUURXWGcza04tU3ZCaW9pRWwyYzJzaWFQLUtwWkYyajZIZGhnUklaWGZaSU1XZkkzaU5WQWh3Z09GZGcxTXZ5MTAwc0tGUlFsa3J6anJGR2tsM09iVjRYTlVNVVA0Ujd6NHZ6NThUOTFCSmtsQnJHRmJoQTNOSmJ1ZHNhWHp4MVdpNXkzbk5lRUljNGpOaUNVeHdfME4wREo4QUhlZy1GR3YtMENyY08xblFjbGZJTlBYdHhYRVFLXzRRWGhWX3lBd2x4OGU0amFsZGs3MDhfS2p2YXJqb3hjcUhaZVoyVFZWNTlCeGVQSm12cWMxX1F5MWgyY1V3R3hpOHBVb2JwZFgwSjd3dDU0SmtST3RnM2NBYWI0d21aTFdid0dOWjl1TkNHUzF3ZHhNVXFCb0FsdThUcVhkNm8zeDJHUmh1Q3ROUFJsVWVwVTRsckNlQmxGcjZHY1VERVlxMHpiaUtGdlNwbHRRRDh5NVB0aS0zLTVMWlhaaWpuZl9YTUZRcUg3NGI5V3JLR2txZjJsTlh3QlJWWWltb3BUUXhUd0NZSF9SSW5VeFY2NHk1ZFMwM1BXcmVONEJBT1FkNENGVFJla1hZVGlMWVlNdl9GMzFTWDVDOFc0bm5sMVZFUGJBbF9SeFA4V2FZTElCOUs2bXV0OGhPbFJ5NzBiV0Vvb2hjalpiM3pDdXotNHZDRTJJR0daUHk3LW1kWWd5Vmx0eW1nNmJ5S3JXNmNERmxhV2stWm1SenZpbFNyYjU4MVVYVjBOSTlJeFVJYkNxZEo1cVhiaFNjTGt6aG4wTjExbnJ6VTk3eWFoRl9IVFMyUDllZzJCbkR5TmtMb2tmOTJlaElnZm5UYXJKWWJwNnVTQ2cxVXNVMDNoM09PVDdIWjBDTXh5eGdpLWhKclFZUmJucWtoSDhFUndleDVoTUZkWnY0NHI4cnVnNldNOF9vaV94cURKd2dic0lDTEZmMkJGQWxSQWxROEdHb1VZS1NUdlZxelNTRU9GbFRUc2FJVTZmV0lQeWtIRzMyRUU3eHJCM0k4eVRtMGxySm5QSkZOTWdCalA4MDdXdnFNdUNtcE93aklRaHA0MjdrY0Nhcldqd0tjVG0zaGFldWRtZEtXc1ZDQ3dLU0tscVN5WFpjUl8tUVhhdnhpQ0dyQnRHRTBHdFRkYkowczFfdFZmYnVhMlR0MmVJNVRnUXV2S0J1U0p4UFpsdFhQMXVrWjBTMFVsemtfbkRQcVRmcUVsMEtVMzFXaTdRN0k5LTlUN29idFFwSkl6WGtyenNwOVZJUzh3TnA2LXdCZUZrTTh6aWVFVEs3ZHFLYnRsbm85T1dRc3djeHUwUEQtVlpiSGF5Rk9wZjA3cVhnaERRR1l0VUllYjl5Nlp6WUJ0anVWWm1fT0dqUHdNSmNQVkxlQ19VZ2JQckZCZVE4OFVxQ1dLUU5RdnI0TkRKRDFON29tbFRDNmtXVUhPR1duUkRjRlVUT0pXeTk0TG54TnpxajVSbElSYzBUcVJrdXA5LVlJVFEtOG1MRGJmSTVscmlOSVBPU3JTQ2ZOR1c3RU1KZEt0MDlpREx1Z0wyaGZqUzN2MDlfMERCdXRSZWxmakpSUk44XzI1c1RmT2JaeXVqZmRJbFBjSXFvek5Hc2NYVnZHc3hBZGV5eHVFSS14RVIwVGk3MmlPT0dwU3oyazJTY3MwS2pmWnNFTmRQUTFJci1oaUpUNFFJNDdKcnZramhFdERCQnE2QjRUcmJaNzZTNGhfVGlwTWFEeEFuc1BtNVJJaUJNRFVOTi1CNDRHY19JbE0yeE16LU5hRUJ2cmJqRkJpM3hCTFZCMTV4ZDVCNktiOWdpVGRKNXR4WnJLbmhIT01ibElvRlZ1eXVqTUJOcUt0OWxDRkFNVlI1dHpILUFkbEFMa3pvNzd0WGlMaWtRY2EyU084dUI2eTZEbXVEWnFXQnN4d0NKbVlhYlZrSUJKSENzd0ZsemY3dVV0SFctRVlnMXIycE5vSzNvN0FVNnVmZXVFQUxBak1mNEZZeEdnTUdnbEJvTm5XTklYUG9MS2t5ZlFMVmtKbHkzMXBkTExQMkxvV3R6UkpiSGV5eDVXaUlQZnlUdGFRZ0VIZF8xTUlYR29mZ3VmMlVkZElZc1l5UGdRNGQtQnA4RnJMNlNYZUtyUjN2NU1ueHZBcjF3ak1tXzZCVElOQlhGQUE2UzBEcmVMTW1uenUwTUxlNGpDRTdVQ0lkdWR1ZzRhVHVib3QtZ0NQNk9BZGNMQWZoLXdHakpmZXVmbjVHRWRnRHRHOEJRRENqdUFsMU0zNk5SY3k4WTQySGJsVUtvX2lETUVLVUFmTW1VeTJFUDFjZi1oVUZWM05nZWFUZkJ2N05GS2dBell6d0NKZ2NUY1J4ME54RXNnaHFQbENDZjN6Z1Rkc1ZxMzBfaWRvcllVX2ZiR0Zw)
      flutter: beta
      xcode: latest
      cocoapods: default
    cache:
      cache_paths: [ ]
    triggering:
      events:
        - tag
      branch_patterns:
        - pattern: '*'
          include: true
          source: true
    scripts:
      - "#!/bin/sh\n\nset -e\ntrap 'echo \"\\\"${BASH_COMMAND}\\\" command filed with\
        \ exit code $?.\"' ERR\n\n### ANDROID\necho \"Configuring Android for ${ENV}...\"\
        \n\nandroid_template=\"$(pwd)/android/app/google-services.json.${ENV}.template\"\
        \nresult_file=\"$(pwd)/android/app/google-services.json\"\n\nif [[ -z ${ANDROID_FIREBASE_API_KEY+x}\
        \ ]]; then\n    read -s -p \"Insert Android API key: \" android_api_key\n\
        \    ANDROID_FIREBASE_API_KEY=${android_api_key}\n    echo \"\\n\u2705   ANDROID_FIREBASE_API_KEY\
        \ set!\"\nelse\n    echo \"\u2705   ANDROID_FIREBASE_API_KEY found!\"\nfi\n\
        \ncp ${android_template} \"${android_template}.tmp\"\nsed -i.bak \"s/__ANDROID_FIREBASE_API_KEY__/${ANDROID_FIREBASE_API_KEY}/\"\
        \ ${android_template}\nrm -rf \"$android_template.bak\"\nmv ${android_template}\
        \ ${result_file}\nmv \"${android_template}.tmp\" ${android_template}\necho\
        \ \"\u2705   Done!\\n\"\n\n### IOS SETUP\necho \"Configuring IOS for ${ENV}...\"\
        \n\nios_template=\"$(pwd)/ios/Runner/GoogleService-Info.plist.${ENV}.template\"\
        \nresult_ios_file=\"$(pwd)/ios/Runner/GoogleService-Info.plist\"\n\n\nif [[\
        \ -z ${IOS_FIREBASE_API_KEY+x} ]]; then\n    read -s -p \"Insert Ios API key:\
        \ \" ios_api_key\n    IOS_FIREBASE_API_KEY=${ios_api_key}\n    echo \"\\n\u2705\
        \   IOS_FIREBASE_API_KEY set!\"\nelse\n    echo \"\u2705   IOS_FIREBASE_API_KEY\
        \ found!\"\nfi\n\ncp ${ios_template} \"${ios_template}.tmp\"\nsed -i.bak \"\
        s/__IOS_FIREBASE_API_KEY__/${IOS_FIREBASE_API_KEY}/\" ${ios_template}\nrm\
        \ -rf \"${ios_template}.bak\"\nmv ${ios_template} ${result_ios_file}\nmv \"\
        ${ios_template}.tmp\" ${ios_template}\necho \"\u2705   Done!\"\n"
      - cd . && flutter packages pub get
      - cd . && flutter analyze
      - cd . && flutter test
      - find . -name "Podfile" -execdir pod install \;
      - keychain initialize
      - app-store-connect fetch-signing-files "com.arya.checkin" --type IOS_APP_STORE
        --create
      - keychain add-certificates
      - cd . && flutter build ios --release --build-name=1.0.$BUILD_NUMBER --build-number=$(($BUILD_NUMBER
        + 100)) --no-codesign
      - xcode-project use-profiles
      - cd . && xcode-project build-ipa --workspace "ios/Runner.xcworkspace" --scheme
        "Runner"
    artifacts:
      - build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log
      - flutter_drive.log
    publishing:
      slack:
        channel: '#checkin-app'
        notify_on_build_start: true
      google_play:
        credentials: Encrypted(Z0FBQUFBQmZnWTZMcFFqcjNpeHoxZl9JSXNiWFVsSC05ZzJ5bWdRVDNrVjBLZnBoWF9uQU40aFJpWWFYWF9NVzF5YVRpTWQ5eDZCdml1MTQ4QV9fa2loV2VxRm1TSkI0NVVWMXJFWXA0MVN2VWtQcnktYUkwdmJUdmZSWkUzdVhwUWhIWkRyLVI4REhMX25uNTZEbUlqeFUwbkJTd0FuOVZnNVIxa0dVa29XbmhWU2FJN2Z6Z1ktQmJDdm1INE10OG54R3JnUWdqMEJtLVlwRU9fSVlRdGVqUXZKcnZ6UU1KQnlkMWJ5UDB1RnNpUjI2YlcxVlBlYWp4X2I3S1JaWnVNMVBwaGlrRm9lanZXZWxUMnJSazlUYnJKaXd3R1ZfRVN6UVZ5S2h5ZmxGY3plTzhfMkFmdlF5cmpVR3NleXRETDJqZXJTUmNHckt2NEdBRzRVdHNsQy1HeElNaVgyM1pDcjJmcTBFRHRmU3BnN25SVUlaNXM3Q25PWldVbWdUVDdMR1gxMl9PSW5SNHpkY2ZuOWgxaTVRakRKbHhRcFR6V3JsWllGaUVLbzNaTGxUa01jQV9tYVZxTjlqb3hHd1p0b2NqbFo3bWRUd1lBcVQ3YlFXa3hXNUQzbXV2YURWOFFQX1VscnZFYU1BNkRXWEJNRm53OTNueDVQNzl4V1RwUUNhRDBEU3BZVXdrY1d0VGYzampYOEVWZzk3bDk5ZUdxX0ZwZjVRbU1kS1h5aW5YX1Zoek1VdkNJLV9fSDFLNnNsMExkRW01TUxHRnBldVlsWXVSSmdBYmtxU0JBdDQ4VHV0d3k5YTUzaXRKdl9pLV9ETXpKNHpSeWY2OHY2ZUJZd0VJeWlmQ25SRXJzRGJpOV8yZGJxMDFQUGNhbVdseU5lMnQwSm4zcVJKV2ZhaWJKd1d3UWozbmdBeVczOW1pd3ZZTlZpRW1EaXpRc3JjRElEOWUyelFVcGgyZkszdmw0S3dwd2VRSXNmZENTanlfREJkLTV5VGxyT216X0hOT1luYnFWd0lTWUVkQUlDYWtHbnNueHhuNmlYeGhUa29QNm42Ni1zSEZ1YnlpRG54WXdod29nMUlFSnpDS3BhUVpRa2lYNi1WcmJYd1FlZDFKZGViNDJEc3N5TzNpc3FWX2hqX0dVd2xwa0xuMXlJaV9menNINzVKQmlQZ0FwZ0ZxVmpvaDY3R285b2Fsa2VjbjV0T2xaSTBPLVJNODFPeWxQVHRMbDdPV29wWDNvY3BpczdSckxMMmZjY0lSaDZFOHZNZTFVc0NSMkRBVEdzeWFTbHdNdU5kRWlMbjlzeXItcGNZYjBGN0Jpc0JtQk1pRTB2VE5CdTh0TVFINFdPTjgwdkY2cTVQRDJNNmZjMmZpRmYyNmphTG1Pd1N4cmFvOUxmT2lSSWgybzJLa1Nndy1Cck44dHAyUFhxR1Y2NmtxN2NXelBhZV9DZDk0OXVVZTIyOElqTkthVUVKY0VjZ2xub25iWU1seHJhTWJpb0t6QTVQSlJ4eUZUeHo5Yk5YbUNvcW01a2xJbl9TLVlpd3J1MDNiOVJhMzY5UDRqSTdXS0toRFU5ZkVMNE1QWjZucWxzbWVqOGRaOEZCNVlwa1VRZTNibDdieEZnV0FCal9TaW16YnQ3aExuT0drbE41VmFhUWcwWGdNNGxqUFY2bk1TaVNCeV8tUnc1aXNUa3pHaUxDbEpoY1JYRjQ1NDh3Nl8yVTRSeWl6TkNSU2xWbjBsNVF0Mk04Q0xYU3RZbXdkNENfTVZIYVdhSE5QeFhpbTZ1U0dLSlRIalJZTTJTSmxSUWQ0eUpQQmc0SmJ1UGkwY0Z0YTF1TFpJWmRZeXl6SURMM2hHZFRCQlpGSGNSeUM0ZWFmUHZuRkZINWduZmRrMXN3Rm5TN1NUU0k2RjVlWFJFeG4tN2VBUHplYVlMV2FGX3R3NzE2NmFHdkFOeFU3bFQxUEl5dTNwOXU1N2I2OVZsNWVKOC1yaDBGRHIyWmJJNnJPbzBuYXQ4bWRVd3NYd1IwNjdWUlV3aERRSmtsY2tkeWNuR3RqOHpFM1NJM3p5elZkNXU4MFAySFhvMFpaLVhOWHAwaWJ3WTFEX1otWEFkUnRLRUdDOU0xNl82ZGZBbF9OU3cydl9GTTVnc29qeXJ4S3pZQWtsWDMwbEFQMlVFQmMxbWdwZzNpSFRkaVlkUDhGVVZjb2dmUFdWd3lhWHBxV2dGRG5OTWhBV0lfRFJsTUVwRXNFN253WHZDSDBkRVpYVklXQm9UV1lsV3pnNHByaVFkQTE2RW5vQzFaMTluMUlUNkVDdndnV2RVY1pVbHdmdmx1eXRzaUxPWEJ3U3hpN1NWd3FUQldNTDk1dWV3N0J0XzViUnFLSlZxUWg4bUw2d2JVV2ZnLTNqRlJkMTYxSTN4czdqVFBjRnZ6cHF4Z2ZIM3A3NjBiTFhCbnFzUHQyOUs1dHBibG9RRC1yYWFDU2NyUUxGTkVhekN4R0E0cVY3SF9GamFwSmZFeUdWN1l2cnYySXlyalRycm9mQjNnVFQySDhVSF9zX2ZJZENlMjI2OXk3NU9rVnRBSU1Fb0JnZ1FrSjJYUzBMekNPVXRVUkh1OFBMdGVZQjZuS3JYT2hMRmZfS1RBcWNfTEpJZGlOQmJLU01wSFBrZGlkMjRDLTRiQUhHQU9Pa0FkUGVwLVlOY1ZuMHROZHJEWUc2ejFTSEU0cXlEOEk3RzAxMUF0T1BrT2pkZmpVSXNKdzltcll4eVIzNmZ1NjJoRnFVY1VoRWRSOFZvQy1LSWVsME55aG13QUpyTmhOeXhNM2NLNWg2cnN0MHV6bUhpc3ktMlFfT1dNcy1sNk5sSjNmVTRBaTB6b3A2WkNmVm9vWG01OTNFdXdORDRvS2ZIcG1LRjNGR19Gb1lsRVVUU0VXWjA0LUxlWXI3bDdOSTVHdC05S2NHa00tVm9ZdHBIdEtsYkl0X09URG5ac2cyNVZUQmU3ZGlscGdGLWdRbm11eEMtWW5xTXlwTE9UMXlBUmF4NGswV1F3S0t2ZlpQR3JaaWR1Wl9TRDJpb2RKUXFfY3B2c3RSS1gxQ1lPb1JGbVJOZ29OSkVzRHpxQm9iUXJ1Mk5qcTVGNmdoN3NoaEduck5WZTBXWFJIVEtWYVVQdHF3OXVuVFI4dFM3aXFBQ0p2ZFVRZWRVOUtPd05SSWNIYVZ4ZEZRWEJHWnVzSWxUZndEcEN4TXBzMDhKd0dub0dYNG9Sazc5SDk3ZWZaNXNBY1hwanljc2NpQWpxUW92YlBzcGtQaFZjLUJwNjNXZ3pwMzhvcXhDSGxSZDljbG50bnRIaUVFbVk2dmpDY0EtT2g2aU9fbHZCTHNpR1ZKc1lJN1owWHl6WHNSc3hLaG9Dd3dQaUYwWjgtM0lUTzMyb1NDZ3V0a2ljYUxTa0ZRZXh0d19JUTc2bi1PZjBaTG9XMnoxaTlQRTYxVnFuQ1A4czJkajMtTUduOVlDbDJTbURyNENDQWFWVDV3ZGV5Wkc4MGEyWkY0dHVKTUROSFdlSFQ4OENibWVvMjJvc1U0TExrUlZaMUpxYWdSZmpxUUVQRXlYX0hqeTg1azdfeEZVQ1kxYUYtZGZrNHNHckJ3WG5ld1hsX0hhRzE2bDB2c1pGd3FxVzdxM3REaVZ4UXc1ZFB4dmlrNWF2eVZ1aExOWV9rODRIN0pOWkE0Rnd2NkZ2RTNMR2p3SGtqb3RxajBxdEhCMHA2aEtBeVFTMm94VnprZ0pvUllqOEUxOVVIZjRsV3dNRkl1Q0Nab1Q2Zno0RllLZ3gwVk5EUF9HaURwdHVQU21SQnRsSlBCWlBibVNqUU8yNjM3Z2N6b3hmRVplckVzdlU4WGJGMDFZelRpcXAxNWRkbmwyb1N0NElDMUdZR2ZMbUJ0cjhETVRmN3BuSlJXVjBXaUpKNzZhZTRhVWVRUHRlaFpxaEV0V3ZfdzMxMjRrRU55d25ZcnpiZG1hRWR1bDU5RkoxZktoVVJ3dVRIRVVaQ09fMlVOU1dGcDRSUWNuT3kwYllPTUR4Y0VRR0ZxRGI4V0lSODJOYnlfekVMTzRGU3VEZjhoSWZGdGFPRS1aWW9kSXBRRXF2S3l4MGxnTXlnWjRfQy1RQ01GQUxkcDc0VmhrN1g0TDNtalZjWU9iNXVGbWx6T09pdDVoWkxHWlhkZzQyTWN0Q3RPb1E5V3I4TWZseko0My1FRkhNSGZNVXRDZmNtdFlQSUozM2w1NTZqR3A4NnZSUmFOWE52WDh3eW5JOUpET05xQ3RZaXdhU1dWYlFlM3ZwMXh4QTJRPT0=)
        track: beta
      app_store_connect:
        apple_id: stefano.saitta92@gmail.com
        password: Encrypted(Z0FBQUFBQmZnWTZMOVloRUtYSWJjWU9sTVdDU3dYRE1TNGVRUWhXTTVTQjVmMmtFWnlFT1pQRlV6OThnMk9rODE4NE9fTmp4UjdkcXVKTUFqX2p3bmp2V0luV01kRVVWN3BBd3ZfOTJkQWg0LS0ycUhudUlhdVk9)
  build-debug-android:
    name: Build Debug Android
    max_build_duration: 60
    environment:
      vars:
        ENV: dev
        ANDROID_FIREBASE_API_KEY: Encrypted(Z0FBQUFBQmZnWTZMeEZ6LVh0WXZhQnducVdCbWZad0NySHMtV1BBaDZzNHFRV2I3Y0wyTUlUeUw4NFpoRHlWUmFIZDJTOWNoem9XQUViQkJxSE9rUmNzUzZOM2lTcVk2MVk5cEQ3NmNtbU8xNUpDRDVHZmY2NHkzamtaV05DeWZVZ1RLX2Q5TGkwVGI=)
        IOS_FIREBASE_API_KEY: fake-key
        CM_KEYSTORE: Encrypted(Z0FBQUFBQmZnWTZMY1JLODRyVXhHa2hzc3BDR2pPQzBycWttYjlTc0dLdWN6a0JKOVEzXzR0aEE5d0tyc0NsMlcwYUlydWxtdU43LTMzYTF1bExyMENKSnUwdmZxUUp1em05ZmtWaEEwS0xKcXgzOFZ0ZWdIR1BvaHZGVDNNMXJaa1hsM1ZPMjlDVU1mOUJQVnpmcUluRGpkWFRjMlVibGRnb1h2cTI5cEY1eUM4MlNqR0hnZy16c0czY1RFOFN4Q1QwajZja2E5XzE1QWl5WGhSVXBQeF9XMnYzcUZQaW1Xb0EyTEJNTDlQbVNxdEZodGljQm5jQXluRkZkS3lYbWFoc2pqTU0wN1NWSkptVFlzUTdoTnFLRDNiTlNQVXpvTjJLcEFmSUcweFBHR1Bja3ZGUmhpNE1DdDJ1S2ZjQzBnVF9hbVgzYmRyNUZTeFNBSkRfSXJWZnNQNzRoaXVlemdoY1hqWC1oeURJc2RLZG9ZeTd5TzFENFk4VlJ2clZESmkwS05yX1lRV0lKSzl4Y0NPSnphVUlwODA4Vlk3aERVaFdvbWVxdjNqbXF4MFA0UlIzUlFodjhVazBDZXdHYmdYQ3VoTjdScWpkOWRDZzZCOFdSSFh5Sk0zQjd2TzRERjJCdEFobFlKeXl0VFFIaEJKblAyX21sUWtFZGhOaHZEd0hKb0NXRTVuWGZKNkcxZWFMRFRCTjFYeXBLaU1KYldSeHpoM00ydXlsOWIzLUhlMlVxT2RPWVlzd0FqaEpxeDZ3akdBaGNIaUk5cTVBMHlzX1FaQzZVd0FKUU9rTXdjR0xYZi1EQVdjQjFFX3ZZVHVWcktsNG1FUlEzYzZxSXdiQlR5QWNsU3J1U3FmMXVQZzl4UzdwWWpDM0RFeURUT2Y5U3g3UTJmQnBSS2gtSXd3YkNzZzlLbFYxenM2S0xMR2J5emo0cmdvM05ic2JWbnBLc0RTQXpINnpoVi0zdF9KTlEtRW1XQlFXTXAybmVkSEdwTVlUTzVyVkVGZXlWS1dIWnJ2Q0RmOElEbml4eHc3T2szR3Jwb01tU0I4RVJlSU9tRE9JYkRVY1hRS21NY0RLWGRpWEl3ZFcwY3M1Z19ZdWIxU19mMm0ycHo4bUdJd3lwUEc5QzF2Ykk5REk1TzJhWmR0dEg1Z0dWaGJpOEJuUVdtM1RqWHhGbm9RY0xfVWUxV0FRS3p4RzczVWFSSHhNWHVIZnlzYTYzU3hlYU91a0M0azBrclRtSC1kRHdDam9tdmY0MUtqc0F5dWI3S2RObEZoY2kxaEliUzNrSVpCZVc1ODd1NGROSlctc29uajAwODlDMGp2VldJVjhpTmR3a3RkQ1ROaGlSTXBISW05aVZzRkF5bU5TYWU4NEVVaHAxbWVGU2ktR1RsUkxrdWxUMmpSdHRoXzhUQkdvUmhXeDZjN2NZOEUwejM1alZDTEJ0M3ZDQTRUaEZId3pjMFhmbUM0Mmc4VEw4S1VNUEh4RXlPQzZrWjZLSWRyY3U1cjNpMUdJdjYyZFJBU3pwYXBFekdNSll6Z3hVZy1Vd0QwSDBaaXdPQjVVVFVrSnFDS3VRMVZqei1qZ3BoX19CNFpvU29wU0twNlBGUVhBM1pzd1ByRDRONFVQRkNUR2NFaUtNQnZjMDU2SXJ3ZEVSSm5zZFk5OUlmNkgtT2hHMTNXMlRLTkJpcmRDVGk5U2RybGFLdU44N0VmYXhCMFNSSEZUZV92VHBCVWE2VGo0cnhzNGZUZTBoQTBEaXJTM093Z1NOLXhic0c1WXZWUUxER3pXM1FZVlVQMXVqRjNKRHlMNWZiU1lEeVhYR0l1RjlmSWpUMTFDX3M3WlV0WmZ1M2JxMjhpeDFKUGYzTzRGVWJYZlpubFQycGNNaWkzOEhLNG9mSEl3ME53UnlUbzVKcEk5VnRjd3cyeHFSaVNxNVRlY29XSkROSEtyMk9zRHRWNmtSaGFUSXJwT29ORHN0UEdvMWNTbDdhQm9fTV8xOE5PcFUtVi1GeVkzZ0ZGWmtfQ0toTXRnelU0TFV4MWlFdnJVZUc5M2RhWTloNng2ZnFpa29oeV9mUzJGcHdHWGVTMFdKZVJVYmkxbjFLbEw4SU53V0ZQT3VqaDJ2eUtmeDBvajgtZ0pRUEVrcDNVaTdCOVpJd1NOYUZxSDNCZng2UXNnZm9vbm1PVTNDV0ZzeUZTMjRRbE5WRHIzMW4yU1M4Z0VIaFU2bktwUkh4X0hyandFVjMtLUt2TnR1STlpTEpQNGdQSUMwMFdfUkxHSDJ1UjNwOW43VGcyVEZJNVlPSzFKWl9HbFV3UlBZaVU3SWdqb0lyVmpSVnFqVmFOdHBXMnJYOHNfbC1WT29paG83N2J4d00zenktMV9BbUNFdmotS09talZrV1I2VWxMM1JxQXJpX1FMeGNJREFfTFBFVUZ3UHlFM01HcHhkM1hJaklranZIektxRmdnN2dhLS1JLVhGNzhsQ2tTUUtueThzenRLajJXYjJ5eVBoQ3dDR1paLVFoS3FYNVpCZDZLUUFjbmhpdmFOeW9pcXVTRi15S2w0bmg4a0ZQMVBrbzF4T3V6ZHJJYmdwZ2x1b0pFNXpFZHZneTBJQ2pBMjRyWS1RaFNwSmh6MHNiUm1xNFVDb1pJa2RzLW1yVWxLUWtzS21kdExRdnN0THM3T1VLQnE1RnBTN0VlZV9ydmE0VnpTWXV2aXNtcjlzcGxNcnd3bTNUU0pPNXNzZ0lpRlRhNnp5aHc1SVBrOGtZbnFqQzREWUgyYVMzSG5EN0R0dDc5OFhDdkJRT3Y5VGxvX19wVEp6c3FacEhSZWxKLWlMenNnTFBNTU93NU5xQ3ZaS29QX1k0bV8xNGU2Ymo5eld3RmNVVXhMZkRLU0M3SDVVU3BTeF9GNkFUZ0R6TG9yOF9rNGloaExrZnE3SVp0Yk1mS2VJRWdvWFB4M01qaWlrRUlSMm1wNkQyeXdWNWltME5oTnRYY0s1Ykp5enlTSHhZREdSTmU5eXd0a0pFMnlFVEdtNHUxTjdxRmZlRUY3SGpWYkx6WUlSaEJVVjFmcUozbThENVAxUWhWWXhGQnNkd2hEM2NrOS1VNi1Rc1hZcnB2UHVqc1pVSWRELVAyN1E1aEhWQ0RjN1duWDBzY2c2Q0RHWnk0dE1pRktJZWFmelNoNXpsR3R3MmR4ZlZCRlloOHJFd1pwTVhWNGJwMVFJYS1raGkxdllrUnNmMGN2YkxoNGQtR2FDbEdPR0QyWnRyWXVDVW5qTUkxc1AtbzBWSmxXTEpkZGpNR0RlTWNRMUx5by1kMlgxVUtJSmNOUE9DekdSRVJyc3BwaEZWaFhOU1dRekxZdXM2RU5lUUlGRlp4MFp6d21EdWhSamdldEN4LUNjajVpY2lyNzZIbmlxV2pLT2tEbzNFUG9RVThJcnpGOVVqOHpBTzU4MzdEQjY1RXdjc1Q1V29PWjlyZTVFblZIX0JKd3JnZ0FWaGRUTkIwMENNZmt5ZFp5eHo5UXhHZ21DSUZBRDVIaTJHRUhRaXdycE10Z3V3ZFliSWN4anEwZlZ3b3dLVEhyVnNJVzA0ZmhmUm5qRUFrSkJjMHNfcmRLTHZ6bVpxNlhzalR1R1c1WjROR3hRdzZYWHhQcEVwQU1GZGhzS0dSNEh6amJpSXFhTzQwd20xZHVBQ3dtdy1OSzRsTm5kX1ZMOHo4SlhkckhJb1JaanpsUEpYN1NwS04wR1VaRUJkVjRIMnNGbEduZm5rWVlodVB6Y2hqcDNZdkY0WnJBLUNwUjJvRFhmOE9FcmY3LTNzR1hxdlhYY0w3Nk9OTDVGV3hVY29ONWNrLXBsS2dVVjVpNVBjalRaNjN2TmkwSkRyd2lWc2Q0WDhXakNJWGdxd1JldXowZC04bjBYbmFLckl5aUZ6NjZSbWhjZHkzRVh1bEpqT0VHOHowVEl4dUNkM0NEc2d0Q2lyYWpnczItMjVKWXNIRER4cldQLXg5M0xUUWdrQnFNNExnQl90eDI5T0FPLWpWY3hDMVB5aFlTR2lxZTNmRkRDUlZoUlM0cGRVZ0tEbWxjRkI3YlZfZk5qdnpMYzBlV2pWUTR4cUVjM2pYVHFsN21mdG5QUHhJdm5oLVFQWnNzdW1IMmtIN1FQaC1FZzZMNDA0dHcwel9idjNYNUNLcHdEOC1oMUx5TWwxMFpvOHpCZXQ2NjR1RkdaY0hFeGw0bVBUQWdtNm90Z0xvMXIxSWcyOG5wb21qWENfalpsMHlPdmdfNUtxN1RfMXZuN2dZNFZCNmgzWGJIRzdwUGZyZkNDNXc0VGhPaVB6TW1USzV0VmhqSmFBTkxhbFNmZi1PR29HcjBQSGNRam8wekV0QU9GVVVlbzNlUHI3V2Q0Z0g2X3Ywd05SN192cWtDdnIzejNDR3lWaWphanZuQUVMYlNleXFKQnhoZW5IVGIybGpxYjFwbnhvek1WVEQ5QVpTZzhxc3hKOUpjVXVYZDJGamc0WDlyMVliUGJTdndxZ2N1SFZ6V3BTa0VWT3dOT2daMEViUnVCcDh3X0VNSmkxTlV6QlpISG40QlI5SFBUQ1VvM255U1NFSUhsWWlsVVQ3Qnc5MlhMalA0cHNETE9GYV9xUGNKMDRCcXh0T3ZmajY5WDYtY2hoeW50cXFwMmZEcFdYZkpfakRaODdJTVZHdkJKckk1QkZkeDh1NlIyN3dJbm1wNUtXUnJ6ZHFDY3dISzVYbnc4VjhFX2s2UXVhN2dSc012SUdHbnBFeUtGczlEaUJvblJyek9zS2JXRUJjY3dSQjJPTF85ZjBjYXFvanFJeWhXcXF0cVBaQmxINFEyN3lpZ2RsbGxyQWpCeldiMWx5OWZXbWZ5a1VuZ3RCNllVUGlRNWVjVTZ2OFQ4NVh4LWdueUVBY2ZFaTVuaFdwOE1zOF9xQV9oZlFoSU15ODdGNUZWTmtBUmpZV3d3c2g4WUZTdEZNb2p0TEtqMVg2NV93eDVLckpscVRXUGFmYU8tNFRpN3J6SC1IYzJHWTNnby0xMGlldnhWakE4aHdQbXhwZnJFbExUWTNJYUZuX3NaM2hGYThHMEZlVGZYUkxhX2x1bHBhdkxSZjFBY2JRdUQ5TmpkV3Z1U3F5QmpFMGctQURoNGh6M01FaXplOFhMMmd0VzZwQlVTcl9sOWhhLUN6SEtDaVBMcHhvUlBZZGpOY1NyNGVTOXJnUldsR2dCM1d0S1lNWlo0dVhYb2pRZ3I3RFJOZWphZEJRMkd3aEFFNXYwNWNldHJIbk0tMS1uSVN4LWlOZlNxM3F4V285bUxnZlk3RUZseUMxUUF2TVROeFBpbUMzWThGM0xBQ0ktU3FUa2s5WTdpWjFqZy1Md2lYVE1IS3JlN29sWXpWMzg4OWl2VU5lYWNXOU91ZlYyRkc4RmMzU2FUMzRSLVJ6U2ZYZm9wVi1HWUQ2ekdDRVB5R1c4VzRBdno0VnNMZENnWjJFV0VNZm4xMGVQeUV0TFk5VjVOclhncGFDMDdKM3ZtNU5YdFllWnhtZHJZWVh1Nkw1dk96ZTN3Tk1WMS1lRE5VSFFNd0NtRHJHbk5LZTBVdE1TQlFkejcwZG54REtpdUNkdDAzbEt0NG0xZF8xRm02TzNkNnVQLVVzRXE0LXM4RERKdXF2blJMX2NkRmx5Z19aMkgwelBoYTJ1RjRnR2w5cDIyeWpmNGRaei1TcGwwRGQydGpiM1VMVVp3dGhUZGx3X1pWOWVPWTBKZUFWdkYwVFVNZ0xjRnRCd3YxM0l2NUNmZllfcFAzVHpWOEM1Nm0xOGUwYjBTYkQzOUNPQUg5OTBVcWdRZ3l3SmtnX2l2YjZUVE5kb29EQS1NQzZ1bXF1SzRzZ21sMDRkOUhfVXBuYUdsYnBndm5NeGdwYnE1ZlBsVHlLTExMMUhUb2NFOGpEZTN0QkMya1dOcWxicnB0OTZTVi1TVXdRTV91dlU0Umg3TWR0ZThLSU1OQ1F2MXZZSGdnc1EzRjNjTWQtZFl0X28xWnFHNHNyNFQtdGcwbzZnQzBpUEZuU21HTG1FUkIyYXhoX3VHSUNFYk9xaDR1ZmtGdW1ISkhxMDJ2S0dhQmhLNG1xS0VybVp5SlUzWGNuZ2p0eUEyMVpvOWRCaFlYSy1fNlRQaG9oaXZzOE0yMENoYnd4NDhtMGVXa3RCREZXN00xdkNGSEcyY18xU1VwQmxzckY2eXg1azhtVFJGbWxqckd4WTZiamphLVIwX2RBUXNTWUlGOGtxLTVkOXh3Z0MyQVFESFo1WVhqb1Vad0N0UzZGLWx6bXEzVjlLeUJtWFkxbWNucXR1clRmZ3Q1TTdNblBiZWtha2NqcmVBXzM0bkhBPT0=)
        CM_KEYSTORE_PASSWORD: Encrypted(Z0FBQUFBQmZnWTZMTkVTbWMtVm9vV3FFUEEzSEtWZjJNVHhpcFVOZlZtVHM3aWRfSW5tMmNaNkFtS1ZGTTdxMnl5emRLUEhrcnJ0SEJIVFRuT0dLOWd3cUhYZ0tWMTM2dWVGUEZvazAzajZOa01GLUNiX1R4cTAzV2RqR1Y2UkhGTDdjUXloRThUS3M=)
        CM_KEY_ALIAS_PASSWORD: Encrypted(Z0FBQUFBQmZnWTZMYjdtd19LcHRhaDJtbTF4VTk5V3NVWFh0NktWbmc3cnJWNXd1ZGZTTjFNb0tWOU9EUFhQQlJLLTY0TFZtaWc2MnZOYmQ4M0dtUURLXzNUNUhLOXpSWGoyOUJ6SDRVTTI2Y3haOHdWVUlSUkRLN2IxaFdleTBfQlZ0Zk51d1NrMjI=)
        CM_KEY_ALIAS_USERNAME: Encrypted(Z0FBQUFBQmZnWTZMZDVPWVVnYmpTYm1WdGwyX1pZMm5oOEVOU3ZMRS1ZdjVoME8tQmhYYV9mN0ZNWDR2LWJUNVNLRDVrQTNJaHJGMkNfOFR5a2RuQzRxVGhRSTZLVVNjbkE9PQ==)
      flutter: beta
      xcode: latest
      cocoapods: default
    scripts:
      - |
        # set up key.properties
        echo $CM_KEYSTORE | base64 --decode > /tmp/keystore.keystore
        cat >> "$FCI_BUILD_DIR/android/key.properties" <<EOF
        storePassword=$CM_KEYSTORE_PASSWORD
        keyPassword=$CM_KEY_ALIAS_PASSWORD
        keyAlias=$CM_KEY_ALIAS_USERNAME
        storeFile=/tmp/keystore.keystore
        EOF
      - |
        # set up local properties
        echo "flutter.sdk=$HOME/programs/flutter" > "$FCI_BUILD_DIR/android/local.properties"
      - "#!/bin/sh\n\nset -e\ntrap 'echo \"\\\"${BASH_COMMAND}\\\" command filed with\
        \ exit code $?.\"' ERR\n\n### ANDROID\necho \"Configuring Android for ${ENV}...\"\
        \n\nandroid_template=\"$(pwd)/android/app/google-services.json.${ENV}.template\"\
        \nresult_file=\"$(pwd)/android/app/google-services.json\"\n\nif [[ -z ${ANDROID_FIREBASE_API_KEY+x}\
        \ ]]; then\n    read -s -p \"Insert Android API key: \" android_api_key\n\
        \    ANDROID_FIREBASE_API_KEY=${android_api_key}\n    echo \"\\n\u2705   ANDROID_FIREBASE_API_KEY\
        \ set!\"\nelse\n    echo \"\u2705   ANDROID_FIREBASE_API_KEY found!\"\nfi\n\
        \ncp ${android_template} \"${android_template}.tmp\"\nsed -i.bak \"s/__ANDROID_FIREBASE_API_KEY__/${ANDROID_FIREBASE_API_KEY}/\"\
        \ ${android_template}\nrm -rf \"$android_template.bak\"\nmv ${android_template}\
        \ ${result_file}\nmv \"${android_template}.tmp\" ${android_template}\necho\
        \ \"\u2705   Done!\\n\"\n\n### IOS SETUP\necho \"Configuring IOS for ${ENV}...\"\
        \n\nios_template=\"$(pwd)/ios/Runner/GoogleService-Info.plist.${ENV}.template\"\
        \nresult_ios_file=\"$(pwd)/ios/Runner/GoogleService-Info.plist\"\n\n\nif [[\
        \ -z ${IOS_FIREBASE_API_KEY+x} ]]; then\n    read -s -p \"Insert Ios API key:\
        \ \" ios_api_key\n    IOS_FIREBASE_API_KEY=${ios_api_key}\n    echo \"\\n\u2705\
        \   IOS_FIREBASE_API_KEY set!\"\nelse\n    echo \"\u2705   IOS_FIREBASE_API_KEY\
        \ found!\"\nfi\n\ncp ${ios_template} \"${ios_template}.tmp\"\nsed -i.bak \"\
        s/__IOS_FIREBASE_API_KEY__/${IOS_FIREBASE_API_KEY}/\" ${ios_template}\nrm\
        \ -rf \"${ios_template}.bak\"\nmv ${ios_template} ${result_ios_file}\nmv \"\
        ${ios_template}.tmp\" ${ios_template}\necho \"\u2705   Done!\"\n"
      - cd . && flutter packages pub get
      - cd . && flutter build appbundle --debug --build-name=1.0.$BUILD_NUMBER --build-number=$(($BUILD_NUMBER
        + 100))
      - |
        # generate signed universal apk with user specified keys
        android-app-bundle build-universal-apk \
          --bundle build/**/outputs/**/*.aab \
          --ks /tmp/keystore.keystore \
          --ks-pass $CM_KEYSTORE_PASSWORD \
          --ks-key-alias $CM_KEY_ALIAS_USERNAME \
          --key-pass $CM_KEY_ALIAS_PASSWORD
    artifacts:
      - build/**/outputs/**/*.apk
      - build/**/outputs/**/*.aab
      - build/**/outputs/**/mapping.txt
      - flutter_drive.log
    publishing:
      slack:
        channel: '#checkin-app'
        notify_on_build_start: true
